/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 19 01:18:23 GMT 2016
 */

package org.objectweb.cjdbc.controller.backup;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.controller.backend.DatabaseBackend;
import org.objectweb.cjdbc.controller.backup.DumpTransferInfo;
import org.objectweb.cjdbc.controller.backup.PostgreSQLBinaryBackuper;
import org.objectweb.cjdbc.controller.backup.PostgreSQLPlainTextBackuper;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class AbstractPostgreSQLBackuper_ESTest extends AbstractPostgreSQLBackuper_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.AbstractPostgreSQLBackuper.getBackupManager()Lorg/objectweb/cjdbc/controller/backup/BackupManager;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.AbstractPostgreSQLBackuper.<init>()V: root-Branch
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      PostgreSQLBinaryBackuper postgreSQLBinaryBackuper0 = new PostgreSQLBinaryBackuper();
      postgreSQLBinaryBackuper0.getBackupManager();
      DatabaseBackend databaseBackend0 = null;
      try {
        databaseBackend0 = new DatabaseBackend(",", ",", (String) null, (String) null, (String) null, false, "");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // backend.null.driver
         //
         assertThrownBy("org.objectweb.cjdbc.controller.backend.DatabaseBackend", e);
      }
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.AbstractPostgreSQLBackuper.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.AbstractPostgreSQLBackuper.getPortFromURL(Ljava/lang/String;)Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      PostgreSQLPlainTextBackuper postgreSQLPlainTextBackuper0 = new PostgreSQLPlainTextBackuper();
      // Undeclared exception!
      try { 
        postgreSQLPlainTextBackuper0.getPortFromURL("fTzX");
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -1
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.AbstractPostgreSQLBackuper.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.AbstractPostgreSQLBackuper.setOptions(Ljava/lang/String;)V: I3 Branch 1 IFNULL L75 - true
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
      PostgreSQLBinaryBackuper postgreSQLBinaryBackuper0 = new PostgreSQLBinaryBackuper();
      postgreSQLBinaryBackuper0.setOptions((String) null);
      assertEquals("PostgreSQL Binary Dump", postgreSQLBinaryBackuper0.getDumpFormat());
  }

  //Test case number: 3
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.AbstractPostgreSQLBackuper.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.AbstractPostgreSQLBackuper.setupServer()Lorg/objectweb/cjdbc/controller/backup/DumpTransferInfo;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.backup.AbstractPostgreSQLBackuper.setOptions(Ljava/lang/String;)V: I3 Branch 1 IFNULL L75 - false
   * Goal 4. org.objectweb.cjdbc.controller.backup.AbstractPostgreSQLBackuper.setOptions(Ljava/lang/String;)V: I28 Branch 2 IFEQ L83 - true
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
      PostgreSQLBinaryBackuper postgreSQLBinaryBackuper0 = new PostgreSQLBinaryBackuper();
      postgreSQLBinaryBackuper0.optionsMap = null;
      postgreSQLBinaryBackuper0.setOptions("");
      DumpTransferInfo dumpTransferInfo0 = postgreSQLBinaryBackuper0.setupServer();
      assertNull(dumpTransferInfo0);
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.AbstractPostgreSQLBackuper.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.AbstractPostgreSQLBackuper.getDumpPhysicalPath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I9 Branch 4 IFLE L118 - true
   * Goal 3. org.objectweb.cjdbc.controller.backup.AbstractPostgreSQLBackuper.getDumpPhysicalPath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: I9 Branch 4 IFLE L118 - false
   */

	@Test(timeout=300000)
  public void test4()  throws Throwable  {
      PostgreSQLBinaryBackuper postgreSQLBinaryBackuper0 = new PostgreSQLBinaryBackuper();
      String string0 = postgreSQLBinaryBackuper0.getDumpPhysicalPath("<Backup> ", "");
      assertNotNull(string0);
      assertEquals("<Backup> /", string0);
      
      postgreSQLBinaryBackuper0.deleteDump("<Backup> /", "nn[Anfl#");
      postgreSQLBinaryBackuper0.optionsString = string0;
      assertEquals("<Backup> /", postgreSQLBinaryBackuper0.getOptions());
  }
}
