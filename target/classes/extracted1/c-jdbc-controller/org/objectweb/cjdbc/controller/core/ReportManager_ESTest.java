/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 16:41:59 GMT 2016
 */

package org.objectweb.cjdbc.controller.core;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.awt.Dialog;
import java.awt.TextArea;
import java.awt.Window;
import java.io.PipedInputStream;
import java.util.Hashtable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.controller.core.Controller;
import org.objectweb.cjdbc.controller.core.ReportManager;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ReportManager_ESTest extends ReportManager_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.getReportLocation()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      Controller controller0 = new Controller("reportLocation", 2146, 2146);
      ReportManager reportManager0 = new ReportManager(controller0);
      reportManager0.getReportLocation();
      assertTrue(reportManager0.isHideSensitiveData());
      assertTrue(reportManager0.isEnableFileLogging());
      assertFalse(reportManager0.isReportEnabled());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.isReportEnabled()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      Controller controller0 = new Controller("", (-890), 906);
      ReportManager reportManager0 = new ReportManager(controller0);
      boolean boolean0 = reportManager0.isReportEnabled();
      assertTrue(reportManager0.isEnableFileLogging());
      assertTrue(reportManager0.isHideSensitiveData());
      assertFalse(boolean0);
  }

  //Test case number: 2
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.generate()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.core.ReportManager.write(Ljava/lang/String;)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.core.ReportManager.writeHeader(Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      Controller controller0 = new Controller("cp6P`|=4i<s!i", 0, 0);
      ReportManager reportManager0 = new ReportManager(controller0);
      // Undeclared exception!
      try { 
        reportManager0.generate();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.setGenerateOnFatal(Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      Controller controller0 = new Controller("T,wT-cPs", (-1479), 1246);
      ReportManager reportManager0 = new ReportManager(controller0);
      reportManager0.setGenerateOnFatal(false);
      assertTrue(reportManager0.isEnableFileLogging());
      assertFalse(reportManager0.isGenerateOnShutdown());
      assertTrue(reportManager0.isHideSensitiveData());
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.setGenerateOnShutdown(Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;Z)V: root-Branch
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      Controller controller0 = new Controller("eLjcqJvnoA'~hJf", (-160), (-160));
      ReportManager reportManager0 = new ReportManager(controller0, true);
      reportManager0.setGenerateOnShutdown(true);
      assertTrue(reportManager0.isEnableFileLogging());
      assertFalse(reportManager0.isGenerateOnFatal());
      assertTrue(reportManager0.isHideSensitiveData());
  }

  //Test case number: 5
  /*
   * 9 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.writeControllerSettings()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.core.ReportManager.write(Ljava/util/Hashtable;)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.core.ReportManager.write(Ljava/lang/String;)V: root-Branch
   * Goal 5. org.objectweb.cjdbc.controller.core.ReportManager.startReport()V: root-Branch
   * Goal 6. org.objectweb.cjdbc.controller.core.ReportManager.writeControllerInfo()V: root-Branch
   * Goal 7. org.objectweb.cjdbc.controller.core.ReportManager.writeTitle(Ljava/lang/String;)V: root-Branch
   * Goal 8. org.objectweb.cjdbc.controller.core.ReportManager.writeJavaProperties()V: root-Branch
   * Goal 9. org.objectweb.cjdbc.controller.core.ReportManager.writeHeader(Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      Controller controller0 = new Controller("EXCEPTION DESCRIPTION", 3315, (-1954));
      ReportManager reportManager0 = new ReportManager(controller0);
      reportManager0.startReport();
      assertTrue(reportManager0.isHideSensitiveData());
      assertTrue(reportManager0.isEnableFileLogging());
      assertFalse(reportManager0.isGenerateOnFatal());
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.setHideSensitiveData(Z)V: root-Branch
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      Controller controller0 = new Controller("Suu9z", 1077, 1077);
      ReportManager reportManager0 = new ReportManager(controller0);
      reportManager0.setHideSensitiveData(true);
      assertTrue(reportManager0.isHideSensitiveData());
      assertTrue(reportManager0.isEnableFileLogging());
      assertFalse(reportManager0.isGenerateOnFatal());
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.isHideSensitiveData()Z: root-Branch
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      Controller controller0 = new Controller("", 1600, 1600);
      ReportManager reportManager0 = new ReportManager(controller0);
      boolean boolean0 = reportManager0.isHideSensitiveData();
      assertFalse(reportManager0.isReportEnabled());
      assertTrue(boolean0);
      assertTrue(reportManager0.isEnableFileLogging());
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;Z)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.core.ReportManager.generateJustLogs()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      Controller controller0 = new Controller("org.objectweb.cjdbc.controller.core.ReportManager", 1, 1);
      ReportManager reportManager0 = new ReportManager(controller0, false);
      // Undeclared exception!
      try { 
        reportManager0.generateJustLogs();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.evosuite.runtime.mock.java.net.MockURL", e);
      }
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.isEnableFileLogging()Z: root-Branch
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      Controller controller0 = new Controller("", 476, 640);
      ReportManager reportManager0 = new ReportManager(controller0);
      boolean boolean0 = reportManager0.isEnableFileLogging();
      assertTrue(boolean0);
      assertFalse(reportManager0.isReportEnabled());
      assertTrue(reportManager0.isHideSensitiveData());
  }

  //Test case number: 10
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.write(Ljava/lang/String;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.core.ReportManager.writeException(Ljava/lang/Exception;)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;Ljava/lang/Exception;)V: root-Branch
   * Goal 5. org.objectweb.cjdbc.controller.core.ReportManager.writeHeader(Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      MockException mockException0 = new MockException();
      ReportManager reportManager0 = new ReportManager((Controller) null, (Exception) mockException0);
      assertFalse(reportManager0.isGenerateOnFatal());
      assertTrue(reportManager0.isHideSensitiveData());
      assertTrue(reportManager0.isEnableFileLogging());
  }

  //Test case number: 11
  /*
   * 11 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.setReportEnabled(Z)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.core.ReportManager.setSettings(Ljava/util/Hashtable;)V: I3 Branch 2 IFNONNULL L327 - true
   * Goal 4. org.objectweb.cjdbc.controller.core.ReportManager.setSettings(Ljava/util/Hashtable;)V: I15 Branch 3 IFEQ L331 - true
   * Goal 5. org.objectweb.cjdbc.controller.core.ReportManager.setSettings(Ljava/util/Hashtable;)V: I32 Branch 4 IFNE L336 - true
   * Goal 6. org.objectweb.cjdbc.controller.core.ReportManager.setSettings(Ljava/util/Hashtable;)V: I63 Branch 5 IFLE L347 - true
   * Goal 7. org.objectweb.cjdbc.controller.core.ReportManager.setSettings(Ljava/util/Hashtable;)V: I73 Branch 6 IFEQ L352 - true
   * Goal 8. org.objectweb.cjdbc.controller.core.ReportManager.setSettings(Ljava/util/Hashtable;)V: I96 Branch 8 IFEQ L363 - true
   * Goal 9. org.objectweb.cjdbc.controller.core.ReportManager.setSettings(Ljava/util/Hashtable;)V: I114 Branch 9 IFEQ L369 - true
   * Goal 10. org.objectweb.cjdbc.controller.core.ReportManager.setSettings(Ljava/util/Hashtable;)V: I132 Branch 10 IFEQ L376 - true
   * Goal 11. org.objectweb.cjdbc.controller.core.ReportManager.setSettings(Ljava/util/Hashtable;)V: I150 Branch 11 IFEQ L383 - true
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      Controller controller0 = new Controller((String) null, 891, 891);
      ReportManager reportManager0 = new ReportManager(controller0);
      assertFalse(reportManager0.isGenerateOnFatal());
      
      reportManager0.setReportEnabled(true);
      Hashtable<Window, PipedInputStream> hashtable0 = new Hashtable<Window, PipedInputStream>();
      reportManager0.setSettings(hashtable0);
      assertTrue(reportManager0.isReportEnabled());
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.setReportLocation(Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test12()  throws Throwable  {
      Controller controller0 = new Controller("SCOPE_TABLE", 0, 0);
      ReportManager reportManager0 = new ReportManager(controller0);
      reportManager0.setReportLocation("SCOPE_TABLE");
      assertEquals("SCOPE_TABLE", reportManager0.getReportLocation());
  }

  //Test case number: 13
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.setEnableFileLogging(Z)V: root-Branch
   */

	@Test(timeout=300000)
  public void test13()  throws Throwable  {
      Controller controller0 = new Controller("", (-890), 906);
      ReportManager reportManager0 = new ReportManager(controller0);
      reportManager0.setEnableFileLogging(true);
      assertTrue(reportManager0.isEnableFileLogging());
      assertFalse(reportManager0.isGenerateOnShutdown());
      assertTrue(reportManager0.isHideSensitiveData());
  }

  //Test case number: 14
  /*
   * 7 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.setReportEnabled(Z)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.core.ReportManager.setSettings(Ljava/util/Hashtable;)V: I3 Branch 2 IFNONNULL L327 - true
   * Goal 4. org.objectweb.cjdbc.controller.core.ReportManager.setSettings(Ljava/util/Hashtable;)V: I15 Branch 3 IFEQ L331 - true
   * Goal 5. org.objectweb.cjdbc.controller.core.ReportManager.setSettings(Ljava/util/Hashtable;)V: I32 Branch 4 IFNE L336 - false
   * Goal 6. org.objectweb.cjdbc.controller.core.ReportManager.isGenerateOnFatal()Z: I4 Branch 14 IFEQ L417 - false
   * Goal 7. org.objectweb.cjdbc.controller.core.ReportManager.isGenerateOnFatal()Z: I7 Branch 15 IFEQ L417 - true
   */

	@Test(timeout=300000)
  public void test14()  throws Throwable  {
      Controller controller0 = new Controller((String) null, 891, 891);
      ReportManager reportManager0 = new ReportManager(controller0);
      Hashtable<TextArea, Dialog> hashtable0 = new Hashtable<TextArea, Dialog>();
      reportManager0.setSettings(hashtable0);
      reportManager0.setReportEnabled(true);
      boolean boolean0 = reportManager0.isGenerateOnFatal();
      assertFalse(reportManager0.isHideSensitiveData());
      assertFalse(reportManager0.isEnableFileLogging());
      assertFalse(boolean0);
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.setSettings(Ljava/util/Hashtable;)V: I3 Branch 2 IFNONNULL L327 - false
   * Goal 3. org.objectweb.cjdbc.controller.core.ReportManager.setSettings(Ljava/util/Hashtable;)V: I32 Branch 4 IFNE L336 - false
   */

	@Test(timeout=300000)
  public void test15()  throws Throwable  {
      Controller controller0 = new Controller("Suu9z", 1077, 1077);
      ReportManager reportManager0 = new ReportManager(controller0);
      reportManager0.setSettings((Hashtable) null);
      assertFalse(reportManager0.isEnableFileLogging());
      assertFalse(reportManager0.isHideSensitiveData());
  }

  //Test case number: 16
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.listLoggers()V: I8 Branch 12 IFNE L394 - true
   * Goal 3. org.objectweb.cjdbc.controller.core.ReportManager.listLoggers()V: I21 Branch 13 IFEQ L397 - true
   * Goal 4. org.objectweb.cjdbc.controller.core.ReportManager.listLoggers()V: I21 Branch 13 IFEQ L397 - false
   */

	@Test(timeout=300000)
  public void test16()  throws Throwable  {
      ReportManager reportManager0 = new ReportManager((Controller) null);
      reportManager0.listLoggers();
      assertTrue(reportManager0.isEnableFileLogging());
      assertFalse(reportManager0.isGenerateOnShutdown());
      assertTrue(reportManager0.isHideSensitiveData());
  }

  //Test case number: 17
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.isGenerateOnFatal()Z: I4 Branch 14 IFEQ L417 - true
   */

	@Test(timeout=300000)
  public void test17()  throws Throwable  {
      Controller controller0 = new Controller((String) null, 0, 0);
      ReportManager reportManager0 = new ReportManager(controller0);
      boolean boolean0 = reportManager0.isGenerateOnFatal();
      assertFalse(boolean0);
      assertTrue(reportManager0.isHideSensitiveData());
      assertTrue(reportManager0.isEnableFileLogging());
  }

  //Test case number: 18
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.setReportEnabled(Z)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.core.ReportManager.isGenerateOnFatal()Z: I4 Branch 14 IFEQ L417 - false
   * Goal 4. org.objectweb.cjdbc.controller.core.ReportManager.isGenerateOnFatal()Z: I7 Branch 15 IFEQ L417 - false
   */

	@Test(timeout=300000)
  public void test18()  throws Throwable  {
      Controller controller0 = new Controller((String) null, 891, 891);
      ReportManager reportManager0 = new ReportManager(controller0);
      assertFalse(reportManager0.isGenerateOnShutdown());
      
      reportManager0.setReportEnabled(true);
      boolean boolean0 = reportManager0.isGenerateOnFatal();
      assertTrue(reportManager0.isReportEnabled());
      assertTrue(boolean0);
  }

  //Test case number: 19
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.isGenerateOnShutdown()Z: I4 Branch 16 IFEQ L425 - true
   */

	@Test(timeout=300000)
  public void test19()  throws Throwable  {
      ReportManager reportManager0 = new ReportManager((Controller) null);
      boolean boolean0 = reportManager0.isGenerateOnShutdown();
      assertFalse(boolean0);
      assertTrue(reportManager0.isEnableFileLogging());
      assertTrue(reportManager0.isHideSensitiveData());
  }

  //Test case number: 20
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.setReportEnabled(Z)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.core.ReportManager.isGenerateOnShutdown()Z: I4 Branch 16 IFEQ L425 - false
   * Goal 4. org.objectweb.cjdbc.controller.core.ReportManager.isGenerateOnShutdown()Z: I7 Branch 17 IFEQ L425 - false
   */

	@Test(timeout=300000)
  public void test20()  throws Throwable  {
      ReportManager reportManager0 = new ReportManager((Controller) null);
      assertFalse(reportManager0.isGenerateOnFatal());
      
      reportManager0.setReportEnabled(true);
      boolean boolean0 = reportManager0.isGenerateOnShutdown();
      assertTrue(reportManager0.isReportEnabled());
      assertTrue(boolean0);
  }

  //Test case number: 21
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.ReportManager.<init>(Lorg/objectweb/cjdbc/controller/core/Controller;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.ReportManager.setReportEnabled(Z)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.core.ReportManager.isGenerateOnShutdown()Z: I4 Branch 16 IFEQ L425 - false
   * Goal 4. org.objectweb.cjdbc.controller.core.ReportManager.isGenerateOnShutdown()Z: I7 Branch 17 IFEQ L425 - true
   */

	@Test(timeout=300000)
  public void test21()  throws Throwable  {
      ReportManager reportManager0 = new ReportManager((Controller) null);
      reportManager0.generateOnShutdown = true;
      reportManager0.generateOnShutdown = false;
      reportManager0.setReportEnabled(true);
      boolean boolean0 = reportManager0.isGenerateOnShutdown();
      assertTrue(reportManager0.isGenerateOnFatal());
      assertFalse(boolean0);
  }
}
