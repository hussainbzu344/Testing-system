/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 18:21:32 GMT 2016
 */

package org.objectweb.cjdbc.controller.monitoring;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.sql.AlterRequest;
import org.objectweb.cjdbc.common.sql.DropRequest;
import org.objectweb.cjdbc.common.sql.InsertRequest;
import org.objectweb.cjdbc.common.sql.SelectRequest;
import org.objectweb.cjdbc.common.sql.UnknownRequest;
import org.objectweb.cjdbc.common.sql.schema.DatabaseSchema;
import org.objectweb.cjdbc.controller.monitoring.SQLMonitoring;
import org.objectweb.cjdbc.controller.monitoring.SQLMonitoringRule;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SQLMonitoring_ESTest extends SQLMonitoring_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.addRule(Lorg/objectweb/cjdbc/controller/monitoring/SQLMonitoringRule;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.resetRequestStat(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I9 Branch 7 IFNONNULL L127 - true
   * Goal 4. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getStatForRequest(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Lorg/objectweb/cjdbc/common/util/Stats;: I9 Branch 8 IFNONNULL L143 - true
   * Goal 5. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getStatForRequest(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Lorg/objectweb/cjdbc/common/util/Stats;: I25 Branch 9 IFNONNULL L148 - false
   * Goal 6. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I9 Branch 13 IF_ICMPGE L232 - false
   * Goal 7. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I27 Branch 14 IFNULL L236 - false
   * Goal 8. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I32 Branch 15 IFEQ L238 - false
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      SQLMonitoring sQLMonitoring0 = new SQLMonitoring("off");
      SQLMonitoringRule sQLMonitoringRule0 = new SQLMonitoringRule("off", false, false, true);
      sQLMonitoring0.addRule(sQLMonitoringRule0);
      AlterRequest alterRequest0 = new AlterRequest("off", true, (-3122), "off", (DatabaseSchema) null, 0, true);
      sQLMonitoring0.resetRequestStat(alterRequest0);
      assertEquals("off", alterRequest0.getSQL());
  }

  //Test case number: 1
  /*
   * 9 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.setDefaultRule(Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.logRequestTime(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;J)V: I9 Branch 1 IFNONNULL L81 - true
   * Goal 4. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.logRequestTime(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;J)V: I26 Branch 2 IFEQ L85 - true
   * Goal 5. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getStatForRequest(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Lorg/objectweb/cjdbc/common/util/Stats;: I9 Branch 8 IFNONNULL L143 - true
   * Goal 6. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getStatForRequest(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Lorg/objectweb/cjdbc/common/util/Stats;: I25 Branch 9 IFNONNULL L148 - false
   * Goal 7. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I9 Branch 13 IF_ICMPGE L232 - true
   * Goal 8. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I49 Branch 16 IFEQ L246 - false
   * Goal 9. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I54 Branch 17 IFNONNULL L248 - false
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      SQLMonitoring sQLMonitoring0 = new SQLMonitoring("<SQLMonitoring defaultMonitoring=\"");
      sQLMonitoring0.setDefaultRule(true);
      SelectRequest selectRequest0 = new SelectRequest("<SQLMonitoring defaultMonitoring=\"", true, (-1127), (String) null);
      sQLMonitoring0.logRequestTime(selectRequest0, 0L);
      assertTrue(sQLMonitoring0.getDefaultRule());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getRuleList()Ljava/util/ArrayList;: root-Branch
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      SQLMonitoring sQLMonitoring0 = new SQLMonitoring("<SQLMonitoring defaultMonitoring=\"");
      ArrayList arrayList0 = sQLMonitoring0.getRuleList();
      assertTrue(arrayList0.isEmpty());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.cleanStats()V: root-Branch
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      SQLMonitoring sQLMonitoring0 = new SQLMonitoring("s``FNlx*)j>r)->%M80");
      sQLMonitoring0.cleanStats();
      assertFalse(sQLMonitoring0.isActive());
  }

  //Test case number: 4
  /*
   * 12 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.setDefaultRule(Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.logError(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I9 Branch 3 IFNONNULL L97 - true
   * Goal 4. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.logError(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I21 Branch 4 IFEQ L100 - true
   * Goal 5. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.logCacheHit(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I9 Branch 5 IFNONNULL L112 - true
   * Goal 6. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.logCacheHit(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I21 Branch 6 IFEQ L115 - true
   * Goal 7. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getStatForRequest(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Lorg/objectweb/cjdbc/common/util/Stats;: I9 Branch 8 IFNONNULL L143 - true
   * Goal 8. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getStatForRequest(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Lorg/objectweb/cjdbc/common/util/Stats;: I25 Branch 9 IFNONNULL L148 - true
   * Goal 9. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getStatForRequest(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Lorg/objectweb/cjdbc/common/util/Stats;: I25 Branch 9 IFNONNULL L148 - false
   * Goal 10. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I9 Branch 13 IF_ICMPGE L232 - true
   * Goal 11. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I49 Branch 16 IFEQ L246 - false
   * Goal 12. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I54 Branch 17 IFNONNULL L248 - false
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      SQLMonitoring sQLMonitoring0 = new SQLMonitoring("<SQLMonitoring defaultMonitoring=\"");
      sQLMonitoring0.setDefaultRule(true);
      SelectRequest selectRequest0 = new SelectRequest("<SQLMonitoring defaultMonitoring=\"", true, (-1127), (String) null);
      sQLMonitoring0.logError(selectRequest0);
      sQLMonitoring0.logCacheHit(selectRequest0);
      assertTrue(sQLMonitoring0.getDefaultRule());
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.logError(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I9 Branch 3 IFNONNULL L97 - false
   * Goal 3. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getStatForRequest(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Lorg/objectweb/cjdbc/common/util/Stats;: I9 Branch 8 IFNONNULL L143 - false
   * Goal 4. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I9 Branch 13 IF_ICMPGE L232 - true
   * Goal 5. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I49 Branch 16 IFEQ L246 - true
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      SQLMonitoring sQLMonitoring0 = new SQLMonitoring("");
      InsertRequest insertRequest0 = new InsertRequest("ResultSet not updateable. The query that generated this result set must select only one table, and must select all primary keys from that table. See the JDBC 2.1 API Specification, section 5.6 for more details.", false, 699, "1=O3*Upxi([u>`@", false);
      sQLMonitoring0.logError(insertRequest0);
      assertFalse(insertRequest0.isParsed());
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.resetRequestStat(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I9 Branch 7 IFNONNULL L127 - false
   * Goal 3. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getStatForRequest(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Lorg/objectweb/cjdbc/common/util/Stats;: I9 Branch 8 IFNONNULL L143 - false
   * Goal 4. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I9 Branch 13 IF_ICMPGE L232 - true
   * Goal 5. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I49 Branch 16 IFEQ L246 - true
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      SQLMonitoring sQLMonitoring0 = new SQLMonitoring("off");
      AlterRequest alterRequest0 = new AlterRequest("off", true, (-3122), "off", (DatabaseSchema) null, 0, true);
      sQLMonitoring0.resetRequestStat(alterRequest0);
      assertNull(alterRequest0.getSqlSkeleton());
  }

  //Test case number: 7
  /*
   * 11 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.setDefaultRule(Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.logError(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I9 Branch 3 IFNONNULL L97 - true
   * Goal 4. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.logError(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I21 Branch 4 IFEQ L100 - true
   * Goal 5. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getStatForRequest(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Lorg/objectweb/cjdbc/common/util/Stats;: I9 Branch 8 IFNONNULL L143 - true
   * Goal 6. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getStatForRequest(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Lorg/objectweb/cjdbc/common/util/Stats;: I25 Branch 9 IFNONNULL L148 - false
   * Goal 7. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getAllStatsInformation()[[Ljava/lang/String;: I24 Branch 10 IFEQ L166 - true
   * Goal 8. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getAllStatsInformation()[[Ljava/lang/String;: I24 Branch 10 IFEQ L166 - false
   * Goal 9. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I9 Branch 13 IF_ICMPGE L232 - true
   * Goal 10. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I49 Branch 16 IFEQ L246 - false
   * Goal 11. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I54 Branch 17 IFNONNULL L248 - false
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      SQLMonitoring sQLMonitoring0 = new SQLMonitoring("<SQLMonitoring defaultMonitoring=\"");
      sQLMonitoring0.setDefaultRule(true);
      SelectRequest selectRequest0 = new SelectRequest("<SQLMonitoring defaultMonitoring=\"", true, (-1127), (String) null);
      sQLMonitoring0.logError(selectRequest0);
      sQLMonitoring0.getAllStatsInformation();
      assertTrue(sQLMonitoring0.getDefaultRule());
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.dumpAllStatsInformation()V: I4 Branch 11 IFEQ L179 - true
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      SQLMonitoring sQLMonitoring0 = new SQLMonitoring("lineBreakEscape");
      sQLMonitoring0.dumpAllStatsInformation();
      assertFalse(sQLMonitoring0.getDefaultRule());
  }

  //Test case number: 9
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.addRule(Lorg/objectweb/cjdbc/controller/monitoring/SQLMonitoringRule;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.logCacheHit(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I9 Branch 5 IFNONNULL L112 - false
   * Goal 4. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getStatForRequest(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Lorg/objectweb/cjdbc/common/util/Stats;: I9 Branch 8 IFNONNULL L143 - false
   * Goal 5. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I9 Branch 13 IF_ICMPGE L232 - true
   * Goal 6. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I9 Branch 13 IF_ICMPGE L232 - false
   * Goal 7. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I27 Branch 14 IFNULL L236 - true
   * Goal 8. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I49 Branch 16 IFEQ L246 - true
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      SQLMonitoring sQLMonitoring0 = new SQLMonitoring("supportsOpenCursorsAcrossCommit");
      SQLMonitoringRule sQLMonitoringRule0 = new SQLMonitoringRule("supportsOpenCursorsAcrossCommit", false, false, true);
      sQLMonitoring0.addRule(sQLMonitoringRule0);
      DropRequest dropRequest0 = new DropRequest("", true, 3, "ERROR ");
      sQLMonitoring0.logCacheHit(dropRequest0);
      assertEquals("ERROR ", dropRequest0.getLineSeparator());
  }

  //Test case number: 10
  /*
   * 7 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.addRule(Lorg/objectweb/cjdbc/controller/monitoring/SQLMonitoringRule;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.logRequestTime(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;J)V: I9 Branch 1 IFNONNULL L81 - false
   * Goal 4. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getStatForRequest(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Lorg/objectweb/cjdbc/common/util/Stats;: I9 Branch 8 IFNONNULL L143 - false
   * Goal 5. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I9 Branch 13 IF_ICMPGE L232 - false
   * Goal 6. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I27 Branch 14 IFNULL L236 - false
   * Goal 7. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I32 Branch 15 IFEQ L238 - true
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      SQLMonitoring sQLMonitoring0 = new SQLMonitoring("</SQLMonitoring>");
      SQLMonitoringRule sQLMonitoringRule0 = new SQLMonitoringRule("</SQLMonitoring>", false, false, false);
      sQLMonitoring0.addRule(sQLMonitoringRule0);
      UnknownRequest unknownRequest0 = new UnknownRequest("</SQLMonitoring>", false, (-2317), "");
      sQLMonitoring0.logRequestTime(unknownRequest0, 0L);
      assertFalse(unknownRequest0.getEscapeProcessing());
  }

  //Test case number: 11
  /*
   * 9 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.setDefaultRule(Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.logCacheHit(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I9 Branch 5 IFNONNULL L112 - true
   * Goal 4. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.logCacheHit(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I21 Branch 6 IFEQ L115 - true
   * Goal 5. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getStatForRequest(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Lorg/objectweb/cjdbc/common/util/Stats;: I9 Branch 8 IFNONNULL L143 - true
   * Goal 6. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getStatForRequest(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Lorg/objectweb/cjdbc/common/util/Stats;: I25 Branch 9 IFNONNULL L148 - false
   * Goal 7. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I9 Branch 13 IF_ICMPGE L232 - true
   * Goal 8. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I49 Branch 16 IFEQ L246 - false
   * Goal 9. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.monitorRequestRule(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)Ljava/lang/String;: I54 Branch 17 IFNONNULL L248 - true
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      SQLMonitoring sQLMonitoring0 = new SQLMonitoring("<SQLMonitoring defaultMonitoring=\"");
      sQLMonitoring0.setDefaultRule(true);
      SelectRequest selectRequest0 = new SelectRequest("<SQLMonitoring defaultMonitoring=\"", true, (-1127), (String) null);
      selectRequest0.setSqlSkeleton("<SQLMonitoring defaultMonitoring=\"");
      sQLMonitoring0.logCacheHit(selectRequest0);
      assertTrue(sQLMonitoring0.getDefaultRule());
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getDefaultRule()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.setDefaultRule(Z)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getXmlImpl()Ljava/lang/String;: I8 Branch 18 IFEQ L272 - false
   * Goal 5. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getXmlImpl()Ljava/lang/String;: I46 Branch 19 IF_ICMPGE L275 - true
   */

	@Test(timeout=300000)
  public void test12()  throws Throwable  {
      SQLMonitoring sQLMonitoring0 = new SQLMonitoring("lineBreakEscape");
      sQLMonitoring0.setDefaultRule(true);
      sQLMonitoring0.getXmlImpl();
      assertTrue(sQLMonitoring0.getDefaultRule());
  }

  //Test case number: 13
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getDefaultRule()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.addRule(Lorg/objectweb/cjdbc/controller/monitoring/SQLMonitoringRule;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getXmlImpl()Ljava/lang/String;: I8 Branch 18 IFEQ L272 - true
   * Goal 5. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getXmlImpl()Ljava/lang/String;: I46 Branch 19 IF_ICMPGE L275 - true
   * Goal 6. org.objectweb.cjdbc.controller.monitoring.SQLMonitoring.getXmlImpl()Ljava/lang/String;: I46 Branch 19 IF_ICMPGE L275 - false
   */

	@Test(timeout=300000)
  public void test13()  throws Throwable  {
      SQLMonitoring sQLMonitoring0 = new SQLMonitoring("");
      SQLMonitoringRule sQLMonitoringRule0 = new SQLMonitoringRule("", true, false, true);
      sQLMonitoring0.addRule(sQLMonitoringRule0);
      String string0 = sQLMonitoring0.getXmlImpl();
      assertNotNull(string0);
  }
}
