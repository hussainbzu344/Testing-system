/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 19 00:50:50 GMT 2016
 */

package org.objectweb.cjdbc.controller.backup;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.controller.backup.BackupManager;
import org.objectweb.cjdbc.controller.backup.Backuper;
import org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper;
import org.objectweb.cjdbc.controller.backup.PostgreSQLBinaryBackuper;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class BackupManager_ESTest extends BackupManager_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.BackupManager.getBackuperNames()[Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.BackupManager.<init>()V: root-Branch
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      BackupManager backupManager0 = new BackupManager();
      String[] stringArray0 = backupManager0.getBackuperNames();
      assertNotNull(stringArray0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.BackupManager.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.BackupManager.getBackuperByName(Ljava/lang/String;)Lorg/objectweb/cjdbc/controller/backup/Backuper;: root-Branch
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      BackupManager backupManager0 = new BackupManager();
      DerbyEmbeddedBackuper derbyEmbeddedBackuper0 = (DerbyEmbeddedBackuper)backupManager0.getBackuperByName("");
      assertNull(derbyEmbeddedBackuper0);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.BackupManager.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.BackupManager.getBackuperByFormat(Ljava/lang/String;)Lorg/objectweb/cjdbc/controller/backup/Backuper;: I3 Branch 1 IFNONNULL L93 - false
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
      BackupManager backupManager0 = new BackupManager();
      Backuper backuper0 = backupManager0.getBackuperByFormat((String) null);
      assertNull(backuper0);
  }

  //Test case number: 3
  /*
   * 7 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.BackupManager.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.BackupManager.getBackuperByFormat(Ljava/lang/String;)Lorg/objectweb/cjdbc/controller/backup/Backuper;: I3 Branch 1 IFNONNULL L93 - true
   * Goal 3. org.objectweb.cjdbc.controller.backup.BackupManager.getBackuperByFormat(Ljava/lang/String;)Lorg/objectweb/cjdbc/controller/backup/Backuper;: I18 Branch 2 IFEQ L95 - false
   * Goal 4. org.objectweb.cjdbc.controller.backup.BackupManager.getBackuperByFormat(Ljava/lang/String;)Lorg/objectweb/cjdbc/controller/backup/Backuper;: I31 Branch 3 IFLE L98 - false
   * Goal 5. org.objectweb.cjdbc.controller.backup.BackupManager.registerBackuper(Ljava/lang/String;Lorg/objectweb/cjdbc/controller/backup/Backuper;)V: I6 Branch 4 IFEQ L115 - true
   * Goal 6. org.objectweb.cjdbc.controller.backup.BackupManager.registerBackuper(Ljava/lang/String;Lorg/objectweb/cjdbc/controller/backup/Backuper;)V: I24 Branch 5 IFNONNULL L118 - true
   * Goal 7. org.objectweb.cjdbc.controller.backup.BackupManager.registerBackuper(Ljava/lang/String;Lorg/objectweb/cjdbc/controller/backup/Backuper;)V: I43 Branch 6 IFEQ L122 - true
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
      BackupManager backupManager0 = new BackupManager();
      PostgreSQLBinaryBackuper postgreSQLBinaryBackuper0 = new PostgreSQLBinaryBackuper();
      backupManager0.registerBackuper("", postgreSQLBinaryBackuper0);
      PostgreSQLBinaryBackuper postgreSQLBinaryBackuper1 = (PostgreSQLBinaryBackuper)backupManager0.getBackuperByFormat("PostgreSQL Binary Dump");
      assertSame(postgreSQLBinaryBackuper1, postgreSQLBinaryBackuper0);
  }

  //Test case number: 4
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.BackupManager.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.BackupManager.getBackuperByFormat(Ljava/lang/String;)Lorg/objectweb/cjdbc/controller/backup/Backuper;: I3 Branch 1 IFNONNULL L93 - true
   * Goal 3. org.objectweb.cjdbc.controller.backup.BackupManager.getBackuperByFormat(Ljava/lang/String;)Lorg/objectweb/cjdbc/controller/backup/Backuper;: I18 Branch 2 IFEQ L95 - true
   * Goal 4. org.objectweb.cjdbc.controller.backup.BackupManager.getBackuperByFormat(Ljava/lang/String;)Lorg/objectweb/cjdbc/controller/backup/Backuper;: I18 Branch 2 IFEQ L95 - false
   * Goal 5. org.objectweb.cjdbc.controller.backup.BackupManager.getBackuperByFormat(Ljava/lang/String;)Lorg/objectweb/cjdbc/controller/backup/Backuper;: I31 Branch 3 IFLE L98 - true
   * Goal 6. org.objectweb.cjdbc.controller.backup.BackupManager.registerBackuper(Ljava/lang/String;Lorg/objectweb/cjdbc/controller/backup/Backuper;)V: I6 Branch 4 IFEQ L115 - true
   * Goal 7. org.objectweb.cjdbc.controller.backup.BackupManager.registerBackuper(Ljava/lang/String;Lorg/objectweb/cjdbc/controller/backup/Backuper;)V: I24 Branch 5 IFNONNULL L118 - true
   * Goal 8. org.objectweb.cjdbc.controller.backup.BackupManager.registerBackuper(Ljava/lang/String;Lorg/objectweb/cjdbc/controller/backup/Backuper;)V: I43 Branch 6 IFEQ L122 - true
   */

	@Test(timeout=300000)
  public void test4()  throws Throwable  {
      BackupManager backupManager0 = new BackupManager();
      PostgreSQLBinaryBackuper postgreSQLBinaryBackuper0 = new PostgreSQLBinaryBackuper();
      backupManager0.registerBackuper("", postgreSQLBinaryBackuper0);
      PostgreSQLBinaryBackuper postgreSQLBinaryBackuper1 = (PostgreSQLBinaryBackuper)backupManager0.getBackuperByFormat("@\"N:]h@V^7Rz&");
      assertNull(postgreSQLBinaryBackuper1);
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.BackupManager.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.BackupManager.registerBackuper(Ljava/lang/String;Lorg/objectweb/cjdbc/controller/backup/Backuper;)V: I6 Branch 4 IFEQ L115 - true
   * Goal 3. org.objectweb.cjdbc.controller.backup.BackupManager.registerBackuper(Ljava/lang/String;Lorg/objectweb/cjdbc/controller/backup/Backuper;)V: I6 Branch 4 IFEQ L115 - false
   * Goal 4. org.objectweb.cjdbc.controller.backup.BackupManager.registerBackuper(Ljava/lang/String;Lorg/objectweb/cjdbc/controller/backup/Backuper;)V: I24 Branch 5 IFNONNULL L118 - true
   * Goal 5. org.objectweb.cjdbc.controller.backup.BackupManager.registerBackuper(Ljava/lang/String;Lorg/objectweb/cjdbc/controller/backup/Backuper;)V: I43 Branch 6 IFEQ L122 - true
   */

	@Test(timeout=300000)
  public void test5()  throws Throwable  {
      BackupManager backupManager0 = new BackupManager();
      PostgreSQLBinaryBackuper postgreSQLBinaryBackuper0 = new PostgreSQLBinaryBackuper();
      backupManager0.registerBackuper("", postgreSQLBinaryBackuper0);
      try { 
        backupManager0.registerBackuper("", (Backuper) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // A backuper has already been registered with name 
         //
         assertThrownBy("org.objectweb.cjdbc.controller.backup.BackupManager", e);
      }
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.BackupManager.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.BackupManager.registerBackuper(Ljava/lang/String;Lorg/objectweb/cjdbc/controller/backup/Backuper;)V: I6 Branch 4 IFEQ L115 - true
   * Goal 3. org.objectweb.cjdbc.controller.backup.BackupManager.registerBackuper(Ljava/lang/String;Lorg/objectweb/cjdbc/controller/backup/Backuper;)V: I24 Branch 5 IFNONNULL L118 - false
   */

	@Test(timeout=300000)
  public void test6()  throws Throwable  {
      BackupManager backupManager0 = new BackupManager();
      try { 
        backupManager0.registerBackuper((String) null, (Backuper) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Trying to register a null backuper under name null
         //
         assertThrownBy("org.objectweb.cjdbc.controller.backup.BackupManager", e);
      }
  }

  //Test case number: 7
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.BackupManager.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.BackupManager.unregisterBackuper(Ljava/lang/String;)Z: I11 Branch 7 IFEQ L140 - true
   * Goal 3. org.objectweb.cjdbc.controller.backup.BackupManager.unregisterBackuper(Ljava/lang/String;)Z: I35 Branch 9 IFNULL L144 - true
   */

	@Test(timeout=300000)
  public void test7()  throws Throwable  {
      BackupManager backupManager0 = new BackupManager();
      boolean boolean0 = backupManager0.unregisterBackuper(":w&c^-]Jac@@QJ:zH; ");
      assertFalse(boolean0);
  }

  //Test case number: 8
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.BackupManager.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.BackupManager.registerBackuper(Ljava/lang/String;Lorg/objectweb/cjdbc/controller/backup/Backuper;)V: I6 Branch 4 IFEQ L115 - true
   * Goal 3. org.objectweb.cjdbc.controller.backup.BackupManager.registerBackuper(Ljava/lang/String;Lorg/objectweb/cjdbc/controller/backup/Backuper;)V: I24 Branch 5 IFNONNULL L118 - true
   * Goal 4. org.objectweb.cjdbc.controller.backup.BackupManager.registerBackuper(Ljava/lang/String;Lorg/objectweb/cjdbc/controller/backup/Backuper;)V: I43 Branch 6 IFEQ L122 - true
   * Goal 5. org.objectweb.cjdbc.controller.backup.BackupManager.unregisterBackuper(Ljava/lang/String;)Z: I11 Branch 7 IFEQ L140 - true
   * Goal 6. org.objectweb.cjdbc.controller.backup.BackupManager.unregisterBackuper(Ljava/lang/String;)Z: I35 Branch 9 IFNULL L144 - false
   */

	@Test(timeout=300000)
  public void test8()  throws Throwable  {
      BackupManager backupManager0 = new BackupManager();
      DerbyEmbeddedBackuper derbyEmbeddedBackuper0 = new DerbyEmbeddedBackuper();
      backupManager0.registerBackuper("", derbyEmbeddedBackuper0);
      boolean boolean0 = backupManager0.unregisterBackuper("");
      assertTrue(boolean0);
  }

  //Test case number: 9
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.BackupManager.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.BackupManager.registerBackuper(Ljava/lang/String;Lorg/objectweb/cjdbc/controller/backup/Backuper;)V: I6 Branch 4 IFEQ L115 - true
   * Goal 3. org.objectweb.cjdbc.controller.backup.BackupManager.registerBackuper(Ljava/lang/String;Lorg/objectweb/cjdbc/controller/backup/Backuper;)V: I24 Branch 5 IFNONNULL L118 - true
   * Goal 4. org.objectweb.cjdbc.controller.backup.BackupManager.registerBackuper(Ljava/lang/String;Lorg/objectweb/cjdbc/controller/backup/Backuper;)V: I43 Branch 6 IFEQ L122 - true
   * Goal 5. org.objectweb.cjdbc.controller.backup.BackupManager.getXml()Ljava/lang/String;: I17 Branch 10 IFEQ L153 - true
   * Goal 6. org.objectweb.cjdbc.controller.backup.BackupManager.getXml()Ljava/lang/String;: I17 Branch 10 IFEQ L153 - false
   */

	@Test(timeout=300000)
  public void test9()  throws Throwable  {
      BackupManager backupManager0 = new BackupManager();
      PostgreSQLBinaryBackuper postgreSQLBinaryBackuper0 = new PostgreSQLBinaryBackuper();
      backupManager0.registerBackuper("", postgreSQLBinaryBackuper0);
      String string0 = backupManager0.getXml();
      assertEquals("<Backup> <Backuper backuperName=\"\" className=\"class org.objectweb.cjdbc.controller.backup.PostgreSQLBinaryBackuper\" options=\"null\"  /></Backup>", string0);
  }
}
