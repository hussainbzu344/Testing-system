/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 23:08:21 GMT 2016
 */

package org.objectweb.cjdbc.controller.loadbalancer.raidb2;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.sql.SQLException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.sql.SelectRequest;
import org.objectweb.cjdbc.common.sql.StoredProcedure;
import org.objectweb.cjdbc.common.sql.filters.AbstractBlobFilter;
import org.objectweb.cjdbc.common.sql.filters.BlobEscapedFilter;
import org.objectweb.cjdbc.common.sql.filters.NoneBlobFilter;
import org.objectweb.cjdbc.controller.cache.metadata.MetadataCache;
import org.objectweb.cjdbc.controller.core.Controller;
import org.objectweb.cjdbc.controller.loadbalancer.policies.WaitForCompletionPolicy;
import org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTablePolicy;
import org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_LPRF;
import org.objectweb.cjdbc.controller.virtualdatabase.VirtualDatabase;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RAIDb2_LPRF_ESTest extends RAIDb2_LPRF_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_LPRF.getRaidb2Xml()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_LPRF.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/createtable/CreateTablePolicy;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      Controller controller0 = new Controller("", 0, 0);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", 120, false, (-2366), 0, (-2609L), 3, (AbstractBlobFilter) null);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      CreateTablePolicy createTablePolicy0 = new CreateTablePolicy();
      RAIDb2_LPRF rAIDb2_LPRF0 = new RAIDb2_LPRF(virtualDatabase0, waitForCompletionPolicy0, createTablePolicy0);
      String string0 = rAIDb2_LPRF0.getRaidb2Xml();
      assertEquals("<RAIDb-2-LeastPendingRequestsFirst/>", string0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_LPRF.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/createtable/CreateTablePolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_LPRF.execReadRequest(Lorg/objectweb/cjdbc/common/sql/SelectRequest;Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I47 Branch 1 IFNE L124 - false
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      Controller controller0 = new Controller("loadbalaRcer.backenddisabling", 370, 370);
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "loadbalaRcer.backenddisabling", 370, false, 370, 370, (long) 370, 370, (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      CreateTablePolicy createTablePolicy0 = new CreateTablePolicy();
      RAIDb2_LPRF rAIDb2_LPRF0 = new RAIDb2_LPRF(virtualDatabase0, waitForCompletionPolicy0, createTablePolicy0);
      MetadataCache metadataCache0 = new MetadataCache(370, 370);
      // Undeclared exception!
      try { 
        rAIDb2_LPRF0.execReadRequest((SelectRequest) null, metadataCache0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_LPRF", e);
      }
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_LPRF.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/createtable/CreateTablePolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_LPRF.execReadOnlyReadStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I59 Branch 11 IFNE L247 - false
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
      Controller controller0 = new Controller("jP!{>kbN%0/wdv8yh)2", (-18), (-18));
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "jP!{>kbN%0/wdv8yh)2", (-18), true, (-18), (-18), (long) (-18), (-18), (AbstractBlobFilter) noneBlobFilter0);
      CreateTablePolicy createTablePolicy0 = new CreateTablePolicy();
      RAIDb2_LPRF rAIDb2_LPRF0 = new RAIDb2_LPRF(virtualDatabase0, (WaitForCompletionPolicy) null, createTablePolicy0);
      StoredProcedure storedProcedure0 = new StoredProcedure("jP!{>kbN%0/wdv8yh)2", true, (-18), "jP!{>kbN%0/wdv8yh)2", true);
      try { 
        rAIDb2_LPRF0.execReadOnlyReadStoredProcedure(storedProcedure0, (MetadataCache) null);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // loadbalancer.execute.no.backend.available
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_LPRF", e);
      }
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_LPRF.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/createtable/CreateTablePolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_LPRF.getInformation()Ljava/lang/String;: I10 Branch 30 IFNE L387 - false
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
      Controller controller0 = new Controller("loadbalaRcer.backenddisabling", 370, 370);
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "loadbalaRcer.backenddisabling", 370, false, 370, 370, (long) 370, 370, (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      CreateTablePolicy createTablePolicy0 = new CreateTablePolicy();
      RAIDb2_LPRF rAIDb2_LPRF0 = new RAIDb2_LPRF(virtualDatabase0, waitForCompletionPolicy0, createTablePolicy0);
      String string0 = rAIDb2_LPRF0.getInformation();
      assertEquals("RAIDb-2 Least Pending Requests First load balancer: !!!Warning!!! No backend nodes found\n", string0);
  }
}
