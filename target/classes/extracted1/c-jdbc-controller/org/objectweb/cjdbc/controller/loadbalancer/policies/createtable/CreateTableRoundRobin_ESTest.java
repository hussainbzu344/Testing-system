/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 21:10:23 GMT 2016
 */

package org.objectweb.cjdbc.controller.loadbalancer.policies.createtable;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRoundRobin;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CreateTableRoundRobin_ESTest extends CreateTableRoundRobin_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRoundRobin.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRoundRobin.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I4 Branch 1 IFNE L65 - true
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRoundRobin.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I25 Branch 2 IF_ICMPNE L72 - true
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRoundRobin.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I35 Branch 3 IF_ICMPLE L74 - true
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      CreateTableRoundRobin createTableRoundRobin0 = new CreateTableRoundRobin();
      createTableRoundRobin0.nbOfNodes = (-473);
      ArrayList arrayList0 = createTableRoundRobin0.backendList;
      // Undeclared exception!
      try { 
        createTableRoundRobin0.getBackends(arrayList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -473
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRoundRobin.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRoundRobin.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I4 Branch 1 IFNE L65 - false
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      CreateTableRoundRobin createTableRoundRobin0 = new CreateTableRoundRobin();
      ArrayList arrayList0 = createTableRoundRobin0.getBackends((ArrayList) null);
      assertNull(arrayList0);
  }

  //Test case number: 2
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRoundRobin.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRoundRobin.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I4 Branch 1 IFNE L65 - true
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRoundRobin.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I25 Branch 2 IF_ICMPNE L72 - true
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRoundRobin.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I35 Branch 3 IF_ICMPLE L74 - false
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
      CreateTableRoundRobin createTableRoundRobin0 = new CreateTableRoundRobin();
      createTableRoundRobin0.nbOfNodes = 1;
      ArrayList<Integer> arrayList0 = new ArrayList<Integer>();
      try { 
        createTableRoundRobin0.getBackends(arrayList0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Asking for more backends (1) than available (0)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRoundRobin", e);
      }
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRoundRobin.<init>(Ljava/util/ArrayList;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRoundRobin.getInformation()Ljava/lang/String;: I4 Branch 6 IFNONNULL L105 - true
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
      ArrayList<Object> arrayList0 = new ArrayList<Object>();
      CreateTableRoundRobin createTableRoundRobin0 = new CreateTableRoundRobin(arrayList0);
      createTableRoundRobin0.tableName = "";
      String string0 = createTableRoundRobin0.getInformation();
      assertEquals("Rule for table  create table on 0 node(s) in round-robin from []", string0);
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRoundRobin.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRoundRobin.getInformation()Ljava/lang/String;: I4 Branch 6 IFNONNULL L105 - false
   */

	@Test(timeout=300000)
  public void test4()  throws Throwable  {
      CreateTableRoundRobin createTableRoundRobin0 = new CreateTableRoundRobin();
      String string0 = createTableRoundRobin0.getInformation();
      assertEquals("Default rule create table on 0 node(s) in round-robin from []", string0);
  }
}
