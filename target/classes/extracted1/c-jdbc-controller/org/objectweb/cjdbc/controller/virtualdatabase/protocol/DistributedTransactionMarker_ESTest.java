/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 19 00:05:30 GMT 2016
 */

package org.objectweb.cjdbc.controller.virtualdatabase.protocol;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.controller.virtualdatabase.protocol.ReleaseSavepoint;
import org.objectweb.cjdbc.controller.virtualdatabase.protocol.Rollback;
import org.objectweb.cjdbc.controller.virtualdatabase.protocol.RollbackToSavepoint;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class DistributedTransactionMarker_ESTest extends DistributedTransactionMarker_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.virtualdatabase.protocol.DistributedTransactionMarker.getTransactionId()J: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.virtualdatabase.protocol.DistributedTransactionMarker.<init>(J)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.virtualdatabase.protocol.DistributedTransactionMarker.equals(Ljava/lang/Object;)Z: I3 Branch 1 IFNONNULL L91 - true
   * Goal 4. org.objectweb.cjdbc.controller.virtualdatabase.protocol.DistributedTransactionMarker.equals(Ljava/lang/Object;)Z: I15 Branch 2 IFEQ L93 - false
   * Goal 5. org.objectweb.cjdbc.controller.virtualdatabase.protocol.DistributedTransactionMarker.equals(Ljava/lang/Object;)Z: I24 Branch 3 IFNE L94 - false
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      ReleaseSavepoint releaseSavepoint0 = new ReleaseSavepoint(2279L, "");
      boolean boolean0 = releaseSavepoint0.equals(releaseSavepoint0);
      assertTrue(boolean0);
      assertEquals(2279L, releaseSavepoint0.getTransactionId());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.virtualdatabase.protocol.DistributedTransactionMarker.<init>(J)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.virtualdatabase.protocol.DistributedTransactionMarker.equals(Ljava/lang/Object;)Z: I3 Branch 1 IFNONNULL L91 - false
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      RollbackToSavepoint rollbackToSavepoint0 = new RollbackToSavepoint(0L, (String) null);
      boolean boolean0 = rollbackToSavepoint0.equals((Object) null);
      assertFalse(boolean0);
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.virtualdatabase.protocol.DistributedTransactionMarker.<init>(J)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.virtualdatabase.protocol.DistributedTransactionMarker.equals(Ljava/lang/Object;)Z: I3 Branch 1 IFNONNULL L91 - true
   * Goal 3. org.objectweb.cjdbc.controller.virtualdatabase.protocol.DistributedTransactionMarker.equals(Ljava/lang/Object;)Z: I15 Branch 2 IFEQ L93 - true
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
      Rollback rollback0 = new Rollback("", 0L);
      boolean boolean0 = rollback0.equals("");
      assertFalse(boolean0);
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.virtualdatabase.protocol.DistributedTransactionMarker.getTransactionId()J: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.virtualdatabase.protocol.DistributedTransactionMarker.<init>(J)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.virtualdatabase.protocol.DistributedTransactionMarker.equals(Ljava/lang/Object;)Z: I3 Branch 1 IFNONNULL L91 - true
   * Goal 4. org.objectweb.cjdbc.controller.virtualdatabase.protocol.DistributedTransactionMarker.equals(Ljava/lang/Object;)Z: I15 Branch 2 IFEQ L93 - false
   * Goal 5. org.objectweb.cjdbc.controller.virtualdatabase.protocol.DistributedTransactionMarker.equals(Ljava/lang/Object;)Z: I24 Branch 3 IFNE L94 - true
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
      ReleaseSavepoint releaseSavepoint0 = new ReleaseSavepoint(2279L, "");
      releaseSavepoint0.transactionId = 1L;
      ReleaseSavepoint releaseSavepoint1 = new ReleaseSavepoint(2279L, "");
      boolean boolean0 = releaseSavepoint0.equals(releaseSavepoint1);
      assertEquals(1L, releaseSavepoint0.getTransactionId());
      assertFalse(boolean0);
  }
}
