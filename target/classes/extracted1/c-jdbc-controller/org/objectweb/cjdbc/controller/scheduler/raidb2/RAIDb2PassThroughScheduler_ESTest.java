/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 19 02:50:01 GMT 2016
 */

package org.objectweb.cjdbc.controller.scheduler.raidb2;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.sql.CreateRequest;
import org.objectweb.cjdbc.common.sql.SelectRequest;
import org.objectweb.cjdbc.common.sql.StoredProcedure;
import org.objectweb.cjdbc.common.sql.UpdateRequest;
import org.objectweb.cjdbc.common.sql.filters.AbstractBlobFilter;
import org.objectweb.cjdbc.common.sql.filters.Base64Filter;
import org.objectweb.cjdbc.common.sql.filters.NoneBlobFilter;
import org.objectweb.cjdbc.controller.core.Controller;
import org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler;
import org.objectweb.cjdbc.controller.virtualdatabase.VirtualDatabase;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RAIDb2PassThroughScheduler_ESTest extends RAIDb2PassThroughScheduler_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.notifyWriteCompleted(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      Controller controller0 = new Controller("<wz3wT#", 5529, 5529);
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "<wz3wT#", 1979, false, 1979, 1979, (long) 1979, 1979, (AbstractBlobFilter) base64Filter0);
      RAIDb2PassThroughScheduler rAIDb2PassThroughScheduler0 = new RAIDb2PassThroughScheduler(virtualDatabase0);
      UpdateRequest updateRequest0 = new UpdateRequest("<wz3wT#", false, 366, "");
      rAIDb2PassThroughScheduler0.notifyWriteCompleted(updateRequest0);
      assertTrue(updateRequest0.needsMacroProcessing());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.scheduleReadRequest(Lorg/objectweb/cjdbc/common/sql/SelectRequest;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      Controller controller0 = new Controller("", 1749, 419);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "line.separator", 719, true, 1749, 25322, 0L, 0, (AbstractBlobFilter) null);
      RAIDb2PassThroughScheduler rAIDb2PassThroughScheduler0 = new RAIDb2PassThroughScheduler(virtualDatabase0);
      // Undeclared exception!
      try { 
        rAIDb2PassThroughScheduler0.scheduleReadRequest((SelectRequest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler", e);
      }
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.readCompletedNotify(Lorg/objectweb/cjdbc/common/sql/SelectRequest;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      Controller controller0 = new Controller("<wz3wT#", 5529, 5529);
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "<wz3wT#", 1979, false, 1979, 1979, (long) 1979, 1979, (AbstractBlobFilter) base64Filter0);
      RAIDb2PassThroughScheduler rAIDb2PassThroughScheduler0 = new RAIDb2PassThroughScheduler(virtualDatabase0);
      SelectRequest selectRequest0 = new SelectRequest("line.separator", false, 1979, "");
      rAIDb2PassThroughScheduler0.readCompletedNotify(selectRequest0);
      assertEquals(1979, selectRequest0.getTimeout());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.getXmlImpl()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase((Controller) null, "notification.backend.enabled", 25322, false, 25322, 25322, (long) 25322, 0, (AbstractBlobFilter) noneBlobFilter0);
      RAIDb2PassThroughScheduler rAIDb2PassThroughScheduler0 = new RAIDb2PassThroughScheduler(virtualDatabase0);
      String string0 = rAIDb2PassThroughScheduler0.getXmlImpl();
      assertEquals("<RAIDb-2Scheduler level=\"passThrough\"/>\n", string0);
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.notifyStoredProcedureCompleted(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase((Controller) null, "notification.backend.enabled", 25322, false, 25322, 25322, (long) 25322, 0, (AbstractBlobFilter) noneBlobFilter0);
      RAIDb2PassThroughScheduler rAIDb2PassThroughScheduler0 = new RAIDb2PassThroughScheduler(virtualDatabase0);
      rAIDb2PassThroughScheduler0.notifyStoredProcedureCompleted((StoredProcedure) null);
      assertEquals(0, rAIDb2PassThroughScheduler0.getNumberRead());
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.scheduleNonSuspendedWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)V: I15 Branch 2 IFNULL L117 - true
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      Controller controller0 = new Controller("", 1749, 419);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "line.separator", 719, true, 1749, 25322, 0L, 0, (AbstractBlobFilter) null);
      RAIDb2PassThroughScheduler rAIDb2PassThroughScheduler0 = new RAIDb2PassThroughScheduler(virtualDatabase0);
      CreateRequest createRequest0 = new CreateRequest("+D/6kYWO^/o`(", true, 25322, "");
      rAIDb2PassThroughScheduler0.scheduleNonSuspendedWriteRequest(createRequest0);
      assertEquals(0L, createRequest0.getId());
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.scheduleNonSuspendedStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)V: I15 Branch 3 IFNULL L140 - true
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      Controller controller0 = new Controller("_F{@<UHu>z", 84, 84);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "_F{@<UHu>z", 84, true, 84, 84, (long) 84, 84, (AbstractBlobFilter) null);
      RAIDb2PassThroughScheduler rAIDb2PassThroughScheduler0 = new RAIDb2PassThroughScheduler(virtualDatabase0);
      StoredProcedure storedProcedure0 = new StoredProcedure("_F{@<UHu>z", true, 0, "_F{@<UHu>z", true);
      rAIDb2PassThroughScheduler0.scheduleNonSuspendedStoredProcedure(storedProcedure0);
      assertEquals(0L, storedProcedure0.getId());
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.commitTransaction(J)V: I4 Branch 4 IFNULL L165 - true
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      Controller controller0 = new Controller("_F{@<UHu>z", 84, 84);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "_F{@<UHu>z", 84, true, 84, 84, (long) 84, 84, (AbstractBlobFilter) null);
      RAIDb2PassThroughScheduler rAIDb2PassThroughScheduler0 = new RAIDb2PassThroughScheduler(virtualDatabase0);
      rAIDb2PassThroughScheduler0.commitTransaction(84);
      assertEquals(0, rAIDb2PassThroughScheduler0.getNumberWrite());
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.rollbackTransaction(J)V: I4 Branch 5 IFNULL L179 - true
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      Controller controller0 = new Controller("_F{@<UHu>z", 84, 84);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "_F{@<UHu>z", 84, true, 84, 84, (long) 84, 84, (AbstractBlobFilter) null);
      RAIDb2PassThroughScheduler rAIDb2PassThroughScheduler0 = new RAIDb2PassThroughScheduler(virtualDatabase0);
      rAIDb2PassThroughScheduler0.rollbackTransaction(84);
      assertFalse(rAIDb2PassThroughScheduler0.isSuspendedTransactions());
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.rollbackTransaction(JLjava/lang/String;)V: I4 Branch 6 IFNULL L195 - true
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      Controller controller0 = new Controller("_F{@<UHu>z", 84, 84);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "_F{@<UHu>z", 84, true, 84, 84, (long) 84, 84, (AbstractBlobFilter) null);
      RAIDb2PassThroughScheduler rAIDb2PassThroughScheduler0 = new RAIDb2PassThroughScheduler(virtualDatabase0);
      rAIDb2PassThroughScheduler0.rollbackTransaction(84, "_F{@<UHu>z");
      assertFalse(rAIDb2PassThroughScheduler0.isSuspendedWrites());
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.setSavepointTransaction(JLjava/lang/String;)V: I4 Branch 7 IFNULL L211 - true
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      Controller controller0 = new Controller("_F{@<UHu>z", 84, 84);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "_F{@<UHu>z", 84, true, 84, 84, (long) 84, 84, (AbstractBlobFilter) null);
      RAIDb2PassThroughScheduler rAIDb2PassThroughScheduler0 = new RAIDb2PassThroughScheduler(virtualDatabase0);
      rAIDb2PassThroughScheduler0.setSavepointTransaction(84, "_F{@<UHu>z");
      assertEquals(0, rAIDb2PassThroughScheduler0.getNumberWrite());
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PassThroughScheduler.releaseSavepointTransaction(JLjava/lang/String;)V: I4 Branch 8 IFNULL L227 - true
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      Controller controller0 = new Controller("_F{@<UHu>z", 84, 84);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "_F{@<UHu>z", 84, true, 84, 84, (long) 84, 84, (AbstractBlobFilter) null);
      RAIDb2PassThroughScheduler rAIDb2PassThroughScheduler0 = new RAIDb2PassThroughScheduler(virtualDatabase0);
      rAIDb2PassThroughScheduler0.releaseSavepointTransaction(84, "_F{@<UHu>z");
      assertEquals(2, rAIDb2PassThroughScheduler0.getRAIDbLevel());
  }
}
