/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 21:02:25 GMT 2016
 */

package org.objectweb.cjdbc.controller.loadbalancer.raidb1;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.sql.filters.AbstractBlobFilter;
import org.objectweb.cjdbc.common.sql.filters.BlobEscapedFilter;
import org.objectweb.cjdbc.common.sql.filters.NoneBlobFilter;
import org.objectweb.cjdbc.controller.backend.DatabaseBackend;
import org.objectweb.cjdbc.controller.core.Controller;
import org.objectweb.cjdbc.controller.loadbalancer.policies.WaitForCompletionPolicy;
import org.objectweb.cjdbc.controller.loadbalancer.policies.errorchecking.ErrorCheckingAll;
import org.objectweb.cjdbc.controller.loadbalancer.policies.errorchecking.ErrorCheckingPolicy;
import org.objectweb.cjdbc.controller.loadbalancer.policies.errorchecking.ErrorCheckingRandom;
import org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_WRR;
import org.objectweb.cjdbc.controller.virtualdatabase.VirtualDatabase;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RAIDb1ec_ESTest extends RAIDb1ec_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/errorchecking/ErrorCheckingPolicy;I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec.getXmlImpl()Ljava/lang/String;: I31 Branch 8 IFNULL L259 - true
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      Controller controller0 = new Controller("QgFcxx", (-740), (-740));
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "V", (-740), false, (-740), 38, (long) (-740), 38, (AbstractBlobFilter) noneBlobFilter0);
      ErrorCheckingAll errorCheckingAll0 = new ErrorCheckingAll();
      RAIDb1ec_WRR rAIDb1ec_WRR0 = new RAIDb1ec_WRR(virtualDatabase0, (WaitForCompletionPolicy) null, (ErrorCheckingPolicy) errorCheckingAll0, (-2363));
      String string0 = rAIDb1ec_WRR0.getXmlImpl();
      assertEquals("<RAIDb-1ec nbOfConcurrentReads=\"-2363\"></RAIDb-1ec>", string0);
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/errorchecking/ErrorCheckingPolicy;I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec.disableBackend(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;)V: I13 Branch 3 IF_ICMPGE L173 - true
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec.disableBackend(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;)V: I127 Branch 5 IF_ICMPGE L209 - true
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase((Controller) null, "v", 77, true, 77, 77, (long) 77, 77, (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      ErrorCheckingRandom errorCheckingRandom0 = new ErrorCheckingRandom(77);
      RAIDb1ec_WRR rAIDb1ec_WRR0 = new RAIDb1ec_WRR(virtualDatabase0, waitForCompletionPolicy0, (ErrorCheckingPolicy) errorCheckingRandom0, 77);
      // Undeclared exception!
      try { 
        rAIDb1ec_WRR0.disableBackend((DatabaseBackend) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec", e);
      }
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/errorchecking/ErrorCheckingPolicy;I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec.getXmlImpl()Ljava/lang/String;: I31 Branch 8 IFNULL L259 - false
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
      Controller controller0 = new Controller("^", (-2865), (-2865));
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "^", (-2865), true, (-2865), (-2865), (long) (-2865), (-2865), (AbstractBlobFilter) noneBlobFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      ErrorCheckingAll errorCheckingAll0 = new ErrorCheckingAll();
      RAIDb1ec_WRR rAIDb1ec_WRR0 = new RAIDb1ec_WRR(virtualDatabase0, waitForCompletionPolicy0, (ErrorCheckingPolicy) errorCheckingAll0, (-2865));
      String string0 = rAIDb1ec_WRR0.getXmlImpl();
      assertEquals("<RAIDb-1ec nbOfConcurrentReads=\"-2865\"><WaitForCompletion policy=\"first\"/></RAIDb-1ec>", string0);
  }
}
