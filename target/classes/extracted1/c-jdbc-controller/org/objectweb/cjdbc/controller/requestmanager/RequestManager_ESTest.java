/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 18:50:27 GMT 2016
 */

package org.objectweb.cjdbc.controller.requestmanager;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.sql.SQLException;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.exceptions.NoMoreBackendException;
import org.objectweb.cjdbc.common.sql.AbstractWriteRequest;
import org.objectweb.cjdbc.common.sql.DeleteRequest;
import org.objectweb.cjdbc.common.sql.InsertRequest;
import org.objectweb.cjdbc.common.sql.SelectRequest;
import org.objectweb.cjdbc.common.sql.StoredProcedure;
import org.objectweb.cjdbc.common.sql.UpdateRequest;
import org.objectweb.cjdbc.common.sql.filters.AbstractBlobFilter;
import org.objectweb.cjdbc.common.sql.filters.Base64Filter;
import org.objectweb.cjdbc.common.sql.filters.BlobEscapedFilter;
import org.objectweb.cjdbc.common.sql.filters.HexaBlobFilter;
import org.objectweb.cjdbc.common.sql.filters.NoneBlobFilter;
import org.objectweb.cjdbc.common.sql.schema.DatabaseSchema;
import org.objectweb.cjdbc.controller.backend.BackendStateListener;
import org.objectweb.cjdbc.controller.backend.DatabaseBackend;
import org.objectweb.cjdbc.controller.backup.BackupManager;
import org.objectweb.cjdbc.controller.cache.metadata.MetadataCache;
import org.objectweb.cjdbc.controller.cache.parsing.ParsingCache;
import org.objectweb.cjdbc.controller.cache.result.AbstractResultCache;
import org.objectweb.cjdbc.controller.cache.result.ResultCacheColumn;
import org.objectweb.cjdbc.controller.cache.result.ResultCacheColumnUnique;
import org.objectweb.cjdbc.controller.cache.result.ResultCacheDatabase;
import org.objectweb.cjdbc.controller.cache.result.ResultCacheTable;
import org.objectweb.cjdbc.controller.core.Controller;
import org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer;
import org.objectweb.cjdbc.controller.loadbalancer.paralleldb.ParallelDB_LPRF;
import org.objectweb.cjdbc.controller.loadbalancer.policies.WaitForCompletionPolicy;
import org.objectweb.cjdbc.controller.loadbalancer.policies.errorchecking.ErrorCheckingPolicy;
import org.objectweb.cjdbc.controller.loadbalancer.policies.errorchecking.ErrorCheckingRoundRobin;
import org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_LPRF;
import org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_RR;
import org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_WRR;
import org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_WRR;
import org.objectweb.cjdbc.controller.recoverylog.RecoveryLog;
import org.objectweb.cjdbc.controller.requestmanager.RequestManager;
import org.objectweb.cjdbc.controller.scheduler.AbstractScheduler;
import org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1OptimisticQueryLevelScheduler;
import org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1OptimisticTransactionLevelScheduler;
import org.objectweb.cjdbc.controller.scheduler.raidb2.RAIDb2PessimisticTransactionLevelScheduler;
import org.objectweb.cjdbc.controller.virtualdatabase.VirtualDatabase;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RequestManager_ESTest extends RequestManager_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRollbackTimeout(J)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 0, (long) (-257));
      requestManager0.setRollbackTimeout((-2944L));
      assertEquals((-2944L), requestManager0.getRollbackTimeout());
  }

  //Test case number: 1
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getSchedulerParsingranularity()I: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), 0L, (long) (-257));
      int int0 = requestManager0.getSchedulerParsingranularity();
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals((-257L), requestManager0.getRollbackTimeout());
      assertFalse(requestManager0.isSchemaIsStatic());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertEquals(0L, requestManager0.getCommitTimeout());
      assertEquals(0, int0);
  }

  //Test case number: 2
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.isCaseSensitiveParsing()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), 0L, (long) (-257));
      boolean boolean0 = requestManager0.isCaseSensitiveParsing();
      assertEquals(0L, requestManager0.getCommitTimeout());
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertEquals((-257L), requestManager0.getRollbackTimeout());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertFalse(boolean0);
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertFalse(requestManager0.isSchemaIsStatic());
  }

  //Test case number: 3
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancerParsingranularity(I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("recovery.checkpoint.stored", 3, 0);
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "recovery.checkpoint.stored", 2, false, 0, (-257), (-67L), 0, (AbstractBlobFilter) base64Filter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_RR0, (RecoveryLog) null, (long) (-257), 1620L, 2555L);
      requestManager0.setLoadBalancerParsingranularity((-99));
      assertEquals(-99, requestManager0.getLoadBalancerParsingranularity());
  }

  //Test case number: 4
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getRollbackTimeout()J: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), 0L, (long) (-257));
      long long0 = requestManager0.getRollbackTimeout();
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertFalse(requestManager0.isSchemaIsStatic());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertEquals((-257L), long0);
  }

  //Test case number: 5
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackupManager(Lorg/objectweb/cjdbc/controller/backup/BackupManager;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("recovery.checkpoint.stored", 3, 0);
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "recovery.checkpoint.stored", 2, false, 0, (-257), (-67L), 0, (AbstractBlobFilter) base64Filter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_RR0, (RecoveryLog) null, (long) (-257), 1620L, 2555L);
      BackupManager backupManager0 = new BackupManager();
      requestManager0.setBackupManager(backupManager0);
      assertFalse(requestManager0.isSchemaIsStatic());
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertEquals(1620L, requestManager0.getCommitTimeout());
      assertEquals(2555L, requestManager0.getRollbackTimeout());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
  }

  //Test case number: 6
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setParsingCache(Lorg/objectweb/cjdbc/controller/cache/parsing/ParsingCache;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      Controller controller0 = new Controller("", (-292), (-292));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-292), false, 0, (-292), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-292), (-292));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-292), (long) 0, (long) (-292));
      // Undeclared exception!
      try { 
        requestManager0.setParsingCache((ParsingCache) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 7
  /*
   * 20 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.execWriteRequestWithKeys(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.scheduleExecWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)V: I4 Branch 39 IFNE L542 - false
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.scheduleExecWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)V: I19 Branch 40 IFNE L546 - false
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 20. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("recovery.checkpoint.stored", 3, (-257));
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "recovery.checkpoint.stored", 2, false, 237, (-257), (long) 0, 0, (AbstractBlobFilter) base64Filter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_RR0, (RecoveryLog) null, (long) 237, (long) 2, (long) 2);
      InsertRequest insertRequest0 = new InsertRequest("commitTimeout", false, 1, "recovery.checkpoint.stored", false);
      try { 
        requestManager0.execWriteRequestWithKeys(insertRequest0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // transaction.not.started
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 8
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getBeginTimeout()J: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-257), (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 0, (long) (-257));
      long long0 = requestManager0.getBeginTimeout();
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertEquals((-257L), long0);
      assertFalse(requestManager0.isSchemaIsStatic());
      assertEquals((-257L), requestManager0.getRollbackTimeout());
  }

  //Test case number: 9
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBeginTimeout(J)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("recovery.checkpoint.stored", 3, (-257));
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "recovery.checkpoint.stored", 2, false, 237, (-257), (long) 0, 0, (AbstractBlobFilter) base64Filter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_RR0, (RecoveryLog) null, (long) 237, (long) 2, (long) 2);
      requestManager0.setBeginTimeout(237);
      assertEquals(2L, requestManager0.getCommitTimeout());
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertEquals(237L, requestManager0.getBeginTimeout());
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertEquals(2L, requestManager0.getRollbackTimeout());
      assertFalse(requestManager0.isSchemaIsStatic());
  }

  //Test case number: 10
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.isSchemaIsStatic()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller((String) null, 1048574, 2066);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "nPdW@bvsC^hZ>7]", 1, false, (-257), (-1), 1500000000L, (-988), (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, 1L, (-843L), (-843L));
      requestManager0.isSchemaIsStatic();
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertEquals((-843L), requestManager0.getCommitTimeout());
      assertEquals((-843L), requestManager0.getRollbackTimeout());
      assertEquals(1L, requestManager0.getBeginTimeout());
      assertFalse(requestManager0.isCaseSensitiveParsing());
  }

  //Test case number: 11
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.removeCheckpoint(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-257), (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("recovery.checkpoint.stored", (-257), (-14));
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "recovery.checkpoint.stored", (-14), false, (-257), (-257), (-67L), (-14), (AbstractBlobFilter) base64Filter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_RR0, (RecoveryLog) null, (-67L), (long) (-14), (long) (-14));
      // Undeclared exception!
      try { 
        requestManager0.removeCheckpoint("Week.parseWeek(String): can't evaluate the year.");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 12
  /*
   * 23 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setMetadataCache(Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getXml()Ljava/lang/String;: I59 Branch 171 IFNULL L2457 - false
   * Goal 20. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getXml()Ljava/lang/String;: I72 Branch 172 IFNONNULL L2460 - true
   * Goal 21. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getXml()Ljava/lang/String;: I89 Branch 175 IFNULL L2463 - false
   * Goal 22. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getXml()Ljava/lang/String;: I102 Branch 176 IFNULL L2465 - true
   * Goal 23. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getXml()Ljava/lang/String;: I115 Branch 177 IFNULL L2467 - false
   */

	@Test(timeout=300000)
  public void test12()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-8), (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), 0L, (long) (-257));
      MetadataCache metadataCache0 = new MetadataCache(3, 580);
      requestManager0.setMetadataCache(metadataCache0);
      // Undeclared exception!
      try { 
        requestManager0.getXml();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.cache.result.ResultCache", e);
      }
  }

  //Test case number: 13
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setSchedulerParsingranularity(I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test13()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), 0L, (long) (-257));
      requestManager0.setSchedulerParsingranularity(0);
      assertEquals(0, requestManager0.getSchedulerParsingranularity());
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertEquals((-257L), requestManager0.getRollbackTimeout());
      assertFalse(requestManager0.isSchemaIsStatic());
  }

  //Test case number: 14
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getRequiredParsingGranularity()I: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test14()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), 0L, (long) (-257));
      int int0 = requestManager0.getRequiredParsingGranularity();
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertEquals(0L, requestManager0.getCommitTimeout());
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertEquals(2, int0);
      assertEquals((-257L), requestManager0.getRollbackTimeout());
      assertFalse(requestManager0.isSchemaIsStatic());
  }

  //Test case number: 15
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.completeTransaction(Ljava/lang/Long;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test15()  throws Throwable  {
      Controller controller0 = new Controller("", (-243), 5);
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-243), false, 0, 5, (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-243));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, 124L, 0L, (-1544L));
      Long long0 = new Long(1570L);
      requestManager0.completeTransaction(long0);
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals(0L, requestManager0.getCommitTimeout());
      assertEquals((-1544L), requestManager0.getRollbackTimeout());
      assertEquals(124L, requestManager0.getBeginTimeout());
  }

  //Test case number: 16
  /*
   * 19 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setSchemaIsDirty(Z)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getDatabaseSchema()Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;: I4 Branch 154 IFEQ L2146 - false
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test16()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), true, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 3, (long) (-257));
      requestManager0.setSchemaIsDirty(true);
      // Undeclared exception!
      try { 
        requestManager0.getDatabaseSchema();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.virtualdatabase.VirtualDatabase", e);
      }
  }

  //Test case number: 17
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getVirtualDatabase()Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test17()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), 0L, (long) (-257));
      requestManager0.getVirtualDatabase();
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertFalse(requestManager0.isSchemaIsStatic());
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertEquals(0L, requestManager0.getCommitTimeout());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertEquals((-257L), requestManager0.getRollbackTimeout());
      assertFalse(requestManager0.isCaseSensitiveParsing());
  }

  //Test case number: 18
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getBackendStateListener()Lorg/objectweb/cjdbc/controller/backend/BackendStateListener;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test18()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), true, (-257), (-257), (long) (-257), (-257), (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 3, (long) (-257));
      BackendStateListener backendStateListener0 = requestManager0.getBackendStateListener();
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals((-257L), requestManager0.getRollbackTimeout());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertNull(backendStateListener0);
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertEquals(3L, requestManager0.getCommitTimeout());
  }

  //Test case number: 19
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getCommitTimeout()J: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test19()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), 0L, (long) (-257));
      long long0 = requestManager0.getCommitTimeout();
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertEquals(0L, long0);
      assertEquals((-257L), requestManager0.getRollbackTimeout());
      assertFalse(requestManager0.isSchemaIsStatic());
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertEquals("requestmanager", requestManager0.getAssociatedString());
  }

  //Test case number: 20
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getLoadBalancerParsingranularity()I: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test20()  throws Throwable  {
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("recovery.checkpoint.stored", 3, (-257));
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "commitTimeout", (-876), false, (-3700), 1712, (-2315L), 2, (AbstractBlobFilter) base64Filter0);
      ResultCacheColumnUnique resultCacheColumnUnique0 = new ResultCacheColumnUnique((-257), 404);
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumnUnique0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (-3338L), (long) 0);
      int int0 = requestManager0.getLoadBalancerParsingranularity();
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertEquals((-3338L), requestManager0.getCommitTimeout());
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals(0, int0);
      assertEquals(3, requestManager0.getRequiredParsingGranularity());
      assertEquals(0L, requestManager0.getRollbackTimeout());
  }

  //Test case number: 21
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setCacheParsingranularity(I)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test21()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), true, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 3, (long) (-257));
      requestManager0.setCacheParsingranularity(4);
      assertEquals(4, requestManager0.getCacheParsingranularity());
  }

  //Test case number: 22
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getBackupManager()Lorg/objectweb/cjdbc/controller/backup/BackupManager;: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test22()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-257), (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), 0L, (long) (-257));
      requestManager0.getBackupManager();
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals((-257L), requestManager0.getRollbackTimeout());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertFalse(requestManager0.isSchemaIsStatic());
      assertEquals(0L, requestManager0.getCommitTimeout());
      assertEquals("requestmanager", requestManager0.getAssociatedString());
  }

  //Test case number: 23
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getLoadBalancer()Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test23()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 0, (long) (-257));
      RAIDb1_WRR rAIDb1_WRR1 = (RAIDb1_WRR)requestManager0.getLoadBalancer();
      assertNotNull(rAIDb1_WRR1);
      assertEquals((-257L), requestManager0.getRollbackTimeout());
      assertFalse(requestManager0.isSchemaIsStatic());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertEquals(0L, requestManager0.getCommitTimeout());
      assertEquals("requestmanager", requestManager0.getAssociatedString());
  }

  //Test case number: 24
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getMetadataCache()Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test24()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      ResultCacheColumnUnique resultCacheColumnUnique0 = new ResultCacheColumnUnique(3, (-257));
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumnUnique0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) 3, 1048576L, 0L);
      requestManager0.getMetadataCache();
      assertEquals(3L, requestManager0.getBeginTimeout());
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertEquals(1048576L, requestManager0.getCommitTimeout());
      assertEquals(3, requestManager0.getRequiredParsingGranularity());
      assertEquals(0L, requestManager0.getRollbackTimeout());
      assertFalse(requestManager0.isSchemaIsStatic());
  }

  //Test case number: 25
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setCommitTimeout(J)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test25()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), 0L, (long) (-257));
      requestManager0.setCommitTimeout(3);
      assertEquals(3L, requestManager0.getCommitTimeout());
  }

  //Test case number: 26
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRequiredParsingGranularity(I)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - true
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - false
   */

	@Test(timeout=300000)
  public void test26()  throws Throwable  {
      NoneBlobFilter noneBlobFilter0 = (NoneBlobFilter)AbstractBlobFilter.getBlobFilterInstance("");
      ResultCacheTable resultCacheTable0 = new ResultCacheTable((-99), (-2428));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase((Controller) null, "", 3, false, 2, 56, 0L, 355, (AbstractBlobFilter) noneBlobFilter0);
      RAIDb1OptimisticTransactionLevelScheduler rAIDb1OptimisticTransactionLevelScheduler0 = new RAIDb1OptimisticTransactionLevelScheduler();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticTransactionLevelScheduler0, (AbstractResultCache) resultCacheTable0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (-3524L), (long) (-917), (long) 299);
      requestManager0.setRequiredParsingGranularity(84);
      assertEquals(84, requestManager0.getRequiredParsingGranularity());
  }

  //Test case number: 27
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.execWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)I: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test27()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), 0L, (long) (-257));
      // Undeclared exception!
      try { 
        requestManager0.execWriteRequest((AbstractWriteRequest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 28
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getRecoveryLog()Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test28()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), 0L, (long) (-257));
      requestManager0.getRecoveryLog();
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertEquals((-257L), requestManager0.getRollbackTimeout());
      assertFalse(requestManager0.isSchemaIsStatic());
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertEquals(0L, requestManager0.getCommitTimeout());
  }

  //Test case number: 29
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getScheduler()Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test29()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), true, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 3, (long) (-257));
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler1 = (RAIDb1OptimisticQueryLevelScheduler)requestManager0.getScheduler();
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertNotNull(rAIDb1OptimisticQueryLevelScheduler1);
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertEquals((-257L), requestManager0.getRollbackTimeout());
      assertFalse(requestManager0.isSchemaIsStatic());
      assertEquals(3L, requestManager0.getCommitTimeout());
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertFalse(requestManager0.isCaseSensitiveParsing());
  }

  //Test case number: 30
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getCacheParsingranularity()I: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test30()  throws Throwable  {
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("recovery.checkpoint.stored", 3, 0);
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "recovery.checkpoint.stored", 2, false, 0, (-257), (-67L), 0, (AbstractBlobFilter) base64Filter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_RR0, (RecoveryLog) null, (long) (-257), 1620L, 2555L);
      int int0 = requestManager0.getCacheParsingranularity();
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals(2555L, requestManager0.getRollbackTimeout());
      assertEquals(2, int0);
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertEquals(1620L, requestManager0.getCommitTimeout());
      assertFalse(requestManager0.isSchemaIsStatic());
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
  }

  //Test case number: 31
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getResultCache()Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test31()  throws Throwable  {
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-257), (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("&D1V-,]$E", 0, (-257));
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", 1, false, 709, 0, (long) 709, 0, (AbstractBlobFilter) blobEscapedFilter0);
      ErrorCheckingRoundRobin errorCheckingRoundRobin0 = new ErrorCheckingRoundRobin(709);
      RAIDb1ec_WRR rAIDb1ec_WRR0 = new RAIDb1ec_WRR(virtualDatabase0, waitForCompletionPolicy0, (ErrorCheckingPolicy) errorCheckingRoundRobin0, 3072);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1ec_WRR0, (RecoveryLog) null, (long) 709, (long) (-257), (-1856L));
      requestManager0.getResultCache();
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertEquals(709L, requestManager0.getBeginTimeout());
      assertEquals((-1856L), requestManager0.getRollbackTimeout());
      assertFalse(requestManager0.isSchemaIsStatic());
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertEquals((-257L), requestManager0.getCommitTimeout());
  }

  //Test case number: 32
  /*
   * 19 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - true
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - true
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test32()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), 0L, (long) (-257));
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      
      ResultCacheDatabase resultCacheDatabase0 = new ResultCacheDatabase(1, 1);
      RequestManager requestManager1 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheDatabase0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, 12L, (long) 0, (long) 3);
      assertEquals(0, requestManager1.getRequiredParsingGranularity());
      assertEquals(0L, requestManager1.getCommitTimeout());
      assertEquals(3L, requestManager1.getRollbackTimeout());
      assertEquals(12L, requestManager1.getBeginTimeout());
      assertFalse(requestManager1.isSchemaIsStatic());
      assertEquals("requestmanager", requestManager1.getAssociatedString());
  }

  //Test case number: 33
  /*
   * 19 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - true
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.flushCacheAndLogStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;Z)V: I9 Branch 93 IFNULL L1056 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.flushCacheAndLogStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;Z)V: I19 Branch 94 IFNULL L1059 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.flushCacheAndLogStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;Z)V: I29 Branch 95 IFNULL L1066 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test33()  throws Throwable  {
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("recovery.checkpoint.stored", (-257), (-257));
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "recovery.checkpoint.stored", (-257), false, (-257), (-257), (long) (-257), (-257), (AbstractBlobFilter) base64Filter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) null, (AbstractLoadBalancer) rAIDb1_RR0, (RecoveryLog) null, (long) (-257), (long) (-257), (long) (-257));
      StoredProcedure storedProcedure0 = new StoredProcedure("recovery.checkpoint.stored", false, (-257), "recovery.checkpoint.stored", false);
      requestManager0.flushCacheAndLogStoredProcedure(storedProcedure0, false);
      assertEquals((-257L), requestManager0.getCommitTimeout());
      assertEquals(0, requestManager0.getCacheParsingranularity());
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertEquals(0, requestManager0.getRequiredParsingGranularity());
      assertFalse(requestManager0.isSchemaIsStatic());
      assertEquals((-257L), requestManager0.getRollbackTimeout());
  }

  //Test case number: 34
  /*
   * 16 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - true
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test34()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(26, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      String[] stringArray0 = new String[0];
      Controller.main(stringArray0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 0, (long) (-257));
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertFalse(requestManager0.isSchemaIsStatic());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertEquals((-257L), requestManager0.getRollbackTimeout());
      assertFalse(requestManager0.isCaseSensitiveParsing());
  }

  //Test case number: 35
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - false
   */

	@Test(timeout=300000)
  public void test35()  throws Throwable  {
      Controller controller0 = new Controller("/C'L", 0, 834);
      NoneBlobFilter noneBlobFilter0 = (NoneBlobFilter)AbstractBlobFilter.getBlobFilterInstance("/C'L");
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "/C'L", 834, true, (-270), 1007, (long) 1007, 1479, (AbstractBlobFilter) noneBlobFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = null;
      try {
        requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) null, (AbstractResultCache) null, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) 1007, (long) (-270), (long) 834);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // requestmanager.null.scheduler
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 36
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - false
   */

	@Test(timeout=300000)
  public void test36()  throws Throwable  {
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-243));
      RequestManager requestManager0 = null;
      try {
        requestManager0 = new RequestManager((VirtualDatabase) null, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) null, (RecoveryLog) null, (long) 3, (-528L), (-2110L));
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // requestmanager.null.loadbalancer
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 37
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - false
   */

	@Test(timeout=300000)
  public void test37()  throws Throwable  {
      Controller controller0 = new Controller((String) null, 1, 1);
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "n42Ht7G", (-134), true, (-2083), 1, (-1196L), 0, (AbstractBlobFilter) noneBlobFilter0);
      RAIDb2PessimisticTransactionLevelScheduler rAIDb2PessimisticTransactionLevelScheduler0 = new RAIDb2PessimisticTransactionLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(0, (-134));
      ParallelDB_LPRF parallelDB_LPRF0 = new ParallelDB_LPRF(virtualDatabase0);
      RequestManager requestManager0 = null;
      try {
        requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb2PessimisticTransactionLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) parallelDB_LPRF0, (RecoveryLog) null, (-1196L), (long) 1175, 1048576L);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // requestmanager.incompatible.raidb.levels
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 38
  /*
   * 19 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.execReadRequest(Lorg/objectweb/cjdbc/common/sql/SelectRequest;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I4 Branch 11 IFNE L320 - false
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.execReadRequest(Lorg/objectweb/cjdbc/common/sql/SelectRequest;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I19 Branch 12 IFNE L324 - false
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test38()  throws Throwable  {
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-257), (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("commitTimeout", (-257), (-257));
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "commitTimeout", (-257), false, (-257), (-257), (long) (-257), (-257), (AbstractBlobFilter) base64Filter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_RR0, (RecoveryLog) null, (long) (-257), (long) (-257), (long) (-257));
      SelectRequest selectRequest0 = new SelectRequest("commitTimeout", false, (-257), "commitTimeout");
      try { 
        requestManager0.execReadRequest(selectRequest0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // transaction.not.started
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 39
  /*
   * 23 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.execWriteRequestWithKeys(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.scheduleExecWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)V: I4 Branch 39 IFNE L542 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.scheduleExecWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)V: I33 Branch 41 IFEQ L555 - false
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.scheduleExecWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)V: I36 Branch 42 IFNE L555 - false
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.scheduleExecWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)V: I41 Branch 43 IFNONNULL L558 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getDatabaseSchema()Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;: I4 Branch 154 IFEQ L2146 - true
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 20. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 21. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 22. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 23. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test39()  throws Throwable  {
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-257), (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("commitTimeout", (-257), (-257));
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "commitTimeout", (-257), false, (-257), (-257), (long) (-257), (-257), (AbstractBlobFilter) base64Filter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_RR0, (RecoveryLog) null, (long) (-257), (long) (-257), (long) (-257));
      InsertRequest insertRequest0 = new InsertRequest("commitTimeout", false, (-257), "commitTimeout", false);
      insertRequest0.setIsAutoCommit(true);
      try { 
        requestManager0.execWriteRequestWithKeys(insertRequest0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // Unable to parse request with an undefined database schema
         //
         assertThrownBy("org.objectweb.cjdbc.common.sql.InsertRequest", e);
      }
  }

  //Test case number: 40
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.loadBalanceExecWriteRequestWithKeys(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I4 Branch 51 IFEQ L637 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test40()  throws Throwable  {
      Controller controller0 = new Controller("", (-270), (-270));
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-270), (-270));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      HexaBlobFilter hexaBlobFilter0 = new HexaBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-270), false, 540, (-270), (long) (-270), (-270), (AbstractBlobFilter) hexaBlobFilter0);
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) 540, (long) (-270), (long) (-270));
      // Undeclared exception!
      try { 
        requestManager0.loadBalanceExecWriteRequestWithKeys((AbstractWriteRequest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1OptimisticQueryLevelScheduler", e);
      }
  }

  //Test case number: 41
  /*
   * 21 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.loadBalanceExecWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)I: I4 Branch 54 IFEQ L676 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.loadBalanceExecWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)I: I31 Branch 55 IFEQ L683 - false
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.loadBalanceExecWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)I: I34 Branch 56 IFNULL L683 - false
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.loadBalanceExecWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)I: I42 Branch 57 IFNE L686 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 20. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 21. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test41()  throws Throwable  {
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-257), (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("recovery.checkpoint.stored", (-257), (-257));
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "recovery.checkpoint.stored", (-257), false, (-257), (-257), (long) (-257), (-257), (AbstractBlobFilter) base64Filter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_RR0, (RecoveryLog) null, (long) (-257), (long) (-257), (long) (-257));
      UpdateRequest updateRequest0 = new UpdateRequest("recovery.checkpoint.stored", false, (-257), "virtualdatabase.xml.loadbalancer.paralleldb_rr.failed");
      // Undeclared exception!
      try { 
        requestManager0.loadBalanceExecWriteRequest(updateRequest0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -257
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  //Test case number: 42
  /*
   * 22 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.loadBalanceExecWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)I: I4 Branch 54 IFEQ L676 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.loadBalanceExecWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)I: I31 Branch 55 IFEQ L683 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.loadBalanceExecWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)I: I89 Branch 58 IFEQ L699 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.loadBalanceExecWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)I: I106 Branch 59 IFEQ L705 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.loadBalanceExecWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)I: I116 Branch 60 IFEQ L707 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 20. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 21. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 22. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test42()  throws Throwable  {
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-257), (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("commitTimeout", (-257), (-257));
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "commitTimeout", (-257), false, 0, (-257), (long) (-257), 0, (AbstractBlobFilter) base64Filter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      InsertRequest insertRequest0 = new InsertRequest("commitTimeout", false, 0, "commitTimeout", false);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_RR0, (RecoveryLog) null, (long) (-257), (long) (-257), (long) 0);
      try { 
        requestManager0.loadBalanceExecWriteRequest(insertRequest0);
        fail("Expecting exception: NoMoreBackendException");
      
      } catch(NoMoreBackendException e) {
         //
         // loadbalancer.backendlist.empty
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1", e);
      }
  }

  //Test case number: 43
  /*
   * 20 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.updateAndNotifyExecWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)V: I4 Branch 61 IFNULL L727 - false
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.updateAndNotifyExecWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)V: I9 Branch 62 IFEQ L729 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.updateAndNotifyExecWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)V: I302 Branch 83 IFEQ L822 - false
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 20. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test43()  throws Throwable  {
      Controller controller0 = new Controller("yes", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "yes", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-257), (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 0, (long) (-257));
      DeleteRequest deleteRequest0 = new DeleteRequest("yes", false, (-257), "yes");
      try { 
        requestManager0.updateAndNotifyExecWriteRequest(deleteRequest0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // requestmanager.request.failed
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 44
  /*
   * 20 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.execReadStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I104 Branch 85 IFEQ L877 - false
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.scheduleStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)V: I4 Branch 87 IFNE L944 - false
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.scheduleStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)V: I19 Branch 88 IFNE L948 - false
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 20. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test44()  throws Throwable  {
      Controller controller0 = new Controller("q", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "q", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-257), (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 0, (long) (-257));
      StoredProcedure storedProcedure0 = new StoredProcedure("<WaitForCompletion policy=\"first\"/>", false, (-257), "<WaitForCompletion policy=\"first\"/>", false);
      try { 
        requestManager0.execReadStoredProcedure(storedProcedure0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // transaction.not.started
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 45
  /*
   * 20 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.loadBalanceReadStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I4 Branch 89 IFNULL L990 - false
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.loadBalanceReadStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I7 Branch 90 IFNE L990 - false
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.loadBalanceReadStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I17 Branch 91 IFEQ L998 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 20. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test45()  throws Throwable  {
      Controller controller0 = new Controller("", (-260), (-260));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-260), false, (-260), (-260), (long) (-260), (-260), (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-260), (-260));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-260), (long) (-260), (long) (-260));
      StoredProcedure storedProcedure0 = new StoredProcedure("", false, (-260), "", false);
      try { 
        requestManager0.loadBalanceReadStoredProcedure(storedProcedure0);
        fail("Expecting exception: NoMoreBackendException");
      
      } catch(NoMoreBackendException e) {
         //
         // loadbalancer.backendlist.empty
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1", e);
      }
  }

  //Test case number: 46
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.loadBalanceWriteStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)I: I4 Branch 92 IFNULL L1025 - false
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test46()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), true, (-257), (-257), (long) (-257), (-257), (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 3, (long) (-257));
      StoredProcedure storedProcedure0 = new StoredProcedure("recovery.restre.checkpoint.faied.cause.null", true, 3, "<WaitForCompletion policy=\"\"/>", false);
      try { 
        requestManager0.loadBalanceWriteStoredProcedure(storedProcedure0);
        fail("Expecting exception: NoMoreBackendException");
      
      } catch(NoMoreBackendException e) {
         //
         // loadbalancer.backendlist.empty
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1", e);
      }
  }

  //Test case number: 47
  /*
   * 20 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.flushCacheAndLogStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;Z)V: I9 Branch 93 IFNULL L1056 - false
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.flushCacheAndLogStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;Z)V: I19 Branch 94 IFNULL L1059 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.flushCacheAndLogStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;Z)V: I29 Branch 95 IFNULL L1066 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 20. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test47()  throws Throwable  {
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-257), (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("recovery.checkpoint.stored", (-257), (-257));
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "recovery.checkpoint.stored", (-257), false, (-257), (-257), (long) (-257), (-257), (AbstractBlobFilter) base64Filter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_RR0, (RecoveryLog) null, (long) (-257), (long) (-257), (long) (-257));
      StoredProcedure storedProcedure0 = new StoredProcedure("recovery.checkpoint.stored", false, (-257), "recovery.checkpoint.stored", false);
      requestManager0.flushCacheAndLogStoredProcedure(storedProcedure0, false);
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertEquals((-257L), requestManager0.getCommitTimeout());
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertFalse(requestManager0.isSchemaIsStatic());
      assertEquals((-257L), requestManager0.getRollbackTimeout());
  }

  //Test case number: 48
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.begin(Ljava/lang/String;)J: I26 Branch 96 IFEQ L1098 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test48()  throws Throwable  {
      Controller controller0 = new Controller("", (-270), (-270));
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-270), (-270));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      HexaBlobFilter hexaBlobFilter0 = new HexaBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-270), false, 540, (-270), (long) (-270), (-270), (AbstractBlobFilter) hexaBlobFilter0);
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) 540, (long) (-270), (long) (-270));
      long long0 = requestManager0.begin("");
      assertFalse(requestManager0.isSchemaIsStatic());
      assertEquals(540L, requestManager0.getBeginTimeout());
      assertEquals(1L, long0);
      assertEquals((-270L), requestManager0.getRollbackTimeout());
      assertEquals((-270L), requestManager0.getCommitTimeout());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
  }

  //Test case number: 49
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getTransactionMarker(Ljava/lang/Long;)Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;: I11 Branch 104 IFNONNULL L1235 - false
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test49()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-257), (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      HexaBlobFilter hexaBlobFilter0 = new HexaBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, (-257), (-257), (long) (-257), (-257), (AbstractBlobFilter) hexaBlobFilter0);
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) (-257), (long) (-257));
      try { 
        requestManager0.abort((-257), false);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // transaction.marker.not.found
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 50
  /*
   * 19 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.addSavepoint(Ljava/lang/Long;Ljava/lang/String;)V: I11 Branch 123 IFNONNULL L1628 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.addSavepoint(Ljava/lang/Long;Ljava/lang/String;)V: I11 Branch 123 IFNONNULL L1628 - false
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test50()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), true, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 3, (long) (-257));
      Long long0 = new Long((long) 3);
      requestManager0.addSavepoint(long0, "");
      String string0 = waitForCompletionPolicy0.getXml();
      requestManager0.addSavepoint(long0, string0);
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertEquals(3L, requestManager0.getCommitTimeout());
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertFalse(requestManager0.isSchemaIsStatic());
      assertEquals((-257L), requestManager0.getRollbackTimeout());
  }

  //Test case number: 51
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.removeSavepoint(Ljava/lang/Long;Ljava/lang/String;)V: I11 Branch 124 IFNONNULL L1646 - false
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test51()  throws Throwable  {
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-257), (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("commitTimeout", (-257), (-257));
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "commitTimeout", (-257), false, (-257), (-257), (long) (-257), (-257), (AbstractBlobFilter) base64Filter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_RR0, (RecoveryLog) null, (long) (-257), (long) (-257), (long) (-257));
      Long long0 = new Long((long) (-257));
      requestManager0.removeSavepoint(long0, "commitTimeout");
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertEquals((-257L), requestManager0.getRollbackTimeout());
      assertEquals((-257L), requestManager0.getCommitTimeout());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
  }

  //Test case number: 52
  /*
   * 20 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.addSavepoint(Ljava/lang/Long;Ljava/lang/String;)V: I11 Branch 123 IFNONNULL L1628 - false
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.removeSavepoints(Ljava/lang/Long;Ljava/lang/String;)V: I11 Branch 125 IFNONNULL L1662 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.removeSavepoints(Ljava/lang/Long;Ljava/lang/String;)V: I37 Branch 126 IF_ICMPNE L1669 - false
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 20. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test52()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 0, (long) (-257));
      Long long0 = new Long((long) 3);
      requestManager0.addSavepoint(long0, "");
      requestManager0.removeSavepoints(long0, "transaction.savepoint.not.found");
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertEquals((-257L), requestManager0.getRollbackTimeout());
      assertEquals(0L, requestManager0.getCommitTimeout());
      assertFalse(requestManager0.isSchemaIsStatic());
  }

  //Test case number: 53
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.removeSavepoints(Ljava/lang/Long;Ljava/lang/String;)V: I11 Branch 125 IFNONNULL L1662 - false
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test53()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), true, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 3, (long) (-257));
      Long long0 = new Long((long) 3);
      requestManager0.removeSavepoints(long0, "");
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals(3L, requestManager0.getCommitTimeout());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertFalse(requestManager0.isSchemaIsStatic());
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertEquals((-257L), requestManager0.getRollbackTimeout());
  }

  //Test case number: 54
  /*
   * 20 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.addSavepoint(Ljava/lang/Long;Ljava/lang/String;)V: I11 Branch 123 IFNONNULL L1628 - false
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.removeSavepoints(Ljava/lang/Long;Ljava/lang/String;)V: I11 Branch 125 IFNONNULL L1662 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.removeSavepoints(Ljava/lang/Long;Ljava/lang/String;)V: I37 Branch 126 IF_ICMPNE L1669 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 20. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test54()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), true, (-257), (-257), (long) (-257), (-257), (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 3, (long) (-257));
      Long long0 = new Long((long) 3);
      requestManager0.addSavepoint(long0, "");
      requestManager0.removeSavepoints(long0, "");
      assertEquals((-257L), requestManager0.getRollbackTimeout());
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertEquals(3L, requestManager0.getCommitTimeout());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
  }

  //Test case number: 55
  /*
   * 19 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.addSavepoint(Ljava/lang/Long;Ljava/lang/String;)V: I11 Branch 123 IFNONNULL L1628 - false
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.hasSavepoint(Ljava/lang/Long;Ljava/lang/String;)Z: I11 Branch 127 IFNONNULL L1686 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test55()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), true, (-257), (-257), (long) (-257), (-257), (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 3, (long) (-257));
      Long long0 = new Long((long) 3);
      requestManager0.addSavepoint(long0, "");
      boolean boolean0 = requestManager0.hasSavepoint(long0, "");
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertFalse(requestManager0.isSchemaIsStatic());
      assertTrue(boolean0);
      assertEquals((-257L), requestManager0.getRollbackTimeout());
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertEquals(3L, requestManager0.getCommitTimeout());
      assertFalse(requestManager0.isCaseSensitiveParsing());
      assertEquals((-257L), requestManager0.getBeginTimeout());
  }

  //Test case number: 56
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.hasSavepoint(Ljava/lang/Long;Ljava/lang/String;)Z: I11 Branch 127 IFNONNULL L1686 - false
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test56()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), true, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 3, (long) (-257));
      Long long0 = new Long((long) 3);
      requestManager0.hasSavepoint(long0, "");
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertEquals((-257L), requestManager0.getRollbackTimeout());
      assertFalse(requestManager0.isSchemaIsStatic());
      assertEquals(3L, requestManager0.getCommitTimeout());
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertFalse(requestManager0.isCaseSensitiveParsing());
  }

  //Test case number: 57
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.enableBackend(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;)V: I5 Branch 128 IFEQ L1709 - false
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test57()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), 0L, (long) (-257));
      // Undeclared exception!
      try { 
        requestManager0.enableBackend((DatabaseBackend) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 58
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.enableBackendFromCheckpoint(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Ljava/lang/String;)Lorg/objectweb/cjdbc/controller/recoverylog/RecoverThread;: I4 Branch 129 IFNONNULL L1736 - false
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test58()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), true, (-257), (-257), (long) (-257), (-257), (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-257), (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) (-257), (long) (-257));
      DatabaseBackend databaseBackend0 = new DatabaseBackend("", "", "", "", "", true, "");
      try { 
        requestManager0.enableBackendFromCheckpoint(databaseBackend0, "");
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // recovery.restore.checkpoint.failed.cause.null
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 59
  /*
   * 19 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.disableBackend(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;)V: I4 Branch 132 IFNE L1772 - false
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.disableBackend(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;)V: I7 Branch 133 IFEQ L1772 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test59()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), 0L, (long) (-257));
      DatabaseBackend databaseBackend0 = new DatabaseBackend("2", "2", "", "W._.gO-7ZM=>tXZB", "2", false, "");
      try { 
        requestManager0.disableBackend(databaseBackend0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // backend.already.disabled
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 60
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.disableBackendForCheckpoint(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Ljava/lang/String;)V: I4 Branch 134 IFNONNULL L1799 - false
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test60()  throws Throwable  {
      Controller controller0 = new Controller("bad response from dump server", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "bad response from dump server", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-15), (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) (-15), (long) (-257));
      DatabaseBackend databaseBackend0 = new DatabaseBackend("bad response from dump server", "bad response from dump server", "Created table: ", "bad response from dump server", "O\"k#gFLqH5b#/2;4", false, "Created table: ");
      try { 
        requestManager0.disableBackendForCheckpoint(databaseBackend0, "Created table: ");
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // recovery.store.checkpoint.failed.cause.null
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 61
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.disableBackendsForCheckpoint(Ljava/util/ArrayList;Ljava/lang/String;)V: I4 Branch 135 IFNONNULL L1846 - false
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test61()  throws Throwable  {
      Controller controller0 = new Controller("bad response from dump server", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "bad response from dump server", (-257), true, (-257), (-257), (long) (-257), (-257), (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-257), (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) (-257), (long) (-257));
      ArrayList<SQLException> arrayList0 = new ArrayList<SQLException>();
      try { 
        requestManager0.disableBackendsForCheckpoint(arrayList0, "bad response from dump server");
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // recovery.store.checkpoint.failed.cause.null
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 62
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.storeBackendsInfo(Ljava/lang/String;Ljava/util/ArrayList;)V: I4 Branch 152 IFNONNULL L2098 - false
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test62()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-257), (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      HexaBlobFilter hexaBlobFilter0 = new HexaBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, (-257), (-257), (long) (-257), (-257), (AbstractBlobFilter) hexaBlobFilter0);
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) (-257), (long) (-257));
      requestManager0.storeBackendsInfo("requestmanager.write.request.keys.fdilez.unexpe]td", (ArrayList) null);
      assertEquals(2, requestManager0.getRequiredParsingGranularity());
      assertEquals((-257L), requestManager0.getRollbackTimeout());
      assertFalse(requestManager0.isSchemaIsStatic());
      assertEquals("requestmanager", requestManager0.getAssociatedString());
      assertEquals((-257L), requestManager0.getCommitTimeout());
      assertEquals((-257L), requestManager0.getBeginTimeout());
      assertFalse(requestManager0.isCaseSensitiveParsing());
  }

  //Test case number: 63
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.mergeDatabaseSchema(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;)V: I4 Branch 155 IFNONNULL L2168 - false
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test63()  throws Throwable  {
      Controller controller0 = new Controller("requestmanager.read.request.cache.update", (-282), (-282));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "requestmanager.read.request.cache.update", (-282), true, (-282), (-282), (long) (-282), (-282), (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-282), (-282));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-282), (long) (-282), (long) (-282));
      // Undeclared exception!
      try { 
        requestManager0.mergeDatabaseSchema((DatabaseSchema) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal null database schema in DatabaseSchema(DatabaseSchema) constructor
         //
         assertThrownBy("org.objectweb.cjdbc.common.sql.schema.DatabaseSchema", e);
      }
  }

  //Test case number: 64
  /*
   * 22 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setSchemaIsStatic(Z)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setDatabaseSchema(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;Z)V: I4 Branch 158 IFEQ L2200 - false
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setDatabaseSchema(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;Z)V: I8 Branch 159 IFEQ L2202 - false
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setDatabaseSchema(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;Z)V: I48 Branch 160 IFEQ L2219 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setDatabaseSchema(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;Z)V: I60 Branch 161 IFEQ L2222 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 20. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 21. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 22. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test64()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), true, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 3, (long) (-257));
      requestManager0.setSchemaIsStatic(true);
      requestManager0.setDatabaseSchema((DatabaseSchema) null, true);
  }

  //Test case number: 65
  /*
   * 22 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setSchemaIsStatic(Z)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setDatabaseSchema(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;Z)V: I4 Branch 158 IFEQ L2200 - false
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setDatabaseSchema(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;Z)V: I8 Branch 159 IFEQ L2202 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setDatabaseSchema(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;Z)V: I48 Branch 160 IFEQ L2219 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setDatabaseSchema(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;Z)V: I60 Branch 161 IFEQ L2222 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 20. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 21. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 22. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test65()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), true, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 3, (long) (-257));
      requestManager0.setSchemaIsStatic(true);
      requestManager0.setDatabaseSchema((DatabaseSchema) null, false);
  }

  //Test case number: 66
  /*
   * 20 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setDatabaseSchema(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;Z)V: I4 Branch 158 IFEQ L2200 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setDatabaseSchema(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;Z)V: I48 Branch 160 IFEQ L2219 - false
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setDatabaseSchema(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;Z)V: I60 Branch 161 IFEQ L2222 - false
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 20. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test66()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), true, (-257), (-257), (long) (-257), (-257), (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      rAIDb1OptimisticQueryLevelScheduler0.setParsingGranularity((-257));
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 3, (long) (-257));
      requestManager0.setDatabaseSchema((DatabaseSchema) null, true);
  }

  //Test case number: 67
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - false
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test67()  throws Throwable  {
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("5y?G>o?@NDa={'k36_", 6, 183);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "{1m@YVjjq)PcW_h", 6, true, 183, 84, (long) 6, 183, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_RR0, (RecoveryLog) null, (-2311L), 1L, (-1486L));
      // Undeclared exception!
      try { 
        requestManager0.setLoadBalancer(rAIDb1_RR0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // It is not possible to dynamically change a load balancer.
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 68
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setResultCache(Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;)V: I17 Branch 168 IF_ICMPLE L2396 - true
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test68()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), true, (-257), (-257), (long) (-257), (-257), (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 3, (long) (-257));
      requestManager0.setResultCache(resultCacheColumn0);
  }

  //Test case number: 69
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setResultCache(Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;)V: I17 Branch 168 IF_ICMPLE L2396 - false
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   */

	@Test(timeout=300000)
  public void test69()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), true, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(3, (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), (long) 3, (long) (-257));
      resultCacheColumn0.setParsingGranularity(512);
      requestManager0.setResultCache(resultCacheColumn0);
  }

  //Test case number: 70
  /*
   * 18 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setCaseSensitiveParsing(Z)V: I9 Branch 170 IFNULL L2434 - true
   */

	@Test(timeout=300000)
  public void test70()  throws Throwable  {
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn(700, 700);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("commitTimeout", 700, 700);
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "commitTimeout", 700, false, 700, 700, (long) 700, 700, (AbstractBlobFilter) base64Filter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_RR0, (RecoveryLog) null, (long) 700, (long) 700, (long) 700);
      requestManager0.setCaseSensitiveParsing(false);
  }

  //Test case number: 71
  /*
   * 24 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.RequestManager.initRequestManagerVariables(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I4 Branch 1 IFNONNULL L192 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I79 Branch 2 IFNULL L197 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I92 Branch 3 IF_ICMPLE L200 - false
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.RequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: I128 Branch 4 IFEQ L210 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setBackendsLastKnownCheckpointFromRecoveryLog()V: I4 Branch 5 IFNONNULL L232 - false
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I3 Branch 7 IFNONNULL L261 - true
   * Goal 9. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I15 Branch 8 IFNONNULL L264 - true
   * Goal 10. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I30 Branch 9 IF_ICMPEQ L267 - true
   * Goal 11. org.objectweb.cjdbc.controller.requestmanager.RequestManager.assignAndCheckSchedulerLoadBalancerValidity(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I99 Branch 10 IF_ICMPLE L279 - true
   * Goal 12. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I4 Branch 162 IFNULL L2289 - true
   * Goal 13. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I33 Branch 163 IFNONNULL L2293 - true
   * Goal 14. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I49 Branch 164 IF_ICMPLE L2296 - true
   * Goal 15. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setLoadBalancer(Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;)V: I59 Branch 165 IFEQ L2299 - false
   * Goal 16. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setRecoveryLog(Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;)V: I3 Branch 166 IFNONNULL L2375 - false
   * Goal 17. org.objectweb.cjdbc.controller.requestmanager.RequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I17 Branch 169 IF_ICMPLE L2420 - true
   * Goal 18. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getXml()Ljava/lang/String;: I59 Branch 171 IFNULL L2457 - false
   * Goal 19. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getXml()Ljava/lang/String;: I72 Branch 172 IFNONNULL L2460 - false
   * Goal 20. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getXml()Ljava/lang/String;: I75 Branch 173 IFNONNULL L2460 - false
   * Goal 21. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getXml()Ljava/lang/String;: I78 Branch 174 IFNULL L2460 - false
   * Goal 22. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getXml()Ljava/lang/String;: I89 Branch 175 IFNULL L2463 - true
   * Goal 23. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getXml()Ljava/lang/String;: I102 Branch 176 IFNULL L2465 - true
   * Goal 24. org.objectweb.cjdbc.controller.requestmanager.RequestManager.getXml()Ljava/lang/String;: I115 Branch 177 IFNULL L2467 - false
   */

	@Test(timeout=300000)
  public void test71()  throws Throwable  {
      Controller controller0 = new Controller("", (-257), (-257));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-257), false, 0, (-257), (long) 0, 0, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheColumn resultCacheColumn0 = new ResultCacheColumn((-8), (-257));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RequestManager requestManager0 = new RequestManager(virtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheColumn0, (AbstractLoadBalancer) rAIDb1_WRR0, (RecoveryLog) null, (long) (-257), 0L, (long) (-257));
      // Undeclared exception!
      try { 
        requestManager0.getXml();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.cache.result.ResultCache", e);
      }
  }
}
