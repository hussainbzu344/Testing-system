/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 17:33:58 GMT 2016
 */

package org.objectweb.cjdbc.controller.cache.result.rules;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.sql.SelectRequest;
import org.objectweb.cjdbc.controller.cache.result.ResultCacheTable;
import org.objectweb.cjdbc.controller.cache.result.entries.ResultCacheEntryRelaxed;
import org.objectweb.cjdbc.controller.cache.result.rules.RelaxedCaching;
import org.objectweb.cjdbc.controller.virtualdatabase.ControllerResultSet;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RelaxedCaching_ESTest extends RelaxedCaching_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.cache.result.rules.RelaxedCaching.getXml()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.cache.result.rules.RelaxedCaching.<init>(ZJ)V: root-Branch
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      RelaxedCaching relaxedCaching0 = new RelaxedCaching(true, (-1561L));
      String string0 = relaxedCaching0.getXml();
      assertEquals("<RelaxedCaching timeout=\"-1\" keepIfNotDirty=\"true\"/>", string0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.cache.result.rules.RelaxedCaching.getCacheEntry(Lorg/objectweb/cjdbc/common/sql/SelectRequest;Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;)Lorg/objectweb/cjdbc/controller/cache/result/entries/AbstractResultCacheEntry;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.cache.result.rules.RelaxedCaching.<init>(ZJ)V: root-Branch
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      RelaxedCaching relaxedCaching0 = new RelaxedCaching(false, 0L);
      ResultCacheTable resultCacheTable0 = new ResultCacheTable((-783), (-783));
      ResultCacheEntryRelaxed resultCacheEntryRelaxed0 = (ResultCacheEntryRelaxed)relaxedCaching0.getCacheEntry((SelectRequest) null, (ControllerResultSet) null, resultCacheTable0);
      assertFalse(resultCacheEntryRelaxed0.getKeepIfNotDirty());
  }
}
