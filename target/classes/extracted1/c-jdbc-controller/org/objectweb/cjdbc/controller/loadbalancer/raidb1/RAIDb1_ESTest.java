/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 20:36:06 GMT 2016
 */

package org.objectweb.cjdbc.controller.loadbalancer.raidb1;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.sql.SQLException;
import java.time.chrono.ChronoLocalDate;
import java.util.LinkedList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.exceptions.NoMoreBackendException;
import org.objectweb.cjdbc.common.sql.AbstractWriteRequest;
import org.objectweb.cjdbc.common.sql.DeleteRequest;
import org.objectweb.cjdbc.common.sql.SelectRequest;
import org.objectweb.cjdbc.common.sql.StoredProcedure;
import org.objectweb.cjdbc.common.sql.filters.AbstractBlobFilter;
import org.objectweb.cjdbc.common.sql.filters.BlobEscapedFilter;
import org.objectweb.cjdbc.common.sql.filters.HexaBlobFilter;
import org.objectweb.cjdbc.common.sql.filters.NoneBlobFilter;
import org.objectweb.cjdbc.controller.backend.DatabaseBackend;
import org.objectweb.cjdbc.controller.cache.metadata.MetadataCache;
import org.objectweb.cjdbc.controller.core.Controller;
import org.objectweb.cjdbc.controller.loadbalancer.policies.WaitForCompletionPolicy;
import org.objectweb.cjdbc.controller.loadbalancer.policies.errorchecking.ErrorCheckingAll;
import org.objectweb.cjdbc.controller.loadbalancer.policies.errorchecking.ErrorCheckingPolicy;
import org.objectweb.cjdbc.controller.loadbalancer.policies.errorchecking.ErrorCheckingRandom;
import org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_LPRF;
import org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_RR;
import org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_WRR;
import org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_RR;
import org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_WRR;
import org.objectweb.cjdbc.controller.requestmanager.TransactionMarkerMetaData;
import org.objectweb.cjdbc.controller.virtualdatabase.VirtualDatabase;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RAIDb1_ESTest extends RAIDb1_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.execReadStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.callStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;ZLorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/loadbalancer/tasks/AbstractTask;: I25 Branch 42 IFEQ L785 - true
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.callStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;ZLorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/loadbalancer/tasks/AbstractTask;: I67 Branch 43 IFNE L800 - false
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.callStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;ZLorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/loadbalancer/tasks/AbstractTask;: I71 Branch 44 IFEQ L802 - true
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("n-UEli_0EEw ta8", 0, 0);
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", 3, true, 3, 0, 0L, 1831, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      StoredProcedure storedProcedure0 = new StoredProcedure("L", false, 3, (String) null, false);
      MetadataCache metadataCache0 = new MetadataCache(1, 1831);
      try { 
        rAIDb1_RR0.execReadStoredProcedure(storedProcedure0, metadataCache0);
        fail("Expecting exception: NoMoreBackendException");
      
      } catch(NoMoreBackendException e) {
         //
         // loadbalancer.backendlist.empty
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1", e);
      }
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.execWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)I: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      Controller controller0 = new Controller("Aan5sM^", 60, (-1));
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "#PCDATA", (-1), true, (-671), (-1348), (long) (-1), 508, (AbstractBlobFilter) null);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF(virtualDatabase0, waitForCompletionPolicy0);
      // Undeclared exception!
      try { 
        rAIDb1_LPRF0.execWriteRequest((AbstractWriteRequest) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1", e);
      }
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.execWriteStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)I: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.callStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;ZLorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/loadbalancer/tasks/AbstractTask;: I25 Branch 42 IFEQ L785 - true
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.callStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;ZLorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/loadbalancer/tasks/AbstractTask;: I67 Branch 43 IFNE L800 - false
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.callStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;ZLorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/loadbalancer/tasks/AbstractTask;: I71 Branch 44 IFEQ L802 - true
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      Controller controller0 = new Controller("'U{}g6xX|", 904, 0);
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "loadbalancer.backend.workerthread.blocking.add", 0, true, 0, 2, 1L, (-3221), (AbstractBlobFilter) noneBlobFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF(virtualDatabase0, waitForCompletionPolicy0);
      try { 
        rAIDb1_LPRF0.execWriteStoredProcedure((StoredProcedure) null);
        fail("Expecting exception: NoMoreBackendException");
      
      } catch(NoMoreBackendException e) {
         //
         // loadbalancer.backendlist.empty
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1", e);
      }
  }

  //Test case number: 3
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.execWriteRequestWithKeys(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.execWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;ZLorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/loadbalancer/tasks/AbstractTask;: I16 Branch 14 IFEQ L404 - false
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.execWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;ZLorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/loadbalancer/tasks/AbstractTask;: I60 Branch 17 IFEQ L423 - true
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.execWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;ZLorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/loadbalancer/tasks/AbstractTask;: I102 Branch 18 IFNE L440 - false
   * Goal 6. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.execWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;ZLorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/loadbalancer/tasks/AbstractTask;: I106 Branch 19 IFEQ L442 - true
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      Controller controller0 = new Controller("M_CONTENT_INCOMPLETE", 78, 78);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "M_CONTENT_INCOMPLETE", 78, false, 78, 78, (long) 78, 78, (AbstractBlobFilter) null);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF(virtualDatabase0, waitForCompletionPolicy0);
      DeleteRequest deleteRequest0 = new DeleteRequest("M_CONTENT_INCOMPLETE", false, 78, "M_CONTENT_INCOMPLETE");
      MetadataCache metadataCache0 = new MetadataCache(78, 78);
      try { 
        rAIDb1_LPRF0.execWriteRequestWithKeys(deleteRequest0, metadataCache0);
        fail("Expecting exception: NoMoreBackendException");
      
      } catch(NoMoreBackendException e) {
         //
         // loadbalancer.backendlist.empty
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1", e);
      }
  }

  //Test case number: 4
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.waitForAllWritesToBePostedOnBackendBlockingThreads()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.waitForAllWritesToComplete(J)V: I11 Branch 195 IFNE L2100 - true
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.waitForAllWritesToComplete(J)V: I11 Branch 195 IFNE L2100 - false
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.waitForAllWritesToComplete(J)V: I21 Branch 196 IFEQ L2105 - true
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      Controller controller0 = new Controller("M_CONTENT_INCOMPLETE", 78, 78);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "M_CONTENT_INCOMPLETE", 78, false, 78, 78, (long) 78, 78, (AbstractBlobFilter) null);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF(virtualDatabase0, waitForCompletionPolicy0);
      rAIDb1_LPRF0.waitForAllWritesToComplete(78);
      assertEquals(0, rAIDb1_LPRF0.getParsingGranularity());
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.begin(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      Controller controller0 = new Controller(")/(KrO5|JX]=V", 0, 0);
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", 0, false, 0, 0, 789L, 0, (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      ErrorCheckingAll errorCheckingAll0 = new ErrorCheckingAll();
      RAIDb1ec_RR rAIDb1ec_RR0 = new RAIDb1ec_RR(virtualDatabase0, waitForCompletionPolicy0, (ErrorCheckingPolicy) errorCheckingAll0, 0);
      rAIDb1ec_RR0.begin((TransactionMarkerMetaData) null);
      assertEquals(1, rAIDb1ec_RR0.getRAIDbLevel());
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNumberOfEnabledBackends()I: root-Branch
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      Controller controller0 = new Controller("Qlyx", 2621, 2621);
      NoneBlobFilter noneBlobFilter0 = (NoneBlobFilter)AbstractBlobFilter.getBlobFilterInstance("Qlyx");
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "Qlyx", 2621, true, 2158, 2158, (-1352L), 3, (AbstractBlobFilter) noneBlobFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      int int0 = rAIDb1_WRR0.getNumberOfEnabledBackends();
      assertEquals(0, int0);
  }

  //Test case number: 7
  /*
   * 19 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 1 TABLESWITCH L151 Case 0 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 2 TABLESWITCH L151 Case 1 - false
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 3 TABLESWITCH L151 Case 2 - false
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 4 TABLESWITCH L151 Default-Case - true
   * Goal 6. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I33 Branch 113 IFNULL L1400 - true
   * Goal 7. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I63 Branch 115 IF_ICMPEQ L1413 - false
   * Goal 8. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I67 Branch 116 IFEQ L1417 - true
   * Goal 9. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I132 Branch 117 IF_ICMPGE L1440 - true
   * Goal 10. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I200 Branch 120 IFEQ L1457 - true
   * Goal 11. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I215 Branch 121 IFNONNULL L1463 - false
   * Goal 12. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I223 Branch 122 IFEQ L1469 - true
   * Goal 13. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I278 Branch 123 IF_ICMPGE L1487 - true
   * Goal 14. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I328 Branch 128 IFNONNULL L1505 - false
   * Goal 15. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I330 Branch 129 IFEQ L1505 - true
   * Goal 16. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I354 Branch 130 IF_ICMPGE L1513 - true
   * Goal 17. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I398 Branch 131 IFEQ L1524 - true
   * Goal 18. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I413 Branch 132 IFNULL L1530 - true
   * Goal 19. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I421 Branch 133 IFNONNULL L1534 - false
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      Controller controller0 = new Controller("'U{}g6xX|", 904, 0);
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "loadbalancer.backend.workerthread.blocking.add", 0, true, 0, 2, 1L, (-3221), (AbstractBlobFilter) noneBlobFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      waitForCompletionPolicy0.setPolicy(508);
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF(virtualDatabase0, waitForCompletionPolicy0);
      TransactionMarkerMetaData transactionMarkerMetaData0 = new TransactionMarkerMetaData((long) 2, (long) 2, "loadbalancer.backend.workerthread.blocking.add");
      rAIDb1_LPRF0.rollback(transactionMarkerMetaData0, "loadbalancer.backend.workerthread.blocking.add");
      assertEquals(1, rAIDb1_LPRF0.getRAIDbLevel());
  }

  //Test case number: 8
  /*
   * 15 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 1 TABLESWITCH L151 Case 0 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 2 TABLESWITCH L151 Case 1 - true
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 3 TABLESWITCH L151 Case 2 - false
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 4 TABLESWITCH L151 Default-Case - false
   * Goal 6. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I33 Branch 168 IFNULL L1857 - true
   * Goal 7. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I63 Branch 170 IF_ICMPEQ L1870 - false
   * Goal 8. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I67 Branch 171 IFEQ L1874 - true
   * Goal 9. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I132 Branch 172 IF_ICMPGE L1898 - true
   * Goal 10. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I200 Branch 175 IFEQ L1916 - true
   * Goal 11. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I215 Branch 176 IFNONNULL L1922 - false
   * Goal 12. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I223 Branch 177 IFEQ L1928 - true
   * Goal 13. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I278 Branch 178 IF_ICMPGE L1945 - true
   * Goal 14. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I328 Branch 183 IFNE L1960 - false
   * Goal 15. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I332 Branch 184 IFEQ L1962 - true
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("<EPlQ5Xn-*I8.n6!", 2, 2);
      HexaBlobFilter hexaBlobFilter0 = new HexaBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, (String) null, 2, true, 2, 2, (long) 2, 2, (AbstractBlobFilter) hexaBlobFilter0);
      RAIDb1ec_WRR rAIDb1ec_WRR0 = new RAIDb1ec_WRR(virtualDatabase0, waitForCompletionPolicy0, (ErrorCheckingPolicy) null, 1);
      waitForCompletionPolicy0.setPolicy(1);
      TransactionMarkerMetaData transactionMarkerMetaData0 = new TransactionMarkerMetaData((long) 2, (long) 2, "<EPlQ5Xn-*I8.n6!");
      rAIDb1ec_WRR0.setSavepoint(transactionMarkerMetaData0, (String) null);
      assertEquals(1, rAIDb1ec_WRR0.getRAIDbLevel());
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.executeRequestOnBackend(Lorg/objectweb/cjdbc/common/sql/SelectRequest;Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I15 Branch 5 IFNONNULL L198 - false
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      Controller controller0 = new Controller("", 14, 14);
      HexaBlobFilter hexaBlobFilter0 = new HexaBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "loadbalancer.request.failed.all", 14, true, 14, 14, 0L, 30, (AbstractBlobFilter) hexaBlobFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      SelectRequest selectRequest0 = new SelectRequest("", true, (-1), "loadbalancer.request.failed.all");
      DatabaseBackend databaseBackend0 = new DatabaseBackend("loadbalancer.request.failed.all", "loadbalancer.request.failed.all", "fT5:2%W", "loadbalancer.request.failed.all", "loadbalancer.request.failed.all", false, "loadbalancer.request.failed.all");
      try { 
        rAIDb1_WRR0.executeRequestOnBackend(selectRequest0, databaseBackend0, (MetadataCache) null);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // loadbalancer.connectionmanager.not.found
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1", e);
      }
  }

  //Test case number: 10
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.execWriteRequestWithKeys(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.execWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;ZLorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/loadbalancer/tasks/AbstractTask;: I16 Branch 14 IFEQ L404 - true
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.execWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;ZLorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/loadbalancer/tasks/AbstractTask;: I45 Branch 15 IF_ICMPEQ L413 - false
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.execWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;ZLorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/loadbalancer/tasks/AbstractTask;: I50 Branch 16 IFEQ L413 - true
   * Goal 6. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.execWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;ZLorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/loadbalancer/tasks/AbstractTask;: I60 Branch 17 IFEQ L423 - true
   * Goal 7. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.execWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;ZLorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/loadbalancer/tasks/AbstractTask;: I102 Branch 18 IFNE L440 - false
   * Goal 8. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.execWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;ZLorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/loadbalancer/tasks/AbstractTask;: I106 Branch 19 IFEQ L442 - true
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      Controller controller0 = new Controller("M_CONTENT_INCOMPLETE", 78, 78);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "M_CONTENT_INCOMPLETE", 78, false, 78, 78, (long) 78, 78, (AbstractBlobFilter) null);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF(virtualDatabase0, waitForCompletionPolicy0);
      DeleteRequest deleteRequest0 = new DeleteRequest("M_CONTENT_INCOMPLETE", false, 78, "M_CONTENT_INCOMPLETE");
      MetadataCache metadataCache0 = new MetadataCache(78, 78);
      deleteRequest0.setBlocking(false);
      try { 
        rAIDb1_LPRF0.execWriteRequestWithKeys(deleteRequest0, metadataCache0);
        fail("Expecting exception: NoMoreBackendException");
      
      } catch(NoMoreBackendException e) {
         //
         // loadbalancer.backendlist.empty
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1", e);
      }
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.executeStoredProcedureOnBackend(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I10 Branch 34 IFNONNULL L609 - false
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      HexaBlobFilter hexaBlobFilter0 = new HexaBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase((Controller) null, "loadbalancer.setsavepoint.failed.stack", 320, false, 320, 320, (long) 320, 320, (AbstractBlobFilter) hexaBlobFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      ErrorCheckingRandom errorCheckingRandom0 = new ErrorCheckingRandom(320);
      RAIDb1ec_RR rAIDb1ec_RR0 = new RAIDb1ec_RR(virtualDatabase0, waitForCompletionPolicy0, (ErrorCheckingPolicy) errorCheckingRandom0, (-1817));
      StoredProcedure storedProcedure0 = new StoredProcedure("loadbalancer.setsavepoint.failed.stack", false, (-2080), "loadbalancer.setsavepoint.failed.stack", false);
      DatabaseBackend databaseBackend0 = new DatabaseBackend("", "loadbalancer.setsavepoint.failed.stack", "", "", "", false, "");
      try { 
        rAIDb1ec_RR0.executeStoredProcedureOnBackend(storedProcedure0, databaseBackend0, (MetadataCache) null);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // loadbalancer.connectionmanager.not.found
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1", e);
      }
  }

  //Test case number: 12
  /*
   * 20 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 1 TABLESWITCH L151 Case 0 - true
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 2 TABLESWITCH L151 Case 1 - false
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 3 TABLESWITCH L151 Case 2 - false
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 4 TABLESWITCH L151 Default-Case - false
   * Goal 6. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I33 Branch 57 IFNULL L954 - false
   * Goal 7. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I53 Branch 58 IFNE L962 - false
   * Goal 8. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I64 Branch 59 IF_ICMPEQ L967 - false
   * Goal 9. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I68 Branch 60 IFEQ L971 - true
   * Goal 10. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I132 Branch 61 IF_ICMPGE L994 - true
   * Goal 11. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I200 Branch 64 IFEQ L1011 - true
   * Goal 12. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I215 Branch 65 IFNONNULL L1017 - false
   * Goal 13. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I223 Branch 66 IFEQ L1023 - true
   * Goal 14. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I278 Branch 67 IF_ICMPGE L1040 - true
   * Goal 15. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I328 Branch 72 IFNONNULL L1059 - false
   * Goal 16. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I330 Branch 73 IFEQ L1059 - true
   * Goal 17. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I353 Branch 74 IF_ICMPGE L1066 - true
   * Goal 18. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I397 Branch 75 IFEQ L1076 - true
   * Goal 19. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I412 Branch 76 IFNULL L1082 - true
   * Goal 20. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I420 Branch 77 IFNONNULL L1086 - false
   */

	@Test(timeout=300000)
  public void test12()  throws Throwable  {
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("L", 29, 29);
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "L", 29, false, 29, 29, (long) 29, 29, (AbstractBlobFilter) blobEscapedFilter0);
      TransactionMarkerMetaData transactionMarkerMetaData0 = new TransactionMarkerMetaData((long) 29, (long) 29, "L");
      LinkedList<ChronoLocalDate> linkedList0 = new LinkedList<ChronoLocalDate>();
      virtualDatabase0.setTotalOrderQueue(linkedList0);
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      rAIDb1_WRR0.commit(transactionMarkerMetaData0);
      assertEquals("loadbalancer", rAIDb1_WRR0.getAssociatedString());
  }

  //Test case number: 13
  /*
   * 11 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I33 Branch 57 IFNULL L954 - true
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I64 Branch 59 IF_ICMPEQ L967 - true
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I223 Branch 66 IFEQ L1023 - true
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I278 Branch 67 IF_ICMPGE L1040 - true
   * Goal 6. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I328 Branch 72 IFNONNULL L1059 - false
   * Goal 7. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I330 Branch 73 IFEQ L1059 - true
   * Goal 8. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I353 Branch 74 IF_ICMPGE L1066 - true
   * Goal 9. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I397 Branch 75 IFEQ L1076 - true
   * Goal 10. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I412 Branch 76 IFNULL L1082 - true
   * Goal 11. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.commit(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I420 Branch 77 IFNONNULL L1086 - false
   */

	@Test(timeout=300000)
  public void test13()  throws Throwable  {
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("bEli_0EEta8", 0, 0);
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", 3, true, 3, 2, 0L, 3, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      waitForCompletionPolicy0.setPolicy(2);
      TransactionMarkerMetaData transactionMarkerMetaData0 = new TransactionMarkerMetaData(0L, (long) 0, (String) null);
      rAIDb1_RR0.commit(transactionMarkerMetaData0);
      assertEquals(1, rAIDb1_RR0.getRAIDbLevel());
  }

  //Test case number: 14
  /*
   * 20 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 1 TABLESWITCH L151 Case 0 - true
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 2 TABLESWITCH L151 Case 1 - false
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 3 TABLESWITCH L151 Case 2 - false
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 4 TABLESWITCH L151 Default-Case - false
   * Goal 6. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I33 Branch 85 IFNULL L1176 - false
   * Goal 7. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I53 Branch 86 IFNE L1184 - false
   * Goal 8. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I64 Branch 87 IF_ICMPEQ L1189 - false
   * Goal 9. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I68 Branch 88 IFEQ L1193 - true
   * Goal 10. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I132 Branch 89 IF_ICMPGE L1216 - true
   * Goal 11. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I200 Branch 92 IFEQ L1233 - true
   * Goal 12. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I215 Branch 93 IFNONNULL L1239 - false
   * Goal 13. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I223 Branch 94 IFEQ L1245 - true
   * Goal 14. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I278 Branch 95 IF_ICMPGE L1262 - true
   * Goal 15. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I328 Branch 100 IFNONNULL L1280 - false
   * Goal 16. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I330 Branch 101 IFEQ L1280 - true
   * Goal 17. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I353 Branch 102 IF_ICMPGE L1287 - true
   * Goal 18. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I397 Branch 103 IFEQ L1298 - true
   * Goal 19. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I412 Branch 104 IFNULL L1304 - true
   * Goal 20. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I420 Branch 105 IFNONNULL L1308 - false
   */

	@Test(timeout=300000)
  public void test14()  throws Throwable  {
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("L", 29, 29);
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "L", 29, false, 29, 29, (long) 29, 29, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      TransactionMarkerMetaData transactionMarkerMetaData0 = new TransactionMarkerMetaData((long) 29, (long) 29, "L");
      LinkedList<ChronoLocalDate> linkedList0 = new LinkedList<ChronoLocalDate>();
      virtualDatabase0.setTotalOrderQueue(linkedList0);
      rAIDb1_RR0.rollback(transactionMarkerMetaData0);
      assertEquals(29L, transactionMarkerMetaData0.getTransactionId());
  }

  //Test case number: 15
  /*
   * 11 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I33 Branch 85 IFNULL L1176 - true
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I64 Branch 87 IF_ICMPEQ L1189 - true
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I223 Branch 94 IFEQ L1245 - true
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I278 Branch 95 IF_ICMPGE L1262 - true
   * Goal 6. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I328 Branch 100 IFNONNULL L1280 - false
   * Goal 7. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I330 Branch 101 IFEQ L1280 - true
   * Goal 8. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I353 Branch 102 IF_ICMPGE L1287 - true
   * Goal 9. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I397 Branch 103 IFEQ L1298 - true
   * Goal 10. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I412 Branch 104 IFNULL L1304 - true
   * Goal 11. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I420 Branch 105 IFNONNULL L1308 - false
   */

	@Test(timeout=300000)
  public void test15()  throws Throwable  {
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("bEli_0EEta8", 0, 0);
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", 3, true, 3, 2, 0L, 3, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      waitForCompletionPolicy0.setPolicy(2);
      TransactionMarkerMetaData transactionMarkerMetaData0 = new TransactionMarkerMetaData(0L, (long) 0, (String) null);
      rAIDb1_RR0.rollback(transactionMarkerMetaData0);
      assertNull(transactionMarkerMetaData0.getLogin());
  }

  //Test case number: 16
  /*
   * 20 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 1 TABLESWITCH L151 Case 0 - true
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 2 TABLESWITCH L151 Case 1 - false
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 3 TABLESWITCH L151 Case 2 - false
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 4 TABLESWITCH L151 Default-Case - false
   * Goal 6. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I33 Branch 113 IFNULL L1400 - false
   * Goal 7. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I52 Branch 114 IFNE L1408 - false
   * Goal 8. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I63 Branch 115 IF_ICMPEQ L1413 - false
   * Goal 9. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I67 Branch 116 IFEQ L1417 - true
   * Goal 10. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I132 Branch 117 IF_ICMPGE L1440 - true
   * Goal 11. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I200 Branch 120 IFEQ L1457 - true
   * Goal 12. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I215 Branch 121 IFNONNULL L1463 - false
   * Goal 13. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I223 Branch 122 IFEQ L1469 - true
   * Goal 14. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I278 Branch 123 IF_ICMPGE L1487 - true
   * Goal 15. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I328 Branch 128 IFNONNULL L1505 - false
   * Goal 16. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I330 Branch 129 IFEQ L1505 - true
   * Goal 17. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I354 Branch 130 IF_ICMPGE L1513 - true
   * Goal 18. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I398 Branch 131 IFEQ L1524 - true
   * Goal 19. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I413 Branch 132 IFNULL L1530 - true
   * Goal 20. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I421 Branch 133 IFNONNULL L1534 - false
   */

	@Test(timeout=300000)
  public void test16()  throws Throwable  {
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("L", 29, 29);
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "L", 29, false, 29, 29, (long) 29, 29, (AbstractBlobFilter) blobEscapedFilter0);
      TransactionMarkerMetaData transactionMarkerMetaData0 = new TransactionMarkerMetaData((long) 29, (long) 29, "L");
      LinkedList<ChronoLocalDate> linkedList0 = new LinkedList<ChronoLocalDate>();
      virtualDatabase0.setTotalOrderQueue(linkedList0);
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      rAIDb1_WRR0.rollback(transactionMarkerMetaData0, "L");
      assertEquals("L", transactionMarkerMetaData0.getLogin());
  }

  //Test case number: 17
  /*
   * 11 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I33 Branch 113 IFNULL L1400 - true
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I63 Branch 115 IF_ICMPEQ L1413 - true
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I223 Branch 122 IFEQ L1469 - true
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I278 Branch 123 IF_ICMPGE L1487 - true
   * Goal 6. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I328 Branch 128 IFNONNULL L1505 - false
   * Goal 7. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I330 Branch 129 IFEQ L1505 - true
   * Goal 8. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I354 Branch 130 IF_ICMPGE L1513 - true
   * Goal 9. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I398 Branch 131 IFEQ L1524 - true
   * Goal 10. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I413 Branch 132 IFNULL L1530 - true
   * Goal 11. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.rollback(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I421 Branch 133 IFNONNULL L1534 - false
   */

	@Test(timeout=300000)
  public void test17()  throws Throwable  {
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("<EPlQ5Xn-*I8.6!", 58, 58);
      HexaBlobFilter hexaBlobFilter0 = new HexaBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, (String) null, 58, true, 58, 58, (long) 58, 58, (AbstractBlobFilter) hexaBlobFilter0);
      RAIDb1ec_WRR rAIDb1ec_WRR0 = new RAIDb1ec_WRR(virtualDatabase0, waitForCompletionPolicy0, (ErrorCheckingPolicy) null, 2);
      waitForCompletionPolicy0.setPolicy(2);
      TransactionMarkerMetaData transactionMarkerMetaData0 = new TransactionMarkerMetaData((long) 58, (long) 58, "<EPlQ5Xn-*I8.6!");
      rAIDb1ec_WRR0.rollback(transactionMarkerMetaData0, (String) null);
      assertEquals(58L, transactionMarkerMetaData0.getTransactionId());
  }

  //Test case number: 18
  /*
   * 16 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 1 TABLESWITCH L151 Case 0 - true
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 2 TABLESWITCH L151 Case 1 - false
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 3 TABLESWITCH L151 Case 2 - false
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 4 TABLESWITCH L151 Default-Case - false
   * Goal 6. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.releaseSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I33 Branch 141 IFNULL L1631 - false
   * Goal 7. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.releaseSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I52 Branch 142 IFNE L1639 - false
   * Goal 8. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.releaseSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I63 Branch 143 IF_ICMPEQ L1644 - false
   * Goal 9. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.releaseSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I67 Branch 144 IFEQ L1648 - true
   * Goal 10. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.releaseSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I132 Branch 145 IF_ICMPGE L1672 - true
   * Goal 11. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.releaseSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I200 Branch 148 IFEQ L1690 - true
   * Goal 12. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.releaseSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I215 Branch 149 IFNONNULL L1696 - false
   * Goal 13. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.releaseSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I223 Branch 150 IFEQ L1702 - true
   * Goal 14. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.releaseSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I278 Branch 151 IF_ICMPGE L1719 - true
   * Goal 15. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.releaseSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I328 Branch 156 IFNE L1734 - false
   * Goal 16. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.releaseSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I332 Branch 157 IFEQ L1736 - true
   */

	@Test(timeout=300000)
  public void test18()  throws Throwable  {
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("L", 29, 29);
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "L", 29, false, 29, 29, (long) 29, 29, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      TransactionMarkerMetaData transactionMarkerMetaData0 = new TransactionMarkerMetaData((long) 29, (long) 29, "L");
      LinkedList<ChronoLocalDate> linkedList0 = new LinkedList<ChronoLocalDate>();
      virtualDatabase0.setTotalOrderQueue(linkedList0);
      rAIDb1_RR0.releaseSavepoint(transactionMarkerMetaData0, "L");
      assertEquals(1, rAIDb1_RR0.getRAIDbLevel());
  }

  //Test case number: 19
  /*
   * 7 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.releaseSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I33 Branch 141 IFNULL L1631 - true
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.releaseSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I63 Branch 143 IF_ICMPEQ L1644 - true
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.releaseSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I223 Branch 150 IFEQ L1702 - true
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.releaseSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I278 Branch 151 IF_ICMPGE L1719 - true
   * Goal 6. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.releaseSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I328 Branch 156 IFNE L1734 - false
   * Goal 7. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.releaseSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I332 Branch 157 IFEQ L1736 - true
   */

	@Test(timeout=300000)
  public void test19()  throws Throwable  {
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("n-UEli_0EEw ta8", 29, 29);
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", 29, true, 29, 0, 422L, 29, (AbstractBlobFilter) blobEscapedFilter0);
      waitForCompletionPolicy0.setPolicy(2);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      TransactionMarkerMetaData transactionMarkerMetaData0 = new TransactionMarkerMetaData(422L, (long) 29, "n-UEli_0EEw ta8");
      rAIDb1_RR0.releaseSavepoint(transactionMarkerMetaData0, "");
      assertEquals(1, rAIDb1_RR0.getRAIDbLevel());
  }

  //Test case number: 20
  /*
   * 16 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 1 TABLESWITCH L151 Case 0 - true
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 2 TABLESWITCH L151 Case 1 - false
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 3 TABLESWITCH L151 Case 2 - false
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getNbToWait(I)I: I5 Branch 4 TABLESWITCH L151 Default-Case - false
   * Goal 6. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I33 Branch 168 IFNULL L1857 - false
   * Goal 7. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I52 Branch 169 IFNE L1865 - false
   * Goal 8. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I63 Branch 170 IF_ICMPEQ L1870 - false
   * Goal 9. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I67 Branch 171 IFEQ L1874 - true
   * Goal 10. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I132 Branch 172 IF_ICMPGE L1898 - true
   * Goal 11. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I200 Branch 175 IFEQ L1916 - true
   * Goal 12. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I215 Branch 176 IFNONNULL L1922 - false
   * Goal 13. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I223 Branch 177 IFEQ L1928 - true
   * Goal 14. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I278 Branch 178 IF_ICMPGE L1945 - true
   * Goal 15. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I328 Branch 183 IFNE L1960 - false
   * Goal 16. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I332 Branch 184 IFEQ L1962 - true
   */

	@Test(timeout=300000)
  public void test20()  throws Throwable  {
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("L", 29, 29);
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "L", 29, false, 29, 29, (long) 29, 29, (AbstractBlobFilter) blobEscapedFilter0);
      TransactionMarkerMetaData transactionMarkerMetaData0 = new TransactionMarkerMetaData((long) 29, (long) 29, "L");
      LinkedList<ChronoLocalDate> linkedList0 = new LinkedList<ChronoLocalDate>();
      virtualDatabase0.setTotalOrderQueue(linkedList0);
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      rAIDb1_WRR0.setSavepoint(transactionMarkerMetaData0, "F");
      assertEquals("loadbalancer", rAIDb1_WRR0.getAssociatedString());
  }

  //Test case number: 21
  /*
   * 7 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I33 Branch 168 IFNULL L1857 - true
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I63 Branch 170 IF_ICMPEQ L1870 - true
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I223 Branch 177 IFEQ L1928 - true
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I278 Branch 178 IF_ICMPGE L1945 - true
   * Goal 6. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I328 Branch 183 IFNE L1960 - false
   * Goal 7. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.setSavepoint(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;Ljava/lang/String;)V: I332 Branch 184 IFEQ L1962 - true
   */

	@Test(timeout=300000)
  public void test21()  throws Throwable  {
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("<EPlQ5Xn-*I8.6!", 58, 58);
      HexaBlobFilter hexaBlobFilter0 = new HexaBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, (String) null, 58, true, 58, 58, (long) 58, 58, (AbstractBlobFilter) hexaBlobFilter0);
      RAIDb1ec_WRR rAIDb1ec_WRR0 = new RAIDb1ec_WRR(virtualDatabase0, waitForCompletionPolicy0, (ErrorCheckingPolicy) null, 2);
      waitForCompletionPolicy0.setPolicy(2);
      TransactionMarkerMetaData transactionMarkerMetaData0 = new TransactionMarkerMetaData((long) 58, (long) 58, "<EPlQ5Xn-*I8.6!");
      rAIDb1ec_WRR0.setSavepoint(transactionMarkerMetaData0, (String) null);
      assertEquals(1, rAIDb1ec_WRR0.getRAIDbLevel());
  }

  //Test case number: 22
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.waitForAllWritesToBePostedOnBackendBlockingThreads()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.waitForAllWritesToComplete(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;J)V: I11 Branch 197 IFNE L2133 - true
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.waitForAllWritesToComplete(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;J)V: I11 Branch 197 IFNE L2133 - false
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.waitForAllWritesToComplete(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;J)V: I21 Branch 198 IFEQ L2138 - true
   */

	@Test(timeout=300000)
  public void test22()  throws Throwable  {
      Controller controller0 = new Controller("Aans^", 87, 87);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      HexaBlobFilter hexaBlobFilter0 = new HexaBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "Aans^", 87, true, 87, 87, (long) 87, 87, (AbstractBlobFilter) hexaBlobFilter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      rAIDb1_RR0.waitForAllWritesToComplete((DatabaseBackend) null, 87);
      assertEquals(1, rAIDb1_RR0.getRAIDbLevel());
  }

  //Test case number: 23
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.waitForAllWritesToBePostedOnBackendBlockingThreads()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.waitForAllWritesToComplete(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;)V: I11 Branch 200 IFNE L2169 - true
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.waitForAllWritesToComplete(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;)V: I11 Branch 200 IFNE L2169 - false
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.waitForAllWritesToComplete(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;)V: I21 Branch 201 IFEQ L2174 - true
   */

	@Test(timeout=300000)
  public void test23()  throws Throwable  {
      Controller controller0 = new Controller("'U{}g6xX", 904, 904);
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "'U{}g6xX", 904, true, 904, 904, (long) 904, 904, (AbstractBlobFilter) noneBlobFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF(virtualDatabase0, waitForCompletionPolicy0);
      rAIDb1_LPRF0.waitForAllWritesToComplete((DatabaseBackend) null);
      assertEquals(0, rAIDb1_LPRF0.getNumberOfEnabledBackends());
  }

  //Test case number: 24
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.enableBackend(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Z)V: I3 Branch 203 IFEQ L2211 - true
   */

	@Test(timeout=300000)
  public void test24()  throws Throwable  {
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("n-UEli_0EEw ta8", 0, 0);
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", 3, true, 3, 0, 0L, 1831, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      // Undeclared exception!
      try { 
        rAIDb1_RR0.enableBackend((DatabaseBackend) null, false);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1", e);
      }
  }

  //Test case number: 25
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.enableBackend(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Z)V: I3 Branch 203 IFEQ L2211 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.enableBackend(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Z)V: I6 Branch 204 IFEQ L2211 - true
   */

	@Test(timeout=300000)
  public void test25()  throws Throwable  {
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase((Controller) null, " ^]Qk", 2030, false, 2030, 2030, (long) 2030, 2030, (AbstractBlobFilter) noneBlobFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF(virtualDatabase0, waitForCompletionPolicy0);
      DatabaseBackend databaseBackend0 = new DatabaseBackend("<WaitForCompletion policy=\"first\"/>", " ^]Qk", "<WaitForCompletion policy=\"first\"/>", "<WaitForCompletion policy=\"first\"/>", " ^]Qk", false, " ^]Qk");
      try { 
        rAIDb1_LPRF0.enableBackend(databaseBackend0, true);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // backend.null.connection.manager
         //
         assertThrownBy("org.objectweb.cjdbc.controller.backend.DatabaseBackend", e);
      }
  }

  //Test case number: 26
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.enableBackend(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Z)V: I3 Branch 203 IFEQ L2211 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.enableBackend(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Z)V: I6 Branch 204 IFEQ L2211 - false
   */

	@Test(timeout=300000)
  public void test26()  throws Throwable  {
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      Controller controller0 = new Controller("09gI@<rE", 3, 3);
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", 3, true, 3, 2, (-20L), 3, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      DatabaseBackend databaseBackend0 = new DatabaseBackend("", "09gI@<rE", "09gI@<rE", "{>bult\"!6ar`[O}9$K9", "85hl[3Yq1]KJA", true, "GzkcP");
      try { 
        rAIDb1_RR0.enableBackend(databaseBackend0, true);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // backend.null.connection.manager
         //
         assertThrownBy("org.objectweb.cjdbc.controller.backend.DatabaseBackend", e);
      }
  }

  //Test case number: 27
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.disableBackend(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;)V: I4 Branch 206 IFEQ L2274 - true
   */

	@Test(timeout=300000)
  public void test27()  throws Throwable  {
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase((Controller) null, "KDq-yodn{T1PEUNx", 2030, false, 2030, 2030, (long) 2030, 2030, (AbstractBlobFilter) noneBlobFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF(virtualDatabase0, waitForCompletionPolicy0);
      DatabaseBackend databaseBackend0 = new DatabaseBackend("<WaitForCompletion policy=\"first\"/>", "KDq-yodn{T1PEUNx", "<WaitForCompletion policy=\"first\"/>", "<WaitForCompletion policy=\"first\"/>", "KDq-yodn{T1PEUNx", false, "KDq-yodn{T1PEUNx");
      try { 
        rAIDb1_LPRF0.disableBackend(databaseBackend0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // backend.null.connection.manager
         //
         assertThrownBy("org.objectweb.cjdbc.controller.backend.DatabaseBackend", e);
      }
  }

  //Test case number: 28
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getXmlImpl()Ljava/lang/String;: I16 Branch 214 IFNULL L2412 - true
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getXmlImpl()Ljava/lang/String;: I29 Branch 215 IFNULL L2414 - true
   */

	@Test(timeout=300000)
  public void test28()  throws Throwable  {
      Controller controller0 = new Controller("", 1608, 126);
      NoneBlobFilter noneBlobFilter0 = (NoneBlobFilter)AbstractBlobFilter.getBlobFilterInstance("");
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", 126, false, (-4787), (-4787), 2911L, (-4787), (AbstractBlobFilter) noneBlobFilter0);
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, (WaitForCompletionPolicy) null);
      rAIDb1_RR0.getXmlImpl();
  }

  //Test case number: 29
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getXmlImpl()Ljava/lang/String;: I16 Branch 214 IFNULL L2412 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1.getXmlImpl()Ljava/lang/String;: I29 Branch 215 IFNULL L2414 - true
   */

	@Test(timeout=300000)
  public void test29()  throws Throwable  {
      Controller controller0 = new Controller("'U{}g6xX|", 904, 0);
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "loadbalancer.backend.workerthread.blocking.add", 0, true, 0, 2, 1L, (-3221), (AbstractBlobFilter) noneBlobFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF(virtualDatabase0, waitForCompletionPolicy0);
      rAIDb1_LPRF0.getXmlImpl();
  }
}
