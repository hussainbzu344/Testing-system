/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 23:03:05 GMT 2016
 */

package org.objectweb.cjdbc.controller.loadbalancer.raidb2;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.sql.SQLException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.sql.SelectRequest;
import org.objectweb.cjdbc.common.sql.StoredProcedure;
import org.objectweb.cjdbc.common.sql.filters.AbstractBlobFilter;
import org.objectweb.cjdbc.common.sql.filters.Base64Filter;
import org.objectweb.cjdbc.common.sql.filters.HexaBlobFilter;
import org.objectweb.cjdbc.controller.cache.metadata.MetadataCache;
import org.objectweb.cjdbc.controller.core.Controller;
import org.objectweb.cjdbc.controller.loadbalancer.policies.WaitForCompletionPolicy;
import org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTablePolicy;
import org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_RR;
import org.objectweb.cjdbc.controller.virtualdatabase.VirtualDatabase;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RAIDb2_RR_ESTest extends RAIDb2_RR_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_RR.getRaidb2Xml()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_RR.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/createtable/CreateTablePolicy;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      Controller controller0 = new Controller("RAIDb-2 Round-Robin Request load balancer (", 0, 0);
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "RAIDb-2 Round-Robin Request load balancer (", 0, false, 0, 0, 850L, 0, (AbstractBlobFilter) base64Filter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      CreateTablePolicy createTablePolicy0 = new CreateTablePolicy();
      RAIDb2_RR rAIDb2_RR0 = new RAIDb2_RR(virtualDatabase0, waitForCompletionPolicy0, createTablePolicy0);
      String string0 = rAIDb2_RR0.getRaidb2Xml();
      assertEquals("<RAIDb-2-RoundRobin/>", string0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_RR.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/createtable/CreateTablePolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_RR.execReadRequest(Lorg/objectweb/cjdbc/common/sql/SelectRequest;Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I47 Branch 1 IFNE L125 - false
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      Controller controller0 = new Controller("org.apacK.xerces.parsers.XIncluxeAwareParserConfiguration", (-30), (-30));
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "org.apacK.xerces.parsers.XIncluxeAwareParserConfiguration", (-30), false, (-30), (-30), (long) (-30), (-30), (AbstractBlobFilter) base64Filter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      SelectRequest selectRequest0 = new SelectRequest("org.apacK.xerces.parsers.XIncluxeAwareParserConfiguration", false, (-30), "org.apacK.xerces.parsers.XIncluxeAwareParserConfiguration");
      CreateTablePolicy createTablePolicy0 = new CreateTablePolicy();
      RAIDb2_RR rAIDb2_RR0 = new RAIDb2_RR(virtualDatabase0, waitForCompletionPolicy0, createTablePolicy0);
      try { 
        rAIDb2_RR0.execReadRequest(selectRequest0, (MetadataCache) null);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // loadbalancer.execute.no.backend.available
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_RR", e);
      }
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_RR.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/createtable/CreateTablePolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_RR.execReadOnlyReadStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I59 Branch 8 IFNE L243 - false
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
      Controller controller0 = new Controller("F", 2209, 2209);
      HexaBlobFilter hexaBlobFilter0 = new HexaBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "F", 2209, false, 2209, 2209, (long) 2209, 2209, (AbstractBlobFilter) hexaBlobFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      CreateTablePolicy createTablePolicy0 = new CreateTablePolicy();
      RAIDb2_RR rAIDb2_RR0 = new RAIDb2_RR(virtualDatabase0, waitForCompletionPolicy0, createTablePolicy0);
      StoredProcedure storedProcedure0 = new StoredProcedure("RAIDb-2 Round-Robin Request load balancer: !!!Warning!!! No backend nodes found\n", false, 2209, "F", false);
      MetadataCache metadataCache0 = new MetadataCache(2209, 2209);
      try { 
        rAIDb2_RR0.execReadOnlyReadStoredProcedure(storedProcedure0, metadataCache0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // loadbalancer.execute.no.backend.available
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_RR", e);
      }
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_RR.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/createtable/CreateTablePolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_RR.getInformation()Ljava/lang/String;: I10 Branch 24 IFNE L378 - false
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
      Controller controller0 = new Controller("F", 2209, 2209);
      HexaBlobFilter hexaBlobFilter0 = new HexaBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "F", 2209, false, 2209, 2209, (long) 2209, 2209, (AbstractBlobFilter) hexaBlobFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      CreateTablePolicy createTablePolicy0 = new CreateTablePolicy();
      RAIDb2_RR rAIDb2_RR0 = new RAIDb2_RR(virtualDatabase0, waitForCompletionPolicy0, createTablePolicy0);
      String string0 = rAIDb2_RR0.getInformation();
      assertEquals("RAIDb-2 Round-Robin Request load balancer: !!!Warning!!! No backend nodes found\n", string0);
  }
}
