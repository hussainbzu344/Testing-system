/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 20:51:56 GMT 2016
 */

package org.objectweb.cjdbc.controller.loadbalancer.raidb1;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.exceptions.NotImplementedException;
import org.objectweb.cjdbc.common.sql.SelectRequest;
import org.objectweb.cjdbc.common.sql.StoredProcedure;
import org.objectweb.cjdbc.common.sql.filters.AbstractBlobFilter;
import org.objectweb.cjdbc.common.sql.filters.BlobEscapedFilter;
import org.objectweb.cjdbc.common.sql.filters.HexaBlobFilter;
import org.objectweb.cjdbc.common.sql.schema.DatabaseSchema;
import org.objectweb.cjdbc.controller.cache.metadata.MetadataCache;
import org.objectweb.cjdbc.controller.core.Controller;
import org.objectweb.cjdbc.controller.loadbalancer.policies.WaitForCompletionPolicy;
import org.objectweb.cjdbc.controller.loadbalancer.policies.errorchecking.ErrorCheckingAll;
import org.objectweb.cjdbc.controller.loadbalancer.policies.errorchecking.ErrorCheckingPolicy;
import org.objectweb.cjdbc.controller.loadbalancer.policies.errorchecking.ErrorCheckingRoundRobin;
import org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_WRR;
import org.objectweb.cjdbc.controller.virtualdatabase.VirtualDatabase;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RAIDb1ec_WRR_ESTest extends RAIDb1ec_WRR_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_WRR.execReadRequest(Lorg/objectweb/cjdbc/common/sql/SelectRequest;Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_WRR.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/errorchecking/ErrorCheckingPolicy;I)V: root-Branch
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      Controller controller0 = new Controller("", (-2007), (-1));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", 2380, true, (-1), 2380, (-3051L), 0, (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1ec_WRR rAIDb1ec_WRR0 = new RAIDb1ec_WRR(virtualDatabase0, waitForCompletionPolicy0, (ErrorCheckingPolicy) null, 0);
      SelectRequest selectRequest0 = new SelectRequest("", true, 0, (String) null, (DatabaseSchema) null, 0, false);
      try { 
        rAIDb1ec_WRR0.execReadRequest(selectRequest0, (MetadataCache) null);
        fail("Expecting exception: NotImplementedException");
      
      } catch(NotImplementedException e) {
         //
         // org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_WRR:execReadRequest not implemented
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_WRR", e);
      }
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_WRR.getRaidb1Xml()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_WRR.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/errorchecking/ErrorCheckingPolicy;I)V: root-Branch
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      Controller controller0 = new Controller("Py;XbPm$>.^ZuE", (-464), (-464));
      HexaBlobFilter hexaBlobFilter0 = new HexaBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "LaU03", (-1), true, 1734, 296, 0L, (-464), (AbstractBlobFilter) hexaBlobFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      ErrorCheckingRoundRobin errorCheckingRoundRobin0 = new ErrorCheckingRoundRobin(296);
      RAIDb1ec_WRR rAIDb1ec_WRR0 = new RAIDb1ec_WRR(virtualDatabase0, waitForCompletionPolicy0, (ErrorCheckingPolicy) errorCheckingRoundRobin0, (-1));
      String string0 = rAIDb1ec_WRR0.getRaidb1Xml();
      assertEquals("<RAIDb-1ec-WeightedRoundRobin></RAIDb-1ec-WeightedRoundRobin>", string0);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_WRR.execReadOnlyReadStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_WRR.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/errorchecking/ErrorCheckingPolicy;I)V: root-Branch
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
      Controller controller0 = new Controller("o=eeg Y", (-3071), (-3071));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "/I", (-3071), true, (-3071), (-3071), 0L, (-3071), (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      ErrorCheckingAll errorCheckingAll0 = new ErrorCheckingAll();
      RAIDb1ec_WRR rAIDb1ec_WRR0 = new RAIDb1ec_WRR(virtualDatabase0, waitForCompletionPolicy0, (ErrorCheckingPolicy) errorCheckingAll0, (-3071));
      StoredProcedure storedProcedure0 = new StoredProcedure("loadbalancer.weight.set", false, (-3071), "RAIDb-1ec-WeightedRoundRobin", true);
      MetadataCache metadataCache0 = new MetadataCache(1, 1);
      try { 
        rAIDb1ec_WRR0.execReadOnlyReadStoredProcedure(storedProcedure0, metadataCache0);
        fail("Expecting exception: NotImplementedException");
      
      } catch(NotImplementedException e) {
         //
         // org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_WRR:execReadStoredProcedure not implemented
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_WRR", e);
      }
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_WRR.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/errorchecking/ErrorCheckingPolicy;I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_WRR.setWeight(Ljava/lang/String;I)V: I4 Branch 1 IFEQ L126 - true
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
      Controller controller0 = new Controller("w", (-49), (-49));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "w", (-49), true, (-49), (-49), (long) (-49), (-49), (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1ec_WRR rAIDb1ec_WRR0 = new RAIDb1ec_WRR(virtualDatabase0, waitForCompletionPolicy0, (ErrorCheckingPolicy) null, (-49));
      // Undeclared exception!
      try { 
        rAIDb1ec_WRR0.setWeight("RAIDb-1 Error Checking with Weighted Round-Robin Request load balancer: !!!Warning!!! No backend nodes found\n", (-49));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_WRR", e);
      }
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_WRR.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/errorchecking/ErrorCheckingPolicy;I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_WRR.getInformation()Ljava/lang/String;: I10 Branch 2 IFNE L147 - false
   */

	@Test(timeout=300000)
  public void test4()  throws Throwable  {
      Controller controller0 = new Controller("w", (-49), (-49));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "w", (-49), true, (-49), (-49), (long) (-49), (-49), (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1ec_WRR rAIDb1ec_WRR0 = new RAIDb1ec_WRR(virtualDatabase0, waitForCompletionPolicy0, (ErrorCheckingPolicy) null, (-49));
      String string0 = rAIDb1ec_WRR0.getInformation();
      assertEquals("RAIDb-1 Error Checking with Weighted Round-Robin Request load balancer: !!!Warning!!! No backend nodes found\n", string0);
  }
}
