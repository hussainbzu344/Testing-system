/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 19:03:04 GMT 2016
 */

package org.objectweb.cjdbc.controller.backend;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class DatabaseBackendSchemaConstants_ESTest extends DatabaseBackendSchemaConstants_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(Ljava/lang/String;)I: I5 Branch 1 IFLE L55 - true
   * Goal 2. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(Ljava/lang/String;)I: I15 Branch 2 IFLE L57 - true
   * Goal 3. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(Ljava/lang/String;)I: I25 Branch 3 IFLE L59 - true
   * Goal 4. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(Ljava/lang/String;)I: I35 Branch 4 IFLE L61 - true
   * Goal 5. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(Ljava/lang/String;)I: I45 Branch 5 IFLE L63 - false
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      int int0 = DatabaseBackendSchemaConstants.getDynamicSchemaLevel("all");
      assertEquals(4, int0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * Goal 1. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(Ljava/lang/String;)I: I5 Branch 1 IFLE L55 - false
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      int int0 = DatabaseBackendSchemaConstants.getDynamicSchemaLevel("static");
      assertEquals(0, int0);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(Ljava/lang/String;)I: I5 Branch 1 IFLE L55 - true
   * Goal 2. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(Ljava/lang/String;)I: I15 Branch 2 IFLE L57 - false
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      int int0 = DatabaseBackendSchemaConstants.getDynamicSchemaLevel("table");
      assertEquals(1, int0);
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(Ljava/lang/String;)I: I5 Branch 1 IFLE L55 - true
   * Goal 2. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(Ljava/lang/String;)I: I15 Branch 2 IFLE L57 - true
   * Goal 3. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(Ljava/lang/String;)I: I25 Branch 3 IFLE L59 - false
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      int int0 = DatabaseBackendSchemaConstants.getDynamicSchemaLevel("column");
      assertEquals(2, int0);
  }

  //Test case number: 4
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(Ljava/lang/String;)I: I5 Branch 1 IFLE L55 - true
   * Goal 2. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(Ljava/lang/String;)I: I15 Branch 2 IFLE L57 - true
   * Goal 3. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(Ljava/lang/String;)I: I25 Branch 3 IFLE L59 - true
   * Goal 4. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(Ljava/lang/String;)I: I35 Branch 4 IFLE L61 - false
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      int int0 = DatabaseBackendSchemaConstants.getDynamicSchemaLevel("procedures");
      assertEquals(3, int0);
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(Ljava/lang/String;)I: I5 Branch 1 IFLE L55 - true
   * Goal 2. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(Ljava/lang/String;)I: I15 Branch 2 IFLE L57 - true
   * Goal 3. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(Ljava/lang/String;)I: I25 Branch 3 IFLE L59 - true
   * Goal 4. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(Ljava/lang/String;)I: I35 Branch 4 IFLE L61 - true
   * Goal 5. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(Ljava/lang/String;)I: I45 Branch 5 IFLE L63 - true
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      // Undeclared exception!
      try { 
        DatabaseBackendSchemaConstants.getDynamicSchemaLevel("");
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Invalid dynamic precision 
         //
         assertThrownBy("org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants", e);
      }
  }

  //Test case number: 6
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 6 TABLESWITCH L78 Case 0 - true
   * Goal 2. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 7 TABLESWITCH L78 Case 1 - false
   * Goal 3. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 8 TABLESWITCH L78 Case 2 - false
   * Goal 4. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 9 TABLESWITCH L78 Case 3 - false
   * Goal 5. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 10 TABLESWITCH L78 Case 4 - false
   * Goal 6. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 11 TABLESWITCH L78 Default-Case - false
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      String string0 = DatabaseBackendSchemaConstants.getDynamicSchemaLevel(0);
      assertEquals("static", string0);
  }

  //Test case number: 7
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 6 TABLESWITCH L78 Case 0 - false
   * Goal 2. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 7 TABLESWITCH L78 Case 1 - false
   * Goal 3. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 8 TABLESWITCH L78 Case 2 - false
   * Goal 4. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 9 TABLESWITCH L78 Case 3 - false
   * Goal 5. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 10 TABLESWITCH L78 Case 4 - false
   * Goal 6. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 11 TABLESWITCH L78 Default-Case - true
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      String string0 = DatabaseBackendSchemaConstants.getDynamicSchemaLevel((-1609));
      assertEquals("all", string0);
  }

  //Test case number: 8
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 6 TABLESWITCH L78 Case 0 - false
   * Goal 2. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 7 TABLESWITCH L78 Case 1 - true
   * Goal 3. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 8 TABLESWITCH L78 Case 2 - false
   * Goal 4. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 9 TABLESWITCH L78 Case 3 - false
   * Goal 5. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 10 TABLESWITCH L78 Case 4 - false
   * Goal 6. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 11 TABLESWITCH L78 Default-Case - false
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      String string0 = DatabaseBackendSchemaConstants.getDynamicSchemaLevel(1);
      assertEquals("table", string0);
  }

  //Test case number: 9
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 6 TABLESWITCH L78 Case 0 - false
   * Goal 2. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 7 TABLESWITCH L78 Case 1 - false
   * Goal 3. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 8 TABLESWITCH L78 Case 2 - true
   * Goal 4. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 9 TABLESWITCH L78 Case 3 - false
   * Goal 5. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 10 TABLESWITCH L78 Case 4 - false
   * Goal 6. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 11 TABLESWITCH L78 Default-Case - false
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      String string0 = DatabaseBackendSchemaConstants.getDynamicSchemaLevel(2);
      assertEquals("column", string0);
  }

  //Test case number: 10
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 6 TABLESWITCH L78 Case 0 - false
   * Goal 2. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 7 TABLESWITCH L78 Case 1 - false
   * Goal 3. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 8 TABLESWITCH L78 Case 2 - false
   * Goal 4. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 9 TABLESWITCH L78 Case 3 - true
   * Goal 5. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 10 TABLESWITCH L78 Case 4 - false
   * Goal 6. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 11 TABLESWITCH L78 Default-Case - false
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      String string0 = DatabaseBackendSchemaConstants.getDynamicSchemaLevel(3);
      assertEquals("procedures", string0);
  }

  //Test case number: 11
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 6 TABLESWITCH L78 Case 0 - false
   * Goal 2. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 7 TABLESWITCH L78 Case 1 - false
   * Goal 3. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 8 TABLESWITCH L78 Case 2 - false
   * Goal 4. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 9 TABLESWITCH L78 Case 3 - false
   * Goal 5. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 10 TABLESWITCH L78 Case 4 - true
   * Goal 6. org.objectweb.cjdbc.controller.backend.DatabaseBackendSchemaConstants.getDynamicSchemaLevel(I)Ljava/lang/String;: I3 Branch 11 TABLESWITCH L78 Default-Case - false
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      String string0 = DatabaseBackendSchemaConstants.getDynamicSchemaLevel(4);
      assertEquals("all", string0);
  }
}
