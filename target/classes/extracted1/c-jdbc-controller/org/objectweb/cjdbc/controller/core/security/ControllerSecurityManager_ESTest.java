/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 16:47:16 GMT 2016
 */

package org.objectweb.cjdbc.controller.core.security;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockSocket;
import org.evosuite.runtime.testdata.EvoSuiteRemoteAddress;
import org.evosuite.runtime.testdata.NetworkHandling;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.net.SSLConfiguration;
import org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ControllerSecurityManager_ESTest extends ControllerSecurityManager_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.setBlock(Ljava/util/ArrayList;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.<init>()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getBlock()Ljava/util/ArrayList;: root-Branch
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      ControllerSecurityManager controllerSecurityManager0 = new ControllerSecurityManager();
      ArrayList arrayList0 = controllerSecurityManager0.getBlock();
      controllerSecurityManager0.setBlock(arrayList0);
      assertTrue(controllerSecurityManager0.getDefaultConnect());
      assertTrue(controllerSecurityManager0.getAllowAdditionalDriver());
      assertTrue(controllerSecurityManager0.getAllowLocalConsoleOnly());
      assertTrue(controllerSecurityManager0.getAllowClientShutdown());
      assertTrue(controllerSecurityManager0.getAllowLocalClientOnly());
      assertTrue(controllerSecurityManager0.getAllowConsoleShutdown());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.setDefaultConnect(Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.<init>()V: root-Branch
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      ControllerSecurityManager controllerSecurityManager0 = new ControllerSecurityManager();
      controllerSecurityManager0.setDefaultConnect(true);
      assertTrue(controllerSecurityManager0.getDefaultConnect());
      assertTrue(controllerSecurityManager0.getAllowLocalClientOnly());
      assertTrue(controllerSecurityManager0.getAllowClientShutdown());
      assertTrue(controllerSecurityManager0.getAllowConsoleShutdown());
      assertTrue(controllerSecurityManager0.getAllowAdditionalDriver());
      assertTrue(controllerSecurityManager0.getAllowLocalConsoleOnly());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.setAllowLocalConsoleOnly(Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.<init>()V: root-Branch
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      ControllerSecurityManager controllerSecurityManager0 = new ControllerSecurityManager();
      assertTrue(controllerSecurityManager0.getAllowLocalConsoleOnly());
      
      controllerSecurityManager0.setAllowLocalConsoleOnly(false);
      assertFalse(controllerSecurityManager0.getAllowLocalConsoleOnly());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.setAllowLocalClientOnly(Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.<init>()V: root-Branch
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      ControllerSecurityManager controllerSecurityManager0 = new ControllerSecurityManager();
      assertTrue(controllerSecurityManager0.getAllowLocalClientOnly());
      
      controllerSecurityManager0.setAllowLocalClientOnly(false);
      assertFalse(controllerSecurityManager0.getAllowLocalClientOnly());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.setAllowConsoleShutdown(Z)V: root-Branch
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      ControllerSecurityManager controllerSecurityManager0 = new ControllerSecurityManager();
      controllerSecurityManager0.setAllowConsoleShutdown(true);
      assertTrue(controllerSecurityManager0.getAllowLocalConsoleOnly());
      assertTrue(controllerSecurityManager0.getDefaultConnect());
      assertTrue(controllerSecurityManager0.getAllowAdditionalDriver());
      assertTrue(controllerSecurityManager0.getAllowConsoleShutdown());
      assertTrue(controllerSecurityManager0.getAllowLocalClientOnly());
      assertTrue(controllerSecurityManager0.getAllowClientShutdown());
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.setAllowClientShutdown(Z)V: root-Branch
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      ControllerSecurityManager controllerSecurityManager0 = new ControllerSecurityManager();
      controllerSecurityManager0.setAllowClientShutdown(true);
      assertTrue(controllerSecurityManager0.getAllowLocalConsoleOnly());
      assertTrue(controllerSecurityManager0.getAllowLocalClientOnly());
      assertTrue(controllerSecurityManager0.getAllowAdditionalDriver());
      assertTrue(controllerSecurityManager0.getAllowConsoleShutdown());
      assertTrue(controllerSecurityManager0.getDefaultConnect());
      assertTrue(controllerSecurityManager0.getAllowClientShutdown());
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.setAllowAdditionalDriver(Z)V: root-Branch
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      ControllerSecurityManager controllerSecurityManager0 = new ControllerSecurityManager();
      controllerSecurityManager0.setAllowAdditionalDriver(true);
      assertTrue(controllerSecurityManager0.getAllowLocalClientOnly());
      assertTrue(controllerSecurityManager0.getAllowClientShutdown());
      assertTrue(controllerSecurityManager0.getAllowLocalConsoleOnly());
      assertTrue(controllerSecurityManager0.getAllowConsoleShutdown());
      assertTrue(controllerSecurityManager0.getAllowAdditionalDriver());
      assertTrue(controllerSecurityManager0.getDefaultConnect());
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getSslConfig()Lorg/objectweb/cjdbc/common/net/SSLConfiguration;: root-Branch
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      ControllerSecurityManager controllerSecurityManager0 = new ControllerSecurityManager();
      controllerSecurityManager0.getSslConfig();
      assertTrue(controllerSecurityManager0.getAllowAdditionalDriver());
      assertTrue(controllerSecurityManager0.getAllowLocalClientOnly());
      assertTrue(controllerSecurityManager0.getAllowConsoleShutdown());
      assertTrue(controllerSecurityManager0.getAllowLocalConsoleOnly());
      assertTrue(controllerSecurityManager0.getDefaultConnect());
      assertTrue(controllerSecurityManager0.getAllowClientShutdown());
  }

  //Test case number: 8
  /*
   * 9 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.allowConnection(Ljava/net/Socket;)Z: I6 Branch 1 IFEQ L74 - true
   * Goal 3. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.allowConnection(Ljava/net/Socket;)Z: I17 Branch 2 IFEQ L76 - false
   * Goal 4. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.addToSecureList(Lorg/apache/regexp/RE;Z)V: I3 Branch 3 IFEQ L89 - true
   * Goal 5. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.addToSecureList(Ljava/lang/String;Z)V: I16 Branch 4 IFEQ L107 - true
   * Goal 6. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.checkList(Ljava/util/ArrayList;Ljava/net/Socket;)Z: I50 Branch 6 IF_ICMPGE L135 - true
   * Goal 7. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.checkList(Ljava/util/ArrayList;Ljava/net/Socket;)Z: I50 Branch 6 IF_ICMPGE L135 - false
   * Goal 8. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.checkList(Ljava/util/ArrayList;Ljava/net/Socket;)Z: I61 Branch 7 IFEQ L138 - false
   * Goal 9. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.checkList(Ljava/util/ArrayList;Ljava/net/Socket;)Z: I72 Branch 8 IFEQ L141 - false
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      ControllerSecurityManager controllerSecurityManager0 = new ControllerSecurityManager();
      controllerSecurityManager0.addToSecureList("", false);
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 7);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      MockSocket mockSocket0 = new MockSocket("qvq)rz]TM>u", 7);
      boolean boolean0 = controllerSecurityManager0.allowConnection(mockSocket0);
      assertTrue(controllerSecurityManager0.getAllowLocalClientOnly());
      assertTrue(controllerSecurityManager0.getAllowClientShutdown());
      assertEquals("Socket[addr=/200.42.42.0,port=7,localport=40000]", mockSocket0.toString());
      assertTrue(controllerSecurityManager0.getAllowLocalConsoleOnly());
      assertTrue(controllerSecurityManager0.getAllowAdditionalDriver());
      assertTrue(controllerSecurityManager0.getDefaultConnect());
      assertTrue(controllerSecurityManager0.getAllowConsoleShutdown());
      assertFalse(boolean0);
  }

  //Test case number: 9
  /*
   * 7 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.allowConnection(Ljava/net/Socket;)Z: I6 Branch 1 IFEQ L74 - false
   * Goal 3. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.addHostToSecureList(Ljava/lang/String;Z)V: I3 Branch 5 IFEQ L121 - false
   * Goal 4. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.checkList(Ljava/util/ArrayList;Ljava/net/Socket;)Z: I50 Branch 6 IF_ICMPGE L135 - false
   * Goal 5. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.checkList(Ljava/util/ArrayList;Ljava/net/Socket;)Z: I61 Branch 7 IFEQ L138 - true
   * Goal 6. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.checkList(Ljava/util/ArrayList;Ljava/net/Socket;)Z: I81 Branch 9 IFEQ L144 - false
   * Goal 7. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.checkList(Ljava/util/ArrayList;Ljava/net/Socket;)Z: I92 Branch 10 IFGT L147 - true
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      ControllerSecurityManager controllerSecurityManager0 = new ControllerSecurityManager();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 7);
      controllerSecurityManager0.addHostToSecureList("200.42.42.0", true);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      MockSocket mockSocket0 = new MockSocket("200.42.42.0", 7);
      boolean boolean0 = controllerSecurityManager0.allowConnection(mockSocket0);
      assertTrue(controllerSecurityManager0.getAllowLocalConsoleOnly());
      assertTrue(controllerSecurityManager0.getDefaultConnect());
      assertTrue(controllerSecurityManager0.getAllowConsoleShutdown());
      assertTrue(controllerSecurityManager0.getAllowAdditionalDriver());
      assertEquals("Socket[addr=/200.42.42.0,port=7,localport=40000]", mockSocket0.toString());
      assertTrue(boolean0);
      assertTrue(controllerSecurityManager0.getAllowClientShutdown());
      assertTrue(controllerSecurityManager0.getAllowLocalClientOnly());
  }

  //Test case number: 10
  /*
   * 10 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.allowConnection(Ljava/net/Socket;)Z: I6 Branch 1 IFEQ L74 - true
   * Goal 3. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.allowConnection(Ljava/net/Socket;)Z: I17 Branch 2 IFEQ L76 - true
   * Goal 4. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.addToSecureList(Lorg/apache/regexp/RE;Z)V: I3 Branch 3 IFEQ L89 - false
   * Goal 5. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.addToSecureList(Ljava/lang/String;Z)V: I16 Branch 4 IFEQ L107 - false
   * Goal 6. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.checkList(Ljava/util/ArrayList;Ljava/net/Socket;)Z: I50 Branch 6 IF_ICMPGE L135 - true
   * Goal 7. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.checkList(Ljava/util/ArrayList;Ljava/net/Socket;)Z: I50 Branch 6 IF_ICMPGE L135 - false
   * Goal 8. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.checkList(Ljava/util/ArrayList;Ljava/net/Socket;)Z: I61 Branch 7 IFEQ L138 - false
   * Goal 9. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.checkList(Ljava/util/ArrayList;Ljava/net/Socket;)Z: I72 Branch 8 IFEQ L141 - true
   * Goal 10. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.checkList(Ljava/util/ArrayList;Ljava/net/Socket;)Z: I81 Branch 9 IFEQ L144 - true
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      ControllerSecurityManager controllerSecurityManager0 = new ControllerSecurityManager();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 7);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      controllerSecurityManager0.addToSecureList("<SecuritySettings defaultConnect=\"true\"><jar allow=\"true\"/><Shutdown><Client allow=\"true\" onlyLocalhost=\"true\" /><Console allow=\"true\" onlyLocalhost=\"true\" /></Shutdown><Accept></Accept><Block></Block></SecuritySettings>", true);
      MockSocket mockSocket0 = new MockSocket("<SecuritySettings defaultConnect=\"true\"><jar allow=\"true\"/><Shutdown><Client allow=\"true\" onlyLocalhost=\"true\" /><Console allow=\"true\" onlyLocalhost=\"true\" /></Shutdown><Accept></Accept><Block></Block></SecuritySettings>", 7, false);
      boolean boolean0 = controllerSecurityManager0.allowConnection(mockSocket0);
      assertTrue(controllerSecurityManager0.getAllowLocalConsoleOnly());
      assertTrue(boolean0);
      assertTrue(controllerSecurityManager0.getAllowConsoleShutdown());
      assertTrue(controllerSecurityManager0.getAllowAdditionalDriver());
      assertEquals("Socket[addr=/200.42.42.0,port=7,localport=40000]", mockSocket0.toString());
      assertTrue(controllerSecurityManager0.getAllowClientShutdown());
      assertTrue(controllerSecurityManager0.getAllowLocalClientOnly());
  }

  //Test case number: 11
  /*
   * 10 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.allowConnection(Ljava/net/Socket;)Z: I6 Branch 1 IFEQ L74 - true
   * Goal 3. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.allowConnection(Ljava/net/Socket;)Z: I17 Branch 2 IFEQ L76 - true
   * Goal 4. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.addHostToSecureList(Ljava/lang/String;Z)V: I3 Branch 5 IFEQ L121 - true
   * Goal 5. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.checkList(Ljava/util/ArrayList;Ljava/net/Socket;)Z: I50 Branch 6 IF_ICMPGE L135 - true
   * Goal 6. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.checkList(Ljava/util/ArrayList;Ljava/net/Socket;)Z: I50 Branch 6 IF_ICMPGE L135 - false
   * Goal 7. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.checkList(Ljava/util/ArrayList;Ljava/net/Socket;)Z: I61 Branch 7 IFEQ L138 - true
   * Goal 8. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.checkList(Ljava/util/ArrayList;Ljava/net/Socket;)Z: I81 Branch 9 IFEQ L144 - false
   * Goal 9. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.checkList(Ljava/util/ArrayList;Ljava/net/Socket;)Z: I92 Branch 10 IFGT L147 - false
   * Goal 10. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.checkList(Ljava/util/ArrayList;Ljava/net/Socket;)Z: I96 Branch 11 IFLE L147 - true
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      ControllerSecurityManager controllerSecurityManager0 = new ControllerSecurityManager();
      EvoSuiteRemoteAddress evoSuiteRemoteAddress0 = new EvoSuiteRemoteAddress("200.42.42.0", 7);
      controllerSecurityManager0.addHostToSecureList("1210330/0.0", false);
      NetworkHandling.openRemoteTcpServer(evoSuiteRemoteAddress0);
      MockSocket mockSocket0 = new MockSocket("<SecuritySettings defaultConnect=\"true\"><jar allow=\"true\"/><Shutdown><Client allow=\"true\" onlyLocalhost=\"true\" /><Console allow=\"true\" onlyLocalhost=\"true\" /></Shutdown><Accept></Accept><Block></Block></SecuritySettings>", 7, false);
      boolean boolean0 = controllerSecurityManager0.allowConnection(mockSocket0);
      assertTrue(boolean0);
      assertTrue(controllerSecurityManager0.getAllowLocalConsoleOnly());
      assertTrue(controllerSecurityManager0.getAllowConsoleShutdown());
      assertTrue(controllerSecurityManager0.getAllowAdditionalDriver());
      assertTrue(controllerSecurityManager0.getAllowLocalClientOnly());
      assertTrue(controllerSecurityManager0.getAllowClientShutdown());
      assertEquals("Socket[addr=/200.42.42.0,port=7,localport=40000]", mockSocket0.toString());
  }

  //Test case number: 12
  /*
   * 20 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowLocalClientOnly()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAccept()Ljava/util/ArrayList;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getSaccept()Ljava/util/ArrayList;: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowAdditionalDriver()Z: root-Branch
   * Goal 5. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowLocalConsoleOnly()Z: root-Branch
   * Goal 6. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getSblock()Ljava/util/ArrayList;: root-Branch
   * Goal 7. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.<init>()V: root-Branch
   * Goal 8. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowClientShutdown()Z: root-Branch
   * Goal 9. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowConsoleShutdown()Z: root-Branch
   * Goal 10. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getDefaultConnect()Z: root-Branch
   * Goal 11. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getBlock()Ljava/util/ArrayList;: root-Branch
   * Goal 12. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.addToSecureList(Lorg/apache/regexp/RE;Z)V: I3 Branch 3 IFEQ L89 - false
   * Goal 13. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.addToSecureList(Ljava/lang/String;Z)V: I16 Branch 4 IFEQ L107 - false
   * Goal 14. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I123 Branch 12 IF_ICMPGE L318 - true
   * Goal 15. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I123 Branch 12 IF_ICMPGE L318 - false
   * Goal 16. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I158 Branch 13 IF_ICMPGE L324 - true
   * Goal 17. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I158 Branch 13 IF_ICMPGE L324 - false
   * Goal 18. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I165 Branch 14 IFEQ L326 - false
   * Goal 19. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I243 Branch 16 IF_ICMPGE L340 - true
   * Goal 20. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I278 Branch 17 IF_ICMPGE L346 - true
   */

	@Test(timeout=300000)
  public void test12()  throws Throwable  {
      ControllerSecurityManager controllerSecurityManager0 = new ControllerSecurityManager();
      controllerSecurityManager0.addToSecureList("\">", true);
      String string0 = controllerSecurityManager0.getXml();
      assertEquals("<SecuritySettings defaultConnect=\"true\"><jar allow=\"true\"/><Shutdown><Client allow=\"true\" onlyLocalhost=\"true\" /><Console allow=\"true\" onlyLocalhost=\"true\" /></Shutdown><Accept><IpRange value=\"\">\"/></Accept><Block></Block></SecuritySettings>", string0);
  }

  //Test case number: 13
  /*
   * 19 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowLocalClientOnly()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAccept()Ljava/util/ArrayList;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getSaccept()Ljava/util/ArrayList;: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowAdditionalDriver()Z: root-Branch
   * Goal 5. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowLocalConsoleOnly()Z: root-Branch
   * Goal 6. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getSblock()Ljava/util/ArrayList;: root-Branch
   * Goal 7. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.<init>()V: root-Branch
   * Goal 8. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowClientShutdown()Z: root-Branch
   * Goal 9. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowConsoleShutdown()Z: root-Branch
   * Goal 10. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getDefaultConnect()Z: root-Branch
   * Goal 11. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getBlock()Ljava/util/ArrayList;: root-Branch
   * Goal 12. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.addHostToSecureList(Ljava/lang/String;Z)V: I3 Branch 5 IFEQ L121 - false
   * Goal 13. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I123 Branch 12 IF_ICMPGE L318 - true
   * Goal 14. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I158 Branch 13 IF_ICMPGE L324 - true
   * Goal 15. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I158 Branch 13 IF_ICMPGE L324 - false
   * Goal 16. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I165 Branch 14 IFEQ L326 - true
   * Goal 17. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I182 Branch 15 IF_ICMPNE L329 - true
   * Goal 18. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I243 Branch 16 IF_ICMPGE L340 - true
   * Goal 19. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I278 Branch 17 IF_ICMPGE L346 - true
   */

	@Test(timeout=300000)
  public void test13()  throws Throwable  {
      ControllerSecurityManager controllerSecurityManager0 = new ControllerSecurityManager();
      controllerSecurityManager0.addHostToSecureList("org.objectweb.cjdbc.common.sql.schema.DatabaseTable", true);
      String string0 = controllerSecurityManager0.getXml();
      assertEquals("<SecuritySettings defaultConnect=\"true\"><jar allow=\"true\"/><Shutdown><Client allow=\"true\" onlyLocalhost=\"true\" /><Console allow=\"true\" onlyLocalhost=\"true\" /></Shutdown><Accept><IpAddress value=\"org.objectweb.cjdbc.common.sql.schema.DatabaseTable\"/></Accept><Block></Block></SecuritySettings>", string0);
  }

  //Test case number: 14
  /*
   * 19 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowLocalClientOnly()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAccept()Ljava/util/ArrayList;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getSaccept()Ljava/util/ArrayList;: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowAdditionalDriver()Z: root-Branch
   * Goal 5. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowLocalConsoleOnly()Z: root-Branch
   * Goal 6. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getSblock()Ljava/util/ArrayList;: root-Branch
   * Goal 7. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.<init>()V: root-Branch
   * Goal 8. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowClientShutdown()Z: root-Branch
   * Goal 9. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowConsoleShutdown()Z: root-Branch
   * Goal 10. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getDefaultConnect()Z: root-Branch
   * Goal 11. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getBlock()Ljava/util/ArrayList;: root-Branch
   * Goal 12. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.addHostToSecureList(Ljava/lang/String;Z)V: I3 Branch 5 IFEQ L121 - false
   * Goal 13. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I123 Branch 12 IF_ICMPGE L318 - true
   * Goal 14. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I158 Branch 13 IF_ICMPGE L324 - true
   * Goal 15. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I158 Branch 13 IF_ICMPGE L324 - false
   * Goal 16. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I165 Branch 14 IFEQ L326 - true
   * Goal 17. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I182 Branch 15 IF_ICMPNE L329 - false
   * Goal 18. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I243 Branch 16 IF_ICMPGE L340 - true
   * Goal 19. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I278 Branch 17 IF_ICMPGE L346 - true
   */

	@Test(timeout=300000)
  public void test14()  throws Throwable  {
      ControllerSecurityManager controllerSecurityManager0 = new ControllerSecurityManager();
      controllerSecurityManager0.addHostToSecureList("<SecuritySettings defaultConnect=\"false\"><jar allow=\"true\"/><Shutdown><Client allow=\"true\" onlyLocalhost=\"true\" /><Console allow=\"true\" onlyLocalhost=\"true\" /></Shutdown><Accept><IpRange value=\"\">\"/></Accept><Block></Block></SecuritySettings>", true);
      String string0 = controllerSecurityManager0.getXml();
      assertEquals("<SecuritySettings defaultConnect=\"true\"><jar allow=\"true\"/><Shutdown><Client allow=\"true\" onlyLocalhost=\"true\" /><Console allow=\"true\" onlyLocalhost=\"true\" /></Shutdown><Accept><Hostname value=\"<SecuritySettings defaultConnect=\"false\"><jar allow=\"true\"/><Shutdown><Client allow=\"true\" onlyLocalhost=\"true\" /><Console allow=\"true\" onlyLocalhost=\"true\" /></Shutdown><Accept><IpRange value=\"\">\"/></Accept><Block></Block></SecuritySettings>\"/></Accept><Block></Block></SecuritySettings>", string0);
  }

  //Test case number: 15
  /*
   * 20 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowLocalClientOnly()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAccept()Ljava/util/ArrayList;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getSaccept()Ljava/util/ArrayList;: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowAdditionalDriver()Z: root-Branch
   * Goal 5. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowLocalConsoleOnly()Z: root-Branch
   * Goal 6. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getSblock()Ljava/util/ArrayList;: root-Branch
   * Goal 7. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.<init>()V: root-Branch
   * Goal 8. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowClientShutdown()Z: root-Branch
   * Goal 9. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowConsoleShutdown()Z: root-Branch
   * Goal 10. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getDefaultConnect()Z: root-Branch
   * Goal 11. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getBlock()Ljava/util/ArrayList;: root-Branch
   * Goal 12. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.addToSecureList(Lorg/apache/regexp/RE;Z)V: I3 Branch 3 IFEQ L89 - true
   * Goal 13. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.addToSecureList(Ljava/lang/String;Z)V: I16 Branch 4 IFEQ L107 - true
   * Goal 14. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I123 Branch 12 IF_ICMPGE L318 - true
   * Goal 15. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I158 Branch 13 IF_ICMPGE L324 - true
   * Goal 16. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I243 Branch 16 IF_ICMPGE L340 - true
   * Goal 17. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I243 Branch 16 IF_ICMPGE L340 - false
   * Goal 18. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I278 Branch 17 IF_ICMPGE L346 - true
   * Goal 19. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I278 Branch 17 IF_ICMPGE L346 - false
   * Goal 20. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I285 Branch 18 IFEQ L348 - false
   */

	@Test(timeout=300000)
  public void test15()  throws Throwable  {
      ControllerSecurityManager controllerSecurityManager0 = new ControllerSecurityManager();
      controllerSecurityManager0.addToSecureList("org.objectweb.cjdbc.common.sql.schema.DatabaseTable", false);
      String string0 = controllerSecurityManager0.getXml();
      assertEquals("<SecuritySettings defaultConnect=\"true\"><jar allow=\"true\"/><Shutdown><Client allow=\"true\" onlyLocalhost=\"true\" /><Console allow=\"true\" onlyLocalhost=\"true\" /></Shutdown><Accept></Accept><Block><IpRange value=\"org.objectweb.cjdbc.common.sql.schema.DatabaseTable\"/></Block></SecuritySettings>", string0);
  }

  //Test case number: 16
  /*
   * 19 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowLocalClientOnly()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAccept()Ljava/util/ArrayList;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getSaccept()Ljava/util/ArrayList;: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowAdditionalDriver()Z: root-Branch
   * Goal 5. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowLocalConsoleOnly()Z: root-Branch
   * Goal 6. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getSblock()Ljava/util/ArrayList;: root-Branch
   * Goal 7. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.<init>()V: root-Branch
   * Goal 8. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowClientShutdown()Z: root-Branch
   * Goal 9. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowConsoleShutdown()Z: root-Branch
   * Goal 10. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getDefaultConnect()Z: root-Branch
   * Goal 11. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getBlock()Ljava/util/ArrayList;: root-Branch
   * Goal 12. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.addHostToSecureList(Ljava/lang/String;Z)V: I3 Branch 5 IFEQ L121 - true
   * Goal 13. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I123 Branch 12 IF_ICMPGE L318 - true
   * Goal 14. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I158 Branch 13 IF_ICMPGE L324 - true
   * Goal 15. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I243 Branch 16 IF_ICMPGE L340 - true
   * Goal 16. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I278 Branch 17 IF_ICMPGE L346 - true
   * Goal 17. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I278 Branch 17 IF_ICMPGE L346 - false
   * Goal 18. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I285 Branch 18 IFEQ L348 - true
   * Goal 19. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I302 Branch 19 IF_ICMPNE L351 - false
   */

	@Test(timeout=300000)
  public void test16()  throws Throwable  {
      ControllerSecurityManager controllerSecurityManager0 = new ControllerSecurityManager();
      controllerSecurityManager0.addHostToSecureList("LSHrz#EigZd!YQbl~=1", false);
      String string0 = controllerSecurityManager0.getXml();
      assertEquals("<SecuritySettings defaultConnect=\"true\"><jar allow=\"true\"/><Shutdown><Client allow=\"true\" onlyLocalhost=\"true\" /><Console allow=\"true\" onlyLocalhost=\"true\" /></Shutdown><Accept></Accept><Block><Hostname value=\"LSHrz#EigZd!YQbl~=1\"/></Block></SecuritySettings>", string0);
  }

  //Test case number: 17
  /*
   * 19 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowLocalClientOnly()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAccept()Ljava/util/ArrayList;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getSaccept()Ljava/util/ArrayList;: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowAdditionalDriver()Z: root-Branch
   * Goal 5. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowLocalConsoleOnly()Z: root-Branch
   * Goal 6. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getSblock()Ljava/util/ArrayList;: root-Branch
   * Goal 7. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.<init>()V: root-Branch
   * Goal 8. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowClientShutdown()Z: root-Branch
   * Goal 9. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getAllowConsoleShutdown()Z: root-Branch
   * Goal 10. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getDefaultConnect()Z: root-Branch
   * Goal 11. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getBlock()Ljava/util/ArrayList;: root-Branch
   * Goal 12. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.addHostToSecureList(Ljava/lang/String;Z)V: I3 Branch 5 IFEQ L121 - true
   * Goal 13. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I123 Branch 12 IF_ICMPGE L318 - true
   * Goal 14. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I158 Branch 13 IF_ICMPGE L324 - true
   * Goal 15. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I243 Branch 16 IF_ICMPGE L340 - true
   * Goal 16. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I278 Branch 17 IF_ICMPGE L346 - true
   * Goal 17. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I278 Branch 17 IF_ICMPGE L346 - false
   * Goal 18. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I285 Branch 18 IFEQ L348 - true
   * Goal 19. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.getXml()Ljava/lang/String;: I302 Branch 19 IF_ICMPNE L351 - true
   */

	@Test(timeout=300000)
  public void test17()  throws Throwable  {
      ControllerSecurityManager controllerSecurityManager0 = new ControllerSecurityManager();
      controllerSecurityManager0.addHostToSecureList("org.objectweb.cjdbc.common.exceptions.driver.protocol.BackendDriverException", false);
      String string0 = controllerSecurityManager0.getXml();
      assertEquals("<SecuritySettings defaultConnect=\"true\"><jar allow=\"true\"/><Shutdown><Client allow=\"true\" onlyLocalhost=\"true\" /><Console allow=\"true\" onlyLocalhost=\"true\" /></Shutdown><Accept></Accept><Block><IpAddress value=\"org.objectweb.cjdbc.common.exceptions.driver.protocol.BackendDriverException\"/></Block></SecuritySettings>", string0);
  }

  //Test case number: 18
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.isSSLEnabled()Z: I4 Branch 20 IFNULL L371 - true
   */

	@Test(timeout=300000)
  public void test18()  throws Throwable  {
      ControllerSecurityManager controllerSecurityManager0 = new ControllerSecurityManager();
      boolean boolean0 = controllerSecurityManager0.isSSLEnabled();
      assertTrue(controllerSecurityManager0.getAllowAdditionalDriver());
      assertTrue(controllerSecurityManager0.getAllowConsoleShutdown());
      assertTrue(controllerSecurityManager0.getDefaultConnect());
      assertTrue(controllerSecurityManager0.getAllowLocalClientOnly());
      assertTrue(controllerSecurityManager0.getAllowClientShutdown());
      assertFalse(boolean0);
      assertTrue(controllerSecurityManager0.getAllowLocalConsoleOnly());
  }

  //Test case number: 19
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.setSslConfig(Lorg/objectweb/cjdbc/common/net/SSLConfiguration;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.core.security.ControllerSecurityManager.isSSLEnabled()Z: I4 Branch 20 IFNULL L371 - false
   */

	@Test(timeout=300000)
  public void test19()  throws Throwable  {
      ControllerSecurityManager controllerSecurityManager0 = new ControllerSecurityManager();
      SSLConfiguration sSLConfiguration0 = new SSLConfiguration();
      controllerSecurityManager0.setSslConfig(sSLConfiguration0);
      boolean boolean0 = controllerSecurityManager0.isSSLEnabled();
      assertTrue(boolean0);
  }
}
