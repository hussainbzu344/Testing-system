/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 22:36:16 GMT 2016
 */

package org.objectweb.cjdbc.controller.loadbalancer;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.LinkedList;
import java.util.NoSuchElementException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.exceptions.NoMoreBackendException;
import org.objectweb.cjdbc.common.sql.CreateRequest;
import org.objectweb.cjdbc.common.sql.StoredProcedure;
import org.objectweb.cjdbc.common.sql.UpdateRequest;
import org.objectweb.cjdbc.common.sql.filters.AbstractBlobFilter;
import org.objectweb.cjdbc.common.sql.filters.Base64Filter;
import org.objectweb.cjdbc.common.sql.filters.BlobEscapedFilter;
import org.objectweb.cjdbc.common.sql.filters.MacrosHandler;
import org.objectweb.cjdbc.common.sql.filters.NoneBlobFilter;
import org.objectweb.cjdbc.controller.backend.DatabaseBackend;
import org.objectweb.cjdbc.controller.cache.metadata.MetadataCache;
import org.objectweb.cjdbc.controller.connection.VariablePoolConnectionManager;
import org.objectweb.cjdbc.controller.core.Controller;
import org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer;
import org.objectweb.cjdbc.controller.loadbalancer.paralleldb.ParallelDB_LPRF;
import org.objectweb.cjdbc.controller.loadbalancer.policies.WaitForCompletionPolicy;
import org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTablePolicy;
import org.objectweb.cjdbc.controller.loadbalancer.raidb0.RAIDb0;
import org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_LPRF;
import org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_WRR;
import org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_RR;
import org.objectweb.cjdbc.controller.loadbalancer.raidb2.RAIDb2_WRR;
import org.objectweb.cjdbc.controller.requestmanager.TransactionMarkerMetaData;
import org.objectweb.cjdbc.controller.virtualdatabase.VirtualDatabase;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class AbstractLoadBalancer_ESTest extends AbstractLoadBalancer_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.setMacroHandler(Lorg/objectweb/cjdbc/common/sql/filters/MacrosHandler;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I4 Branch 1 IFNONNULL L113 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I81 Branch 2 IF_ICMPGE L131 - true
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      Controller controller0 = new Controller("D&m]?;%xujYLiy?", 0, 1000);
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "ResultSet.clearWarnings() unsupported", 1000, false, 1000, 117, 0L, 1000, (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      CreateTablePolicy createTablePolicy0 = new CreateTablePolicy();
      RAIDb2_WRR rAIDb2_WRR0 = new RAIDb2_WRR(virtualDatabase0, waitForCompletionPolicy0, createTablePolicy0);
      rAIDb2_WRR0.setMacroHandler((MacrosHandler) null);
      assertEquals(1, rAIDb2_WRR0.getParsingGranularity());
      assertEquals(2, rAIDb2_WRR0.getRAIDbLevel());
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.setWeight(Ljava/lang/String;I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I4 Branch 1 IFNONNULL L113 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I81 Branch 2 IF_ICMPGE L131 - true
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      Controller controller0 = new Controller((String) null, 2849, 2503);
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, (String) null, (-611), false, (-611), 2503, (long) (-611), 0, (AbstractBlobFilter) noneBlobFilter0);
      ParallelDB_LPRF parallelDB_LPRF0 = new ParallelDB_LPRF(virtualDatabase0);
      try { 
        parallelDB_LPRF0.setWeight("org.objectweb.cjdbc.controller.loadbalancer", 0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // Weight is not supported by this load balancer
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer", e);
      }
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.getXml()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I4 Branch 1 IFNONNULL L113 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I81 Branch 2 IF_ICMPGE L131 - true
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      Controller controller0 = new Controller("", 1582, (-2684));
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", 669, true, 2911, (-2684), (-1L), 147, (AbstractBlobFilter) null);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF(virtualDatabase0, waitForCompletionPolicy0);
      String string0 = rAIDb1_LPRF0.getXml();
      assertEquals("<LoadBalancer><RAIDb-1><WaitForCompletion policy=\"first\"/><RAIDb-1-LeastPendingRequestsFirst/></RAIDb-1></LoadBalancer>", string0);
      assertEquals(0, rAIDb1_LPRF0.getParsingGranularity());
      assertEquals(1, rAIDb1_LPRF0.getRAIDbLevel());
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.getRAIDbLevel()I: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I4 Branch 1 IFNONNULL L113 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I81 Branch 2 IF_ICMPGE L131 - true
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      Controller controller0 = new Controller("/@", 1575, 1575);
      CreateTablePolicy createTablePolicy0 = new CreateTablePolicy();
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "/@", (-1647), false, 1575, (-3244), (long) (-3244), (-1647), (AbstractBlobFilter) base64Filter0);
      RAIDb0 rAIDb0_0 = new RAIDb0(virtualDatabase0, createTablePolicy0);
      int int0 = rAIDb0_0.getRAIDbLevel();
      assertEquals(0, int0);
      assertEquals(1, rAIDb0_0.getParsingGranularity());
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.setParsingGranularity(I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I4 Branch 1 IFNONNULL L113 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I81 Branch 2 IF_ICMPGE L131 - true
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      Controller controller0 = new Controller((String) null, 2849, 2503);
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, (String) null, (-611), false, (-611), 2503, (long) (-611), 0, (AbstractBlobFilter) noneBlobFilter0);
      ParallelDB_LPRF parallelDB_LPRF0 = new ParallelDB_LPRF(virtualDatabase0);
      parallelDB_LPRF0.setParsingGranularity(0);
      assertEquals(0, parallelDB_LPRF0.getParsingGranularity());
      assertEquals(-1, parallelDB_LPRF0.getRAIDbLevel());
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.getParsingGranularity()I: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I4 Branch 1 IFNONNULL L113 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I81 Branch 2 IF_ICMPGE L131 - true
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      Controller controller0 = new Controller("H", (-1), (-1));
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "KMjPsz{>Ag", 55, true, 55, (-1316), 2809L, (-1316), (AbstractBlobFilter) null);
      CreateTablePolicy createTablePolicy0 = new CreateTablePolicy();
      RAIDb2_RR rAIDb2_RR0 = new RAIDb2_RR(virtualDatabase0, (WaitForCompletionPolicy) null, createTablePolicy0);
      int int0 = rAIDb2_RR0.getParsingGranularity();
      assertEquals(1, int0);
      assertEquals(2, rAIDb2_RR0.getRAIDbLevel());
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.getAssociatedString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I4 Branch 1 IFNONNULL L113 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I81 Branch 2 IF_ICMPGE L131 - true
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      Controller controller0 = new Controller((String) null, 2849, 2503);
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, (String) null, (-611), false, (-611), 2503, (long) (-611), 0, (AbstractBlobFilter) noneBlobFilter0);
      ParallelDB_LPRF parallelDB_LPRF0 = new ParallelDB_LPRF(virtualDatabase0);
      String string0 = parallelDB_LPRF0.getAssociatedString();
      assertEquals(-1, parallelDB_LPRF0.getRAIDbLevel());
      assertEquals(0, parallelDB_LPRF0.getParsingGranularity());
      assertEquals("loadbalancer", string0);
  }

  //Test case number: 7
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.setRAIDbLevel(I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I4 Branch 1 IFNONNULL L113 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I81 Branch 2 IF_ICMPGE L131 - true
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      Controller controller0 = new Controller("", 0, (-2609));
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", (-2609), true, 1721, (-2609), 2809L, 1721, (AbstractBlobFilter) noneBlobFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      CreateTablePolicy createTablePolicy0 = new CreateTablePolicy();
      RAIDb2_WRR rAIDb2_WRR0 = new RAIDb2_WRR(virtualDatabase0, waitForCompletionPolicy0, createTablePolicy0);
      rAIDb2_WRR0.setRAIDbLevel(44);
      assertEquals(44, rAIDb2_WRR0.getRAIDbLevel());
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I4 Branch 1 IFNONNULL L113 - true
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I4 Branch 1 IFNONNULL L113 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I81 Branch 2 IF_ICMPGE L131 - true
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      Controller controller0 = new Controller("", 1582, (-2684));
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", 669, true, 2911, (-2684), (-1L), 147, (AbstractBlobFilter) null);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF(virtualDatabase0, waitForCompletionPolicy0);
      assertEquals(1, rAIDb1_LPRF0.getRAIDbLevel());
      
      CreateTablePolicy createTablePolicy0 = new CreateTablePolicy();
      RAIDb0 rAIDb0_0 = new RAIDb0(virtualDatabase0, createTablePolicy0);
      assertEquals(1, rAIDb0_0.getParsingGranularity());
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I4 Branch 1 IFNONNULL L113 - false
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I81 Branch 2 IF_ICMPGE L131 - true
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.handleMacros(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I4 Branch 6 IFNONNULL L211 - false
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.waitForTotalOrder(Ljava/lang/Object;Z)Z: I4 Branch 10 IFNULL L242 - true
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.removeHeadFromAndNotifyTotalOrderQueue()V: I4 Branch 15 IFNULL L283 - true
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      Controller controller0 = new Controller("A7v", 19, 19);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "A7v", 19, false, 19, 19, (long) 19, 19, (AbstractBlobFilter) noneBlobFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      UpdateRequest updateRequest0 = new UpdateRequest("A7v", false, 19, "A7v");
      try { 
        rAIDb1_WRR0.execWriteRequest(updateRequest0);
        fail("Expecting exception: NoMoreBackendException");
      
      } catch(NoMoreBackendException e) {
         //
         // loadbalancer.backendlist.empty
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1", e);
      }
  }

  //Test case number: 10
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I4 Branch 1 IFNONNULL L113 - false
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I81 Branch 2 IF_ICMPGE L131 - true
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.waitForTotalOrder(Ljava/lang/Object;Z)Z: I4 Branch 10 IFNULL L242 - false
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.waitForTotalOrder(Ljava/lang/Object;Z)Z: I22 Branch 11 IFLE L247 - true
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.waitForTotalOrder(Ljava/lang/Object;Z)Z: I72 Branch 13 IF_ICMPNE L262 - false
   * Goal 6. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.waitForTotalOrder(Ljava/lang/Object;Z)Z: I76 Branch 14 IFEQ L264 - true
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      Controller controller0 = new Controller("A7v", 19, 19);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "A7v", 19, false, 19, 19, (long) 19, 19, (AbstractBlobFilter) noneBlobFilter0);
      LinkedList<MockMinguoDate> linkedList0 = new LinkedList<MockMinguoDate>();
      virtualDatabase0.setTotalOrderQueue(linkedList0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      TransactionMarkerMetaData transactionMarkerMetaData0 = new TransactionMarkerMetaData((long) 19, 0L, "A7v");
      rAIDb1_WRR0.rollback(transactionMarkerMetaData0, "A7v");
      assertEquals(1, rAIDb1_WRR0.getRAIDbLevel());
      assertEquals(0, rAIDb1_WRR0.getParsingGranularity());
  }

  //Test case number: 11
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I4 Branch 1 IFNONNULL L113 - false
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;II)V: I81 Branch 2 IF_ICMPGE L131 - true
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.handleMacros(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I4 Branch 6 IFNONNULL L211 - false
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.waitForTotalOrder(Ljava/lang/Object;Z)Z: I4 Branch 10 IFNULL L242 - false
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.waitForTotalOrder(Ljava/lang/Object;Z)Z: I22 Branch 11 IFLE L247 - true
   * Goal 6. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.waitForTotalOrder(Ljava/lang/Object;Z)Z: I72 Branch 13 IF_ICMPNE L262 - false
   * Goal 7. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.waitForTotalOrder(Ljava/lang/Object;Z)Z: I76 Branch 14 IFEQ L264 - false
   * Goal 8. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.removeHeadFromAndNotifyTotalOrderQueue()V: I4 Branch 15 IFNULL L283 - false
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      Controller controller0 = new Controller("A7v", 19, 19);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "A7v", 19, false, 19, 19, (long) 19, 19, (AbstractBlobFilter) noneBlobFilter0);
      LinkedList<MockMinguoDate> linkedList0 = new LinkedList<MockMinguoDate>();
      virtualDatabase0.setTotalOrderQueue(linkedList0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      UpdateRequest updateRequest0 = new UpdateRequest("A7v", false, 19, "A7v");
      // Undeclared exception!
      try { 
        rAIDb1_WRR0.execWriteRequest(updateRequest0);
        fail("Expecting exception: NoSuchElementException");
      
      } catch(NoSuchElementException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.util.LinkedList", e);
      }
  }

  //Test case number: 12
  /*
   * 1 covered goal:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.executeUpdateRequestOnBackend(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Ljava/sql/Connection;)I: I20 Branch 28 IFNE L464 - true
   */

	@Test(timeout=300000)
  public void test12()  throws Throwable  {
      DatabaseBackend databaseBackend0 = new DatabaseBackend("previewPanel", "previewPanel", "previewPanel", "previewPanel", "previewPanel", true, "previewPanel");
      CreateRequest createRequest0 = new CreateRequest((String) null, true, 2, (String) null);
      // Undeclared exception!
      try { 
        AbstractLoadBalancer.executeUpdateRequestOnBackend(createRequest0, databaseBackend0, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer", e);
      }
  }

  //Test case number: 13
  /*
   * 1 covered goal:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.executeReadStoredProcedureOnBackend(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Ljava/sql/Connection;Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I9 Branch 37 IFEQ L575 - true
   */

	@Test(timeout=300000)
  public void test13()  throws Throwable  {
      StoredProcedure storedProcedure0 = new StoredProcedure((String) null, false, 2848, (String) null, false);
      DatabaseBackend databaseBackend0 = new DatabaseBackend("jdbc:cjdbc://", "jdbc:cjdbc://", "jdbc:cjdbc://", "jdbc:cjdbc://", "jdbc:cjdbc://", false, "jdbc:cjdbc://");
      MetadataCache metadataCache0 = new MetadataCache(2848, 2848);
      storedProcedure0.setDriverProcessed(false);
      // Undeclared exception!
      try { 
        AbstractLoadBalancer.executeReadStoredProcedureOnBackend(storedProcedure0, databaseBackend0, (Connection) null, metadataCache0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer", e);
      }
  }

  //Test case number: 14
  /*
   * 1 covered goal:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.executeReadStoredProcedureOnBackend(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Ljava/sql/Connection;Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I9 Branch 37 IFEQ L575 - false
   */

	@Test(timeout=300000)
  public void test14()  throws Throwable  {
      StoredProcedure storedProcedure0 = new StoredProcedure((String) null, true, 2840, (String) null, true);
      DatabaseBackend databaseBackend0 = new DatabaseBackend("HORIZONTAL_SCROLLBAR", "HORIZONTAL_SCROLLBAR", "HORIZONTAL_SCROLLBAR", "HORIZONTAL_SCROLLBAR", "HORIZONTAL_SCROLLBAR", true, "HORIZONTAL_SCROLLBAR");
      MetadataCache metadataCache0 = new MetadataCache(2840, 2840);
      // Undeclared exception!
      try { 
        AbstractLoadBalancer.executeReadStoredProcedureOnBackend(storedProcedure0, databaseBackend0, (Connection) null, metadataCache0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer", e);
      }
  }

  //Test case number: 15
  /*
   * 1 covered goal:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.executeWriteStoredProcedureOnBackend(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Ljava/sql/Connection;)I: I9 Branch 42 IFEQ L627 - true
   */

	@Test(timeout=300000)
  public void test15()  throws Throwable  {
      StoredProcedure storedProcedure0 = new StoredProcedure("JHIwnXVm/{nwU>VcY;K", false, 160, "", false);
      DatabaseBackend databaseBackend0 = new DatabaseBackend("", "SpaceRequiredBetweenPublicAndSystem", "", "+UM", "p4Y@0V`MY&u|xhNY&\"+", false, ">EW#gZ/1");
      storedProcedure0.setDriverProcessed(false);
      // Undeclared exception!
      try { 
        AbstractLoadBalancer.executeWriteStoredProcedureOnBackend(storedProcedure0, databaseBackend0, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer", e);
      }
  }

  //Test case number: 16
  /*
   * 1 covered goal:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.executeWriteStoredProcedureOnBackend(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Ljava/sql/Connection;)I: I9 Branch 42 IFEQ L627 - false
   */

	@Test(timeout=300000)
  public void test16()  throws Throwable  {
      StoredProcedure storedProcedure0 = new StoredProcedure("", true, (int) (byte) (-12), "", true);
      DatabaseBackend databaseBackend0 = new DatabaseBackend("", "", "", "", "", true, "");
      // Undeclared exception!
      try { 
        AbstractLoadBalancer.executeWriteStoredProcedureOnBackend(storedProcedure0, databaseBackend0, (Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer", e);
      }
  }

  //Test case number: 17
  /*
   * 1 covered goal:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer.getConnectionAndBeginTransaction(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Lorg/objectweb/cjdbc/controller/connection/AbstractConnectionManager;JI)Ljava/sql/Connection;: I17 Branch 47 IFNONNULL L757 - false
   */

	@Test(timeout=300000)
  public void test17()  throws Throwable  {
      VariablePoolConnectionManager variablePoolConnectionManager0 = new VariablePoolConnectionManager("org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer", "org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer", "org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer", "org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer", "org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer", "org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer", 327, 327, 327, 327, 327);
      // Undeclared exception!
      try { 
        AbstractLoadBalancer.getConnectionAndBeginTransaction((DatabaseBackend) null, variablePoolConnectionManager0, 327, 327);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer", e);
      }
  }
}
