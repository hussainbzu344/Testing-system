/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 19 01:34:58 GMT 2016
 */

package org.objectweb.cjdbc.controller.jmx;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.management.MBeanServerDelegate;
import javax.management.ObjectName;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.controller.jmx.AuthenticatingMBeanServer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class AuthenticatingMBeanServer_ESTest extends AuthenticatingMBeanServer_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.jmx.AuthenticatingMBeanServer.setMBeanServer(Ljavax/management/MBeanServer;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.jmx.AuthenticatingMBeanServer.<init>()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.jmx.AuthenticatingMBeanServer.invoke(Ljavax/management/ObjectName;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;: I4 Branch 1 IFEQ L77 - false
   * Goal 4. org.objectweb.cjdbc.controller.jmx.AuthenticatingMBeanServer.invoke(Ljavax/management/ObjectName;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;: I8 Branch 2 IFGT L77 - false
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          AuthenticatingMBeanServer authenticatingMBeanServer0 = new AuthenticatingMBeanServer();
          ObjectName objectName0 = MBeanServerDelegate.DELEGATE_NAME;
          String[] stringArray0 = new String[0];
          // Undeclared exception!
          try { 
            authenticatingMBeanServer0.invoke(objectName0, "", (Object[]) null, stringArray0);
            fail("Expecting exception: SecurityException");
          
          } catch(SecurityException e) {
             //
             // Security manager blocks (\"javax.security.auth.AuthPermission\" \"getSubject\")
             // java.lang.Thread.getStackTrace(Thread.java:1552)
             // org.evosuite.runtime.sandbox.MSecurityManager.checkPermission(MSecurityManager.java:433)
             // javax.security.auth.Subject.getSubject(Subject.java:287)
             // org.objectweb.cjdbc.controller.jmx.AuthenticatingMBeanServer.invoke(AuthenticatingMBeanServer.java:87)
             // sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
             // sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
             // sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
             // java.lang.reflect.Method.invoke(Method.java:498)
             // org.evosuite.testcase.statements.MethodStatement$1.execute(MethodStatement.java:262)
             // org.evosuite.testcase.statements.AbstractStatement.exceptionHandler(AbstractStatement.java:169)
             // org.evosuite.testcase.statements.MethodStatement.execute(MethodStatement.java:225)
             // org.evosuite.testcase.execution.TestRunnable.executeStatements(TestRunnable.java:306)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:212)
             // org.evosuite.testcase.execution.TestRunnable.call(TestRunnable.java:55)
             // java.util.concurrent.FutureTask.run(FutureTask.java:266)
             // java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
             // java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
             // java.lang.Thread.run(Thread.java:745)
             //
             assertThrownBy("org.evosuite.runtime.sandbox.MSecurityManager", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 1
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.jmx.AuthenticatingMBeanServer.setMBeanServer(Ljavax/management/MBeanServer;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.jmx.AuthenticatingMBeanServer.<init>()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.jmx.AuthenticatingMBeanServer.invoke(Ljavax/management/ObjectName;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;: I4 Branch 1 IFEQ L77 - true
   * Goal 4. org.objectweb.cjdbc.controller.jmx.AuthenticatingMBeanServer.invoke(Ljavax/management/ObjectName;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;: I242 Branch 14 IFEQ L134 - true
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      String[] stringArray0 = new String[1];
      AuthenticatingMBeanServer authenticatingMBeanServer0 = new AuthenticatingMBeanServer();
      ObjectName objectName0 = ObjectName.getInstance("org.objectweb.cjdbc.controller.jmx.AuthenticatingMBeanServer", "org.objectweb.cjdbc.controller.jmx.AuthenticatingMBeanServer", "checkadminauthentication");
      // Undeclared exception!
      try { 
        authenticatingMBeanServer0.invoke(objectName0, "", stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.jmx.ChainedMBeanServer", e);
      }
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.jmx.AuthenticatingMBeanServer.setMBeanServer(Ljavax/management/MBeanServer;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.jmx.AuthenticatingMBeanServer.<init>()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.jmx.AuthenticatingMBeanServer.invoke(Ljavax/management/ObjectName;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;: I4 Branch 1 IFEQ L77 - false
   * Goal 4. org.objectweb.cjdbc.controller.jmx.AuthenticatingMBeanServer.invoke(Ljavax/management/ObjectName;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;: I8 Branch 2 IFGT L77 - true
   * Goal 5. org.objectweb.cjdbc.controller.jmx.AuthenticatingMBeanServer.invoke(Ljavax/management/ObjectName;Ljava/lang/String;[Ljava/lang/Object;[Ljava/lang/String;)Ljava/lang/Object;: I242 Branch 14 IFEQ L134 - true
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
      String[] stringArray0 = new String[8];
      AuthenticatingMBeanServer authenticatingMBeanServer0 = new AuthenticatingMBeanServer();
      ObjectName objectName0 = MBeanServerDelegate.DELEGATE_NAME;
      // Undeclared exception!
      try { 
        authenticatingMBeanServer0.invoke(objectName0, "checkadminauthentication", stringArray0, stringArray0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.jmx.ChainedMBeanServer", e);
      }
  }
}
