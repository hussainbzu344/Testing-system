/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 20:46:40 GMT 2016
 */

package org.objectweb.cjdbc.controller.loadbalancer.raidb1;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.sql.SQLException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.sql.SelectRequest;
import org.objectweb.cjdbc.common.sql.StoredProcedure;
import org.objectweb.cjdbc.common.sql.filters.AbstractBlobFilter;
import org.objectweb.cjdbc.common.sql.filters.Base64Filter;
import org.objectweb.cjdbc.controller.cache.metadata.MetadataCache;
import org.objectweb.cjdbc.controller.core.Controller;
import org.objectweb.cjdbc.controller.loadbalancer.policies.WaitForCompletionPolicy;
import org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_RR;
import org.objectweb.cjdbc.controller.virtualdatabase.VirtualDatabase;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RAIDb1_RR_ESTest extends RAIDb1_RR_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_RR.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_RR.getRaidb1Xml()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      Controller controller0 = new Controller("il-A!utyAzv%dcZ]h`", 4883, 4883);
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, (String) null, 4883, false, 0, 4070, (long) 4883, 0, (AbstractBlobFilter) base64Filter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      String string0 = rAIDb1_RR0.getXmlImpl();
      assertEquals("<RAIDb-1><WaitForCompletion policy=\"first\"/><RAIDb-1-RoundRobin/></RAIDb-1>", string0);
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_RR.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_RR.execReadRequest(Lorg/objectweb/cjdbc/common/sql/SelectRequest;Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_RR.executeRoundRobinRequest(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;ZLjava/lang/String;Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I47 Branch 1 IFNE L158 - false
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      Controller controller0 = new Controller("MvnN vAv", (-1209), (-1209));
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "MvnN vAv", (-1209), true, (-1209), (-1209), (long) (-1209), (-1209), (AbstractBlobFilter) base64Filter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      SelectRequest selectRequest0 = new SelectRequest("MvnN vAv", true, (-1209), "MvnN vAv");
      MetadataCache metadataCache0 = new MetadataCache(0, 0);
      try { 
        rAIDb1_RR0.execReadRequest(selectRequest0, metadataCache0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // loadbalancer.execute.no.backend.available
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_RR", e);
      }
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_RR.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_RR.execReadOnlyReadStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_RR.executeRoundRobinRequest(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;ZLjava/lang/String;Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I47 Branch 1 IFNE L158 - false
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
      Controller controller0 = new Controller("il-A!utyAzv%dcZ]h`", 4883, 4883);
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, (String) null, 4883, false, 0, 4070, (long) 4883, 0, (AbstractBlobFilter) base64Filter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      MetadataCache metadataCache0 = new MetadataCache(4070, 2284);
      StoredProcedure storedProcedure0 = new StoredProcedure("", true, 2342, "u1tE+GY>pe", false);
      try { 
        rAIDb1_RR0.execReadOnlyReadStoredProcedure(storedProcedure0, metadataCache0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // loadbalancer.execute.no.backend.available
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_RR", e);
      }
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_RR.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_RR.getInformation()Ljava/lang/String;: I10 Branch 7 IFNE L244 - false
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
      Controller controller0 = new Controller("MvnN vAv", (-1209), (-1209));
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "MvnN vAv", (-1209), true, (-1209), (-1209), (long) (-1209), (-1209), (AbstractBlobFilter) base64Filter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR(virtualDatabase0, waitForCompletionPolicy0);
      String string0 = rAIDb1_RR0.getInformation();
      assertEquals("RAIDb-1 Round-Robin Request load balancer: !!!Warning!!! No backend nodes found\n", string0);
  }
}
