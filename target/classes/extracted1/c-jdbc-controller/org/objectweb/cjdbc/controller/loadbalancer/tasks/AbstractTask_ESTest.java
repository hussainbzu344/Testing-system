/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 22:08:48 GMT 2016
 */

package org.objectweb.cjdbc.controller.loadbalancer.tasks;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.sql.ResultSet;
import java.sql.SQLException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.sql.SelectRequest;
import org.objectweb.cjdbc.common.sql.StoredProcedure;
import org.objectweb.cjdbc.controller.loadbalancer.BackendWorkerThread;
import org.objectweb.cjdbc.controller.loadbalancer.tasks.BeginTask;
import org.objectweb.cjdbc.controller.loadbalancer.tasks.CommitTask;
import org.objectweb.cjdbc.controller.loadbalancer.tasks.KillThreadTask;
import org.objectweb.cjdbc.controller.loadbalancer.tasks.ReleaseSavepointTask;
import org.objectweb.cjdbc.controller.loadbalancer.tasks.RollbackTask;
import org.objectweb.cjdbc.controller.loadbalancer.tasks.RollbackToSavepointTask;
import org.objectweb.cjdbc.controller.loadbalancer.tasks.SavepointTask;
import org.objectweb.cjdbc.controller.loadbalancer.tasks.SelectRequestTask;
import org.objectweb.cjdbc.controller.loadbalancer.tasks.WriteStoredProcedureTask;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class AbstractTask_ESTest extends AbstractTask_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.getExceptions()Ljava/util/ArrayList;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      RollbackToSavepointTask rollbackToSavepointTask0 = new RollbackToSavepointTask(0, 0, 0L, (String) null, 1242L, (String) null);
      rollbackToSavepointTask0.getExceptions();
      assertFalse(rollbackToSavepointTask0.hasTid());
      assertEquals(0, rollbackToSavepointTask0.getExecutionStarted());
      assertTrue(rollbackToSavepointTask0.hasFullyCompleted());
      assertEquals(0, rollbackToSavepointTask0.getNbToComplete());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.getFailed()I: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      SavepointTask savepointTask0 = new SavepointTask(2780, (-1700), 1846L, (String) null, 1L, (String) null);
      int int0 = savepointTask0.getFailed();
      assertEquals(-1700, savepointTask0.getTotalNb());
      assertEquals(0, savepointTask0.getSuccess());
      assertFalse(savepointTask0.hasTid());
      assertEquals(0, savepointTask0.getExecutionStarted());
      assertEquals(2780, savepointTask0.getNbToComplete());
      assertEquals(0, int0);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.getNbToComplete()I: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      SavepointTask savepointTask0 = new SavepointTask(1408, 3133, (long) 1408, (String) null, 3160L, (String) null);
      int int0 = savepointTask0.getNbToComplete();
      assertEquals(3133, savepointTask0.getTotalNb());
      assertEquals(0, savepointTask0.getExecutionStarted());
      assertEquals(0, savepointTask0.getFailed());
      assertEquals(1408, int0);
      assertFalse(savepointTask0.hasTid());
      assertEquals(0, savepointTask0.getSuccess());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.hasTid()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      ReleaseSavepointTask releaseSavepointTask0 = new ReleaseSavepointTask(2476, 2476, 0L, "VYA3gldlx+i'", 0L, "<yz{t)9TX&[Lq");
      boolean boolean0 = releaseSavepointTask0.hasTid();
      assertEquals(0, releaseSavepointTask0.getSuccess());
      assertEquals(0, releaseSavepointTask0.getFailed());
      assertFalse(boolean0);
      assertEquals(0, releaseSavepointTask0.getExecutionStarted());
      assertEquals(2476, releaseSavepointTask0.getNbToComplete());
      assertEquals(2476, releaseSavepointTask0.getTotalNb());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.setGeneratedKeysResultSet(Ljava/sql/ResultSet;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      ReleaseSavepointTask releaseSavepointTask0 = new ReleaseSavepointTask(0, 1088, 376L, ";d&<e*@3", 1000L, "");
      releaseSavepointTask0.setGeneratedKeysResultSet((ResultSet) null);
      assertEquals(0, releaseSavepointTask0.getSuccess());
      assertFalse(releaseSavepointTask0.hasTid());
      assertEquals(0, releaseSavepointTask0.getExecutionStarted());
      assertEquals(0, releaseSavepointTask0.getNbToComplete());
      assertEquals(1088, releaseSavepointTask0.getTotalNb());
      assertEquals(0, releaseSavepointTask0.getFailed());
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.getSuccess()I: root-Branch
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      ReleaseSavepointTask releaseSavepointTask0 = new ReleaseSavepointTask(0, 1088, 376L, ";d&<e*@3", 1000L, "");
      int int0 = releaseSavepointTask0.getSuccess();
      assertEquals(0, releaseSavepointTask0.getNbToComplete());
      assertFalse(releaseSavepointTask0.hasTid());
      assertEquals(0, releaseSavepointTask0.getExecutionStarted());
      assertEquals(0, int0);
      assertEquals(0, releaseSavepointTask0.getFailed());
      assertEquals(1088, releaseSavepointTask0.getTotalNb());
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.getExecutionStarted()I: root-Branch
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      SavepointTask savepointTask0 = new SavepointTask(1408, 3133, (long) 1408, (String) null, 3160L, (String) null);
      int int0 = savepointTask0.getExecutionStarted();
      assertEquals(0, int0);
      assertEquals(3133, savepointTask0.getTotalNb());
      assertEquals(0, savepointTask0.getSuccess());
      assertFalse(savepointTask0.hasTid());
      assertEquals(0, savepointTask0.getFailed());
      assertEquals(1408, savepointTask0.getNbToComplete());
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.getTotalNb()I: root-Branch
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      RollbackTask rollbackTask0 = new RollbackTask(16, 2125, 538L, "xO3Y>tDQ+6z\"Q1ZTz", 1593L);
      int int0 = rollbackTask0.getTotalNb();
      assertEquals(2125, int0);
      assertEquals(0, rollbackTask0.getExecutionStarted());
      assertEquals(16, rollbackTask0.getNbToComplete());
      assertEquals(0, rollbackTask0.getFailed());
      assertEquals(0, rollbackTask0.getSuccess());
      assertFalse(rollbackTask0.hasTid());
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.setHasTid(Z)V: root-Branch
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      SavepointTask savepointTask0 = new SavepointTask(1408, 3133, (long) 1408, (String) null, 3160L, (String) null);
      assertFalse(savepointTask0.hasTid());
      
      savepointTask0.setHasTid(true);
      assertTrue(savepointTask0.hasTid());
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.getGeneratedKeysResultSet()Ljava/sql/ResultSet;: root-Branch
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      ReleaseSavepointTask releaseSavepointTask0 = new ReleaseSavepointTask(0, 1088, 376L, ";d&<e*@3", 1000L, "");
      releaseSavepointTask0.getGeneratedKeysResultSet();
      assertEquals(0, releaseSavepointTask0.getExecutionStarted());
      assertEquals(1088, releaseSavepointTask0.getTotalNb());
      assertFalse(releaseSavepointTask0.hasTid());
      assertEquals(0, releaseSavepointTask0.getSuccess());
      assertEquals(0, releaseSavepointTask0.getFailed());
      assertEquals(0, releaseSavepointTask0.getNbToComplete());
  }

  //Test case number: 10
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.setTotalNb(I)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.hasCompleted()Z: I6 Branch 11 IF_ICMPGE L313 - false
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.hasCompleted()Z: I14 Branch 12 IF_ICMPNE L313 - false
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      ReleaseSavepointTask releaseSavepointTask0 = new ReleaseSavepointTask(2476, 2476, 0L, "VYA3gldlx+i'", 0L, "<yz{t)9TX&[Lq");
      releaseSavepointTask0.setTotalNb(0);
      boolean boolean0 = releaseSavepointTask0.hasCompleted();
      assertTrue(releaseSavepointTask0.hasFullyCompleted());
      assertTrue(boolean0);
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.execute(Lorg/objectweb/cjdbc/controller/loadbalancer/BackendWorkerThread;)V: I10 Branch 1 IFEQ L114 - true
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      StoredProcedure storedProcedure0 = new StoredProcedure(" failed (", true, (-174), " failed (", true);
      WriteStoredProcedureTask writeStoredProcedureTask0 = new WriteStoredProcedureTask((-174), (-174), storedProcedure0);
      // Undeclared exception!
      try { 
        writeStoredProcedureTask0.execute((BackendWorkerThread) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.tasks.WriteStoredProcedureTask", e);
      }
  }

  //Test case number: 12
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.execute(Lorg/objectweb/cjdbc/controller/loadbalancer/BackendWorkerThread;)V: I10 Branch 1 IFEQ L114 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.execute(Lorg/objectweb/cjdbc/controller/loadbalancer/BackendWorkerThread;)V: I13 Branch 2 IFNE L114 - false
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.setExpiredTimeout()Z: I9 Branch 14 IFNE L383 - false
   */

	@Test(timeout=300000)
  public void test12()  throws Throwable  {
      StoredProcedure storedProcedure0 = new StoredProcedure(" fakiled O", false, (-302), " fakiled O", false);
      WriteStoredProcedureTask writeStoredProcedureTask0 = new WriteStoredProcedureTask((-302), (-302), storedProcedure0);
      boolean boolean0 = writeStoredProcedureTask0.setExpiredTimeout();
      assertTrue(boolean0);
      
      writeStoredProcedureTask0.execute((BackendWorkerThread) null);
      assertEquals(0, writeStoredProcedureTask0.getFailed());
      assertEquals(-302, writeStoredProcedureTask0.getTotalNb());
      assertFalse(writeStoredProcedureTask0.hasTid());
      assertEquals(-302, writeStoredProcedureTask0.getNbToComplete());
      assertEquals(0, writeStoredProcedureTask0.getSuccess());
  }

  //Test case number: 13
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.notifySuccess()V: I14 Branch 3 IF_ICMPEQ L141 - true
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.notifySuccess()V: I27 Branch 5 IFLE L143 - true
   */

	@Test(timeout=300000)
  public void test13()  throws Throwable  {
      KillThreadTask killThreadTask0 = new KillThreadTask(1, 1);
      killThreadTask0.notifySuccess();
      assertEquals(1, killThreadTask0.getSuccess());
  }

  //Test case number: 14
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.notifySuccess()V: I14 Branch 3 IF_ICMPEQ L141 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.notifySuccess()V: I22 Branch 4 IF_ICMPNE L141 - true
   */

	@Test(timeout=300000)
  public void test14()  throws Throwable  {
      StoredProcedure storedProcedure0 = new StoredProcedure(" failed (", true, (-174), " failed (", true);
      WriteStoredProcedureTask writeStoredProcedureTask0 = new WriteStoredProcedureTask((-174), (-174), storedProcedure0);
      writeStoredProcedureTask0.notifySuccess();
      assertEquals(1, writeStoredProcedureTask0.getSuccess());
  }

  //Test case number: 15
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.notifySuccess()V: I14 Branch 3 IF_ICMPEQ L141 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.notifySuccess()V: I22 Branch 4 IF_ICMPNE L141 - false
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.notifySuccess()V: I27 Branch 5 IFLE L143 - true
   */

	@Test(timeout=300000)
  public void test15()  throws Throwable  {
      BeginTask beginTask0 = new BeginTask(476, 1, 347L, "", 347L);
      beginTask0.notifySuccess();
      assertEquals(1, beginTask0.getSuccess());
  }

  //Test case number: 16
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.notifyCompletion()V: I17 Branch 6 IF_ICMPNE L163 - true
   */

	@Test(timeout=300000)
  public void test16()  throws Throwable  {
      BeginTask beginTask0 = new BeginTask((-1), 0, (long) (-1), "p1+LsF", (-2022L));
      beginTask0.notifyCompletion();
      assertEquals(-1, beginTask0.getTotalNb());
  }

  //Test case number: 17
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.notifyCompletion()V: I17 Branch 6 IF_ICMPNE L163 - false
   */

	@Test(timeout=300000)
  public void test17()  throws Throwable  {
      CommitTask commitTask0 = new CommitTask(830, 1, (long) 1, "", (long) 1);
      commitTask0.notifyCompletion();
      assertTrue(commitTask0.hasFullyCompleted());
  }

  //Test case number: 18
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.notifyFailure(Lorg/objectweb/cjdbc/controller/loadbalancer/BackendWorkerThread;JLjava/lang/Exception;)Z: I12 Branch 7 IFNONNULL L191 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.notifyFailure(Lorg/objectweb/cjdbc/controller/loadbalancer/BackendWorkerThread;JLjava/lang/Exception;)Z: I24 Branch 8 IFEQ L193 - false
   */

	@Test(timeout=300000)
  public void test18()  throws Throwable  {
      SavepointTask savepointTask0 = new SavepointTask(0, 0, 131L, (String) null, (long) 0, (String) null);
      MockException mockException0 = new MockException();
      SQLException sQLException0 = new SQLException((Throwable) mockException0);
      // Undeclared exception!
      try { 
        savepointTask0.notifyFailure((BackendWorkerThread) null, 0, sQLException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask", e);
      }
  }

  //Test case number: 19
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.notifyFailure(Lorg/objectweb/cjdbc/controller/loadbalancer/BackendWorkerThread;JLjava/lang/Exception;)Z: I12 Branch 7 IFNONNULL L191 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.notifyFailure(Lorg/objectweb/cjdbc/controller/loadbalancer/BackendWorkerThread;JLjava/lang/Exception;)Z: I24 Branch 8 IFEQ L193 - true
   */

	@Test(timeout=300000)
  public void test19()  throws Throwable  {
      CommitTask commitTask0 = new CommitTask(1063, 1063, (long) 1063, "eCN:M0{e/`ld51;", (long) 1063);
      MockException mockException0 = new MockException();
      // Undeclared exception!
      try { 
        commitTask0.notifyFailure((BackendWorkerThread) null, 1063, mockException0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask", e);
      }
  }

  //Test case number: 20
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.hasCompleted()Z: I6 Branch 11 IF_ICMPGE L313 - true
   */

	@Test(timeout=300000)
  public void test20()  throws Throwable  {
      StoredProcedure storedProcedure0 = new StoredProcedure("d_4Rp0H@", true, (-1091), (String) null, true);
      WriteStoredProcedureTask writeStoredProcedureTask0 = new WriteStoredProcedureTask((-1091), (-3366), storedProcedure0);
      boolean boolean0 = writeStoredProcedureTask0.hasCompleted();
      assertEquals(-1091, writeStoredProcedureTask0.getNbToComplete());
      assertFalse(writeStoredProcedureTask0.hasTid());
      assertEquals(0, writeStoredProcedureTask0.getSuccess());
      assertEquals(-3366, writeStoredProcedureTask0.getTotalNb());
      assertEquals(0, writeStoredProcedureTask0.getFailed());
      assertTrue(boolean0);
  }

  //Test case number: 21
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.hasCompleted()Z: I6 Branch 11 IF_ICMPGE L313 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.hasCompleted()Z: I14 Branch 12 IF_ICMPNE L313 - true
   */

	@Test(timeout=300000)
  public void test21()  throws Throwable  {
      ReleaseSavepointTask releaseSavepointTask0 = new ReleaseSavepointTask(1063, 1063, (long) 1063, "eCN:M0{e/`ld51;", (long) 1063, "eCN:M0{e/`ld51;");
      boolean boolean0 = releaseSavepointTask0.hasCompleted();
      assertFalse(releaseSavepointTask0.hasTid());
      assertEquals(1063, releaseSavepointTask0.getNbToComplete());
      assertFalse(boolean0);
      assertEquals(0, releaseSavepointTask0.getSuccess());
      assertEquals(1063, releaseSavepointTask0.getTotalNb());
      assertEquals(0, releaseSavepointTask0.getFailed());
  }

  //Test case number: 22
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.hasFullyCompleted()Z: I9 Branch 13 IF_ICMPNE L324 - true
   */

	@Test(timeout=300000)
  public void test22()  throws Throwable  {
      SelectRequest selectRequest0 = new SelectRequest("orientation", false, (-302), "orientation");
      SelectRequestTask selectRequestTask0 = new SelectRequestTask((-302), (-302), selectRequest0);
      boolean boolean0 = selectRequestTask0.hasFullyCompleted();
      assertFalse(selectRequestTask0.hasTid());
      assertEquals(-302, selectRequestTask0.getNbToComplete());
      assertFalse(boolean0);
      assertEquals(0, selectRequestTask0.getFailed());
      assertEquals(-302, selectRequestTask0.getTotalNb());
      assertEquals(0, selectRequestTask0.getSuccess());
  }

  //Test case number: 23
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.<init>(II)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.tasks.AbstractTask.hasFullyCompleted()Z: I9 Branch 13 IF_ICMPNE L324 - false
   */

	@Test(timeout=300000)
  public void test23()  throws Throwable  {
      BeginTask beginTask0 = new BeginTask((-1), 0, (long) (-1), "p1+LsF", (-2022L));
      boolean boolean0 = beginTask0.hasFullyCompleted();
      assertTrue(boolean0);
      assertEquals(-1, beginTask0.getNbToComplete());
      assertFalse(beginTask0.hasTid());
  }
}
