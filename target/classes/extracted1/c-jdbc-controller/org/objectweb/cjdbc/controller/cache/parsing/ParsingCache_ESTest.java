/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 17:16:10 GMT 2016
 */

package org.objectweb.cjdbc.controller.cache.parsing;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.sql.AlterRequest;
import org.objectweb.cjdbc.common.sql.CreateRequest;
import org.objectweb.cjdbc.common.sql.schema.DatabaseSchema;
import org.objectweb.cjdbc.controller.cache.parsing.ParsingCache;
import org.objectweb.cjdbc.controller.requestmanager.RequestManager;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ParsingCache_ESTest extends ParsingCache_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.setBackgroundParsing(Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I10 Branch 1 IFNE L112 - true
   * Goal 3. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I28 Branch 2 IFGE L114 - true
   * Goal 4. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I54 Branch 3 IFNE L117 - true
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      ParsingCache parsingCache0 = new ParsingCache(126, false);
      parsingCache0.setBackgroundParsing(false);
      assertFalse(parsingCache0.isCaseSensitiveParsing());
      assertFalse(parsingCache0.isBackgroundParsing());
  }

  //Test case number: 1
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.isBackgroundParsing()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I10 Branch 1 IFNE L112 - true
   * Goal 3. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I28 Branch 2 IFGE L114 - true
   * Goal 4. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I54 Branch 3 IFNE L117 - true
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      ParsingCache parsingCache0 = new ParsingCache(43, false);
      boolean boolean0 = parsingCache0.isBackgroundParsing();
      assertFalse(boolean0);
      assertFalse(parsingCache0.isCaseSensitiveParsing());
  }

  //Test case number: 2
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.setRequestManager(Lorg/objectweb/cjdbc/controller/requestmanager/RequestManager;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I10 Branch 1 IFNE L112 - true
   * Goal 3. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I28 Branch 2 IFGE L114 - true
   * Goal 4. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I54 Branch 3 IFNE L117 - true
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      ParsingCache parsingCache0 = new ParsingCache(124, false);
      parsingCache0.setRequestManager((RequestManager) null);
      assertFalse(parsingCache0.isBackgroundParsing());
      assertFalse(parsingCache0.isCaseSensitiveParsing());
  }

  //Test case number: 3
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.setCaseSensitiveParsing(Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I10 Branch 1 IFNE L112 - true
   * Goal 3. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I28 Branch 2 IFGE L114 - true
   * Goal 4. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I54 Branch 3 IFNE L117 - true
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      ParsingCache parsingCache0 = new ParsingCache(1451, true);
      assertFalse(parsingCache0.isCaseSensitiveParsing());
      
      parsingCache0.setCaseSensitiveParsing(true);
      assertTrue(parsingCache0.isCaseSensitiveParsing());
  }

  //Test case number: 4
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getXml()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I10 Branch 1 IFNE L112 - true
   * Goal 3. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I28 Branch 2 IFGE L114 - true
   * Goal 4. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I54 Branch 3 IFNE L117 - true
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      ParsingCache parsingCache0 = new ParsingCache(43, false);
      String string0 = parsingCache0.getXml();
      assertFalse(parsingCache0.isCaseSensitiveParsing());
      assertEquals("<ParsingCache backgroundParsing=\"false\" maxNbOfEntries=\"43\"/>", string0);
  }

  //Test case number: 5
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.setGranularity(I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I10 Branch 1 IFNE L112 - false
   * Goal 3. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I28 Branch 2 IFGE L114 - true
   * Goal 4. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I54 Branch 3 IFNE L117 - false
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      ParsingCache parsingCache0 = new ParsingCache(0, true);
      parsingCache0.setGranularity((-3));
      assertEquals(-3, parsingCache0.getGranularity());
  }

  //Test case number: 6
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getRequestManager()Lorg/objectweb/cjdbc/controller/requestmanager/RequestManager;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I10 Branch 1 IFNE L112 - true
   * Goal 3. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I28 Branch 2 IFGE L114 - true
   * Goal 4. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I54 Branch 3 IFNE L117 - true
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      ParsingCache parsingCache0 = new ParsingCache(124, false);
      parsingCache0.getRequestManager();
      assertFalse(parsingCache0.isCaseSensitiveParsing());
      assertFalse(parsingCache0.isBackgroundParsing());
  }

  //Test case number: 7
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getGranularity()I: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I10 Branch 1 IFNE L112 - false
   * Goal 3. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I28 Branch 2 IFGE L114 - true
   * Goal 4. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I54 Branch 3 IFNE L117 - false
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      ParsingCache parsingCache0 = new ParsingCache(0, true);
      int int0 = parsingCache0.getGranularity();
      assertFalse(parsingCache0.isCaseSensitiveParsing());
      assertEquals(0, int0);
      assertTrue(parsingCache0.isBackgroundParsing());
  }

  //Test case number: 8
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.isCaseSensitiveParsing()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I10 Branch 1 IFNE L112 - true
   * Goal 3. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I28 Branch 2 IFGE L114 - true
   * Goal 4. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I54 Branch 3 IFNE L117 - true
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      ParsingCache parsingCache0 = new ParsingCache(1, true);
      boolean boolean0 = parsingCache0.isCaseSensitiveParsing();
      assertTrue(parsingCache0.isBackgroundParsing());
      assertFalse(boolean0);
  }

  //Test case number: 9
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I10 Branch 1 IFNE L112 - false
   * Goal 2. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I28 Branch 2 IFGE L114 - true
   * Goal 3. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I54 Branch 3 IFNE L117 - false
   * Goal 4. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCache(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I4 Branch 4 IFEQ L175 - false
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      ParsingCache parsingCache0 = new ParsingCache(0, true);
      AlterRequest alterRequest0 = new AlterRequest("u2", true, 0, "u2", (DatabaseSchema) null, 0, true);
      parsingCache0.getParsingFromCache(alterRequest0);
      assertTrue(parsingCache0.isBackgroundParsing());
      assertFalse(parsingCache0.isCaseSensitiveParsing());
  }

  //Test case number: 10
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I10 Branch 1 IFNE L112 - true
   * Goal 2. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I28 Branch 2 IFGE L114 - true
   * Goal 3. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I54 Branch 3 IFNE L117 - true
   * Goal 4. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCache(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I4 Branch 4 IFEQ L175 - true
   * Goal 5. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCache(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I16 Branch 5 IFNONNULL L179 - true
   * Goal 6. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCache(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I33 Branch 6 IFNULL L183 - true
   * Goal 7. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCache(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I46 Branch 7 IFEQ L188 - false
   * Goal 8. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCache(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I60 Branch 8 IFNE L192 - false
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      ParsingCache parsingCache0 = new ParsingCache(2700, true);
      CreateRequest createRequest0 = new CreateRequest("+u]-&U/w:>P", true, (-218), "+u]-&U/w:>P");
      createRequest0.setSqlSkeleton("+u]-&U/w:>P");
      // Undeclared exception!
      try { 
        parsingCache0.getParsingFromCache(createRequest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.cache.parsing.ParsingCache", e);
      }
  }

  //Test case number: 11
  /*
   * 7 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I10 Branch 1 IFNE L112 - false
   * Goal 2. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I28 Branch 2 IFGE L114 - true
   * Goal 3. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I54 Branch 3 IFNE L117 - false
   * Goal 4. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCache(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I4 Branch 4 IFEQ L175 - true
   * Goal 5. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCache(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I16 Branch 5 IFNONNULL L179 - false
   * Goal 6. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCache(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I33 Branch 6 IFNULL L183 - true
   * Goal 7. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCache(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I46 Branch 7 IFEQ L188 - true
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      ParsingCache parsingCache0 = new ParsingCache(0, false);
      assertFalse(parsingCache0.isBackgroundParsing());
      
      CreateRequest createRequest0 = new CreateRequest("", false, 0, "");
      parsingCache0.getParsingFromCache(createRequest0);
      assertFalse(parsingCache0.isCaseSensitiveParsing());
  }

  //Test case number: 12
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I10 Branch 1 IFNE L112 - false
   * Goal 2. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I28 Branch 2 IFGE L114 - true
   * Goal 3. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I54 Branch 3 IFNE L117 - false
   * Goal 4. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCacheAndParseIfMissing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I4 Branch 9 IFEQ L211 - true
   * Goal 5. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCacheAndParseIfMissing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I24 Branch 10 IFNONNULL L223 - false
   * Goal 6. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCacheAndParseIfMissing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I33 Branch 11 IFNULL L227 - true
   * Goal 7. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCacheAndParseIfMissing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I69 Branch 13 IF_ICMPLE L244 - true
   * Goal 8. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCacheAndParseIfMissing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I116 Branch 14 IFEQ L263 - true
   */

	@Test(timeout=300000)
  public void test12()  throws Throwable  {
      ParsingCache parsingCache0 = new ParsingCache(0, false);
      CreateRequest createRequest0 = new CreateRequest("", false, 0, "");
      // Undeclared exception!
      try { 
        parsingCache0.getParsingFromCacheAndParseIfMissing(createRequest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.cache.parsing.ParsingCache", e);
      }
  }

  //Test case number: 13
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I10 Branch 1 IFNE L112 - false
   * Goal 2. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I28 Branch 2 IFGE L114 - true
   * Goal 3. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I54 Branch 3 IFNE L117 - false
   * Goal 4. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCacheAndParseIfMissing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I4 Branch 9 IFEQ L211 - false
   */

	@Test(timeout=300000)
  public void test13()  throws Throwable  {
      ParsingCache parsingCache0 = new ParsingCache(0, true);
      CreateRequest createRequest0 = new CreateRequest("", true, 899, "", (DatabaseSchema) null, 0, false);
      parsingCache0.getParsingFromCacheAndParseIfMissing(createRequest0);
      assertFalse(parsingCache0.isCaseSensitiveParsing());
  }

  //Test case number: 14
  /*
   * 10 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I10 Branch 1 IFNE L112 - true
   * Goal 2. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I28 Branch 2 IFGE L114 - true
   * Goal 3. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.<init>(IZ)V: I54 Branch 3 IFNE L117 - true
   * Goal 4. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCacheAndParseIfMissing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I4 Branch 9 IFEQ L211 - true
   * Goal 5. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCacheAndParseIfMissing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I24 Branch 10 IFNONNULL L223 - false
   * Goal 6. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCacheAndParseIfMissing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I33 Branch 11 IFNULL L227 - false
   * Goal 7. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCacheAndParseIfMissing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I49 Branch 12 IFNULL L231 - true
   * Goal 8. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCacheAndParseIfMissing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I69 Branch 13 IF_ICMPLE L244 - true
   * Goal 9. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCacheAndParseIfMissing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I116 Branch 14 IFEQ L263 - false
   * Goal 10. org.objectweb.cjdbc.controller.cache.parsing.ParsingCache.getParsingFromCacheAndParseIfMissing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I128 Branch 15 IFNULL L269 - true
   */

	@Test(timeout=300000)
  public void test14()  throws Throwable  {
      ParsingCache parsingCache0 = new ParsingCache(1, true);
      CreateRequest createRequest0 = new CreateRequest("S", true, 1, "S");
      createRequest0.setSqlSkeleton("S");
      // Undeclared exception!
      try { 
        parsingCache0.getParsingFromCacheAndParseIfMissing(createRequest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.cache.parsing.ParsingCache", e);
      }
  }
}
