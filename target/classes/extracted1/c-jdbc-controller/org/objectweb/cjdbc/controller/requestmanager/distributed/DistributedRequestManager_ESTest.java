/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 18:38:40 GMT 2016
 */

package org.objectweb.cjdbc.controller.requestmanager.distributed;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.sql.SQLException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.log.Trace;
import org.objectweb.cjdbc.common.sql.AlterRequest;
import org.objectweb.cjdbc.common.sql.DeleteRequest;
import org.objectweb.cjdbc.common.sql.DropRequest;
import org.objectweb.cjdbc.common.sql.SelectRequest;
import org.objectweb.cjdbc.common.sql.StoredProcedure;
import org.objectweb.cjdbc.common.sql.UnknownRequest;
import org.objectweb.cjdbc.common.sql.filters.AbstractBlobFilter;
import org.objectweb.cjdbc.common.sql.filters.Base64Filter;
import org.objectweb.cjdbc.common.sql.filters.BlobEscapedFilter;
import org.objectweb.cjdbc.controller.backend.DatabaseBackend;
import org.objectweb.cjdbc.controller.cache.result.AbstractResultCache;
import org.objectweb.cjdbc.controller.cache.result.ResultCacheColumnUnique;
import org.objectweb.cjdbc.controller.cache.result.ResultCacheDatabase;
import org.objectweb.cjdbc.controller.core.Controller;
import org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer;
import org.objectweb.cjdbc.controller.loadbalancer.policies.WaitForCompletionPolicy;
import org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_LPRF;
import org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_RR;
import org.objectweb.cjdbc.controller.recoverylog.RecoveryLog;
import org.objectweb.cjdbc.controller.requestmanager.TransactionMarkerMetaData;
import org.objectweb.cjdbc.controller.requestmanager.distributed.RAIDb1DistributedRequestManager;
import org.objectweb.cjdbc.controller.requestmanager.distributed.RAIDb2DistributedRequestManager;
import org.objectweb.cjdbc.controller.scheduler.AbstractScheduler;
import org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1OptimisticQueryLevelScheduler;
import org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler;
import org.objectweb.cjdbc.controller.virtualdatabase.DistributedVirtualDatabase;
import org.objectweb.cjdbc.controller.virtualdatabase.VirtualDatabase;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class DistributedRequestManager_ESTest extends DistributedRequestManager_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.addFailedOnAllBackends(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      Controller controller0 = new Controller("(", (-132), (-132));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-132), false, (-132), (-132), (long) (-132), (-132), (AbstractBlobFilter) blobEscapedFilter0);
      ResultCacheDatabase resultCacheDatabase0 = new ResultCacheDatabase((-132), (-132));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb1DistributedRequestManager rAIDb1DistributedRequestManager0 = new RAIDb1DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) resultCacheDatabase0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, 2830L, (-9223372036854775808L), (-9223372036854775808L));
      UnknownRequest unknownRequest0 = new UnknownRequest("", true, (-1), "New scheduler does not support total ordering and is not compatible with distributed virtual databases.");
      rAIDb1DistributedRequestManager0.addFailedOnAllBackends(unknownRequest0);
      assertEquals((-9223372036854775808L), rAIDb1DistributedRequestManager0.getRollbackTimeout());
  }

  //Test case number: 1
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execReadStoredProcedureLocally(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execReadStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I4 Branch 36 IFEQ L784 - false
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      Controller controller0 = new Controller("`@m)+O7N<", (-2147450871), (-2147450871));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "`@m)+O7N<", "`@m)+O7N<", (-2147450871), true, (-2147450871), (-2147450871), (long) (-2147450871), (-2147450871), (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb2DistributedRequestManager rAIDb2DistributedRequestManager0 = new RAIDb2DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) null, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (long) (-2147450871), (long) (-2147450871), (long) (-2147450871));
      StoredProcedure storedProcedure0 = new StoredProcedure("`@m)+O7N<", true, (-2147450871), "`@m)+O7N<", true);
      storedProcedure0.setIsReadOnly(true);
      // Undeclared exception!
      try { 
        rAIDb2DistributedRequestManager0.execReadStoredProcedure(storedProcedure0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -2147450871
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.getLogger()Lorg/objectweb/cjdbc/common/log/Trace;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      Controller controller0 = new Controller("(", (-132), (-132));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-132), false, (-132), (-132), (long) (-132), (-132), (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      ResultCacheDatabase resultCacheDatabase0 = new ResultCacheDatabase(0, 0);
      RAIDb1DistributedRequestManager rAIDb1DistributedRequestManager0 = new RAIDb1DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) resultCacheDatabase0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, 999L, (long) (-132), (long) 0);
      Trace trace0 = rAIDb1DistributedRequestManager0.getLogger();
      assertNotNull(trace0);
  }

  //Test case number: 3
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execReadRequest(Lorg/objectweb/cjdbc/common/sql/SelectRequest;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execLocalReadRequest(Lorg/objectweb/cjdbc/common/sql/SelectRequest;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      Controller controller0 = new Controller("(", (-220), (-220));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-220), false, (-220), (-220), (long) (-220), (-220), (AbstractBlobFilter) blobEscapedFilter0);
      ResultCacheDatabase resultCacheDatabase0 = new ResultCacheDatabase((-220), (-220));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb1DistributedRequestManager rAIDb1DistributedRequestManager0 = new RAIDb1DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) resultCacheDatabase0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (long) (-220), (long) (-220), (long) (-220));
      SelectRequest selectRequest0 = new SelectRequest("", false, 1111, "");
      try { 
        rAIDb1DistributedRequestManager0.execReadRequest(selectRequest0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // transaction.not.started
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 4
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.scheduleExecWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.lazyTransactionStart(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I4 Branch 14 IFNE L521 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.lazyTransactionStart(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I18 Branch 15 IFEQ L524 - true
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      Controller controller0 = new Controller("(", (-189), (-189));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-189), true, (-189), (-189), (long) (-189), (-189), (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      DropRequest dropRequest0 = new DropRequest("(", true, (-189), "Error while enabling backend ");
      RAIDb2DistributedRequestManager rAIDb2DistributedRequestManager0 = new RAIDb2DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) null, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (-284L), (-284L), (-284L));
      try { 
        rAIDb2DistributedRequestManager0.scheduleExecWriteRequest(dropRequest0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // transaction.not.started
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execDistributedWriteStoredProcedureLocally(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)I: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      Controller controller0 = new Controller("(", (-206), (-206));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-206), false, (-206), (-206), (long) (-206), (-206), (AbstractBlobFilter) blobEscapedFilter0);
      ResultCacheDatabase resultCacheDatabase0 = new ResultCacheDatabase((-206), (-206));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb1DistributedRequestManager rAIDb1DistributedRequestManager0 = new RAIDb1DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) resultCacheDatabase0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (long) (-206), (long) (-206), (long) (-206));
      StoredProcedure storedProcedure0 = new StoredProcedure("", false, (-206), "(", false);
      // Undeclared exception!
      try { 
        rAIDb1DistributedRequestManager0.execDistributedWriteStoredProcedureLocally(storedProcedure0);
        fail("Expecting exception: StringIndexOutOfBoundsException");
      
      } catch(StringIndexOutOfBoundsException e) {
         //
         // String index out of range: -206
         //
         assertThrownBy("java.lang.String", e);
      }
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.getControllerId()J: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      Controller controller0 = new Controller("(", (-132), (-132));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-132), false, (-132), (-132), (long) (-132), (-132), (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      ResultCacheDatabase resultCacheDatabase0 = new ResultCacheDatabase(0, 0);
      RAIDb1DistributedRequestManager rAIDb1DistributedRequestManager0 = new RAIDb1DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) resultCacheDatabase0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, 999L, (long) (-132), (long) 0);
      long long0 = rAIDb1DistributedRequestManager0.getControllerId();
      assertEquals(0L, long0);
  }

  //Test case number: 7
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.getVirtualDatabase()Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      Controller controller0 = new Controller("(", (-206), (-206));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-206), false, (-206), (-206), (long) (-206), (-206), (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb2DistributedRequestManager rAIDb2DistributedRequestManager0 = new RAIDb2DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) null, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (-284L), (-284L), (-284L));
      DistributedVirtualDatabase distributedVirtualDatabase1 = (DistributedVirtualDatabase)rAIDb2DistributedRequestManager0.getVirtualDatabase();
      assertEquals(0, VirtualDatabase.CHECK_BACKEND_DISABLE);
  }

  //Test case number: 8
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setControllerId(J)V: I7 Branch 1 IFEQ L164 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setControllerId(J)V: I59 Branch 2 IFEQ L172 - true
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      Controller controller0 = new Controller("n(", (-132), (-132));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "n(", "n(", (-132), true, (-132), (-132), (long) (-132), (-132), (AbstractBlobFilter) blobEscapedFilter0);
      ResultCacheDatabase resultCacheDatabase0 = new ResultCacheDatabase((-132), (-132));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb1DistributedRequestManager rAIDb1DistributedRequestManager0 = new RAIDb1DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) resultCacheDatabase0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (long) (-132), (long) (-132), (long) (-132));
      rAIDb1DistributedRequestManager0.setControllerId(1787L);
      assertEquals(502995783381942272L, rAIDb1DistributedRequestManager0.getControllerId());
  }

  //Test case number: 9
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setControllerId(J)V: I7 Branch 1 IFEQ L164 - false
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      Controller controller0 = new Controller("(", (-132), (-132));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-132), false, (-132), (-132), (long) (-132), (-132), (AbstractBlobFilter) blobEscapedFilter0);
      ResultCacheDatabase resultCacheDatabase0 = new ResultCacheDatabase((-132), (-132));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb1DistributedRequestManager rAIDb1DistributedRequestManager0 = new RAIDb1DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) resultCacheDatabase0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (long) (-132), (long) (-132), (long) (-132));
      // Undeclared exception!
      try { 
        rAIDb1DistributedRequestManager0.setControllerId(281474976710655L);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Out of range controller id (281474976710655)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager", e);
      }
  }

  //Test case number: 10
  /*
   * 1 covered goal:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - false
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      Controller controller0 = new Controller("", (-132), (-132));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "", "", 1, false, (-2605), (-2602), (long) 1, 1, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1OptimisticQueryLevelScheduler rAIDb1OptimisticQueryLevelScheduler0 = new RAIDb1OptimisticQueryLevelScheduler();
      ResultCacheDatabase resultCacheDatabase0 = new ResultCacheDatabase((-132), (-132));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1DistributedRequestManager rAIDb1DistributedRequestManager0 = null;
      try {
        rAIDb1DistributedRequestManager0 = new RAIDb1DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1OptimisticQueryLevelScheduler0, (AbstractResultCache) resultCacheDatabase0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (long) (-2605), (long) (-2602), (long) (-132));
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // New scheduler does not support total ordering and is not compatible with distributed virtual databases.
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager", e);
      }
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.enableBackend(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;)V: I10 Branch 4 IFLE L227 - true
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      Controller controller0 = new Controller("(", (-2179), (-2179));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-2179), false, (-2179), (-2179), (long) (-2179), (-2179), (AbstractBlobFilter) blobEscapedFilter0);
      ResultCacheDatabase resultCacheDatabase0 = new ResultCacheDatabase((-2179), (-2179));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb1DistributedRequestManager rAIDb1DistributedRequestManager0 = new RAIDb1DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) resultCacheDatabase0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (long) (-2179), (long) (-2179), (long) (-2179));
      DatabaseBackend databaseBackend0 = new DatabaseBackend("(", "(", "", "h=sY_P/GV7*", "Zt", true, "Zt");
      try { 
        rAIDb1DistributedRequestManager0.enableBackend(databaseBackend0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // backend.null.connection.manager
         //
         assertThrownBy("org.objectweb.cjdbc.controller.backend.DatabaseBackend", e);
      }
  }

  //Test case number: 12
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.disableBackendForCheckpoint(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Ljava/lang/String;)V: I4 Branch 6 IFNONNULL L298 - false
   */

	@Test(timeout=300000)
  public void test12()  throws Throwable  {
      Controller controller0 = new Controller("(", (-202), (-202));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-202), true, (-202), (-202), (long) (-202), (-202), (AbstractBlobFilter) blobEscapedFilter0);
      ResultCacheDatabase resultCacheDatabase0 = new ResultCacheDatabase((-202), (-202));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb2DistributedRequestManager rAIDb2DistributedRequestManager0 = new RAIDb2DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) resultCacheDatabase0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (-284L), (-284L), (-284L));
      DatabaseBackend databaseBackend0 = new DatabaseBackend("(", "Invalid value for now() macro replacement (", "(", "(", "(", true, "");
      try { 
        rAIDb2DistributedRequestManager0.disableBackendForCheckpoint(databaseBackend0, ",^Kcta^.nu[hf?^]");
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // recovery.store.checkpoint.failed.cause.null
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager", e);
      }
  }

  //Test case number: 13
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.completeFailedOnAllBackends(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;Z)V: I6 Branch 7 IFNE L354 - false
   */

	@Test(timeout=300000)
  public void test13()  throws Throwable  {
      Controller controller0 = new Controller("", (-2147450879), (-2147450879));
      Base64Filter base64Filter0 = new Base64Filter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "", "", (-2147450879), false, (-2147450879), (-2147450879), (long) (-2147450879), 0, (AbstractBlobFilter) base64Filter0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      ResultCacheColumnUnique resultCacheColumnUnique0 = new ResultCacheColumnUnique((-2147450879), (-2147450879));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb2DistributedRequestManager rAIDb2DistributedRequestManager0 = new RAIDb2DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) resultCacheColumnUnique0, (AbstractLoadBalancer) rAIDb1_RR0, (RecoveryLog) null, (long) (-2147450879), (long) (-2147450879), (long) (-2147450879));
      DeleteRequest deleteRequest0 = new DeleteRequest("", false, 0, "");
      rAIDb2DistributedRequestManager0.completeFailedOnAllBackends(deleteRequest0, false);
      assertEquals(3, rAIDb2DistributedRequestManager0.getCacheParsingranularity());
  }

  //Test case number: 14
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.removeFailedRequestFromRecoveryLog(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;J)V: I4 Branch 9 IFEQ L394 - true
   */

	@Test(timeout=300000)
  public void test14()  throws Throwable  {
      Controller controller0 = new Controller("(", (-174), (-174));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-174), false, (-174), (-174), (long) (-174), (-174), (AbstractBlobFilter) blobEscapedFilter0);
      ResultCacheDatabase resultCacheDatabase0 = new ResultCacheDatabase((-174), (-174));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb1DistributedRequestManager rAIDb1DistributedRequestManager0 = new RAIDb1DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) resultCacheDatabase0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (long) (-174), (long) (-174), (long) (-174));
      DropRequest dropRequest0 = new DropRequest("(", false, (-174), "Error while enabling backend ");
      // Undeclared exception!
      try { 
        rAIDb1DistributedRequestManager0.removeFailedRequestFromRecoveryLog(dropRequest0, (-174));
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager", e);
      }
  }

  //Test case number: 15
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.removeFailedStoredProcedureFromRecoveryLog(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)V: I4 Branch 10 IFEQ L415 - true
   */

	@Test(timeout=300000)
  public void test15()  throws Throwable  {
      Controller controller0 = new Controller("(", (-188), (-188));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-188), true, (-188), (-188), (long) (-188), (-188), (AbstractBlobFilter) blobEscapedFilter0);
      ResultCacheDatabase resultCacheDatabase0 = new ResultCacheDatabase((-188), (-188));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb2DistributedRequestManager rAIDb2DistributedRequestManager0 = new RAIDb2DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) resultCacheDatabase0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (long) (-188), (long) (-188), (long) (-188));
      StoredProcedure storedProcedure0 = new StoredProcedure("(", true, (-188), "(", true);
      // Undeclared exception!
      try { 
        rAIDb2DistributedRequestManager0.removeFailedStoredProcedureFromRecoveryLog(storedProcedure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager", e);
      }
  }

  //Test case number: 16
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.removeFailedCommitFromRecoveryLog(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I4 Branch 11 IFEQ L432 - true
   */

	@Test(timeout=300000)
  public void test16()  throws Throwable  {
      Controller controller0 = new Controller("(", (-206), (-206));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-206), true, (-206), (-206), (long) (-206), (-206), (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb2DistributedRequestManager rAIDb2DistributedRequestManager0 = new RAIDb2DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) null, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (long) (-206), (long) (-206), (long) (-206));
      // Undeclared exception!
      try { 
        rAIDb2DistributedRequestManager0.removeFailedCommitFromRecoveryLog((TransactionMarkerMetaData) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager", e);
      }
  }

  //Test case number: 17
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.removeFailedRollbackFromRecoveryLog(Lorg/objectweb/cjdbc/controller/requestmanager/TransactionMarkerMetaData;)V: I4 Branch 12 IFEQ L450 - true
   */

	@Test(timeout=300000)
  public void test17()  throws Throwable  {
      Controller controller0 = new Controller("n(", (-132), (-132));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "n(", "n(", (-132), false, (-132), (-132), (long) (-132), (-132), (AbstractBlobFilter) blobEscapedFilter0);
      ResultCacheDatabase resultCacheDatabase0 = new ResultCacheDatabase((-132), (-132));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb1DistributedRequestManager rAIDb1DistributedRequestManager0 = new RAIDb1DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) resultCacheDatabase0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (long) (-132), (long) (-132), (long) (-132));
      TransactionMarkerMetaData transactionMarkerMetaData0 = new TransactionMarkerMetaData((-65536L), 4395L, "ResultSet.updateDouble(int, double) unsupported");
      // Undeclared exception!
      try { 
        rAIDb1DistributedRequestManager0.removeFailedRollbackFromRecoveryLog(transactionMarkerMetaData0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager", e);
      }
  }

  //Test case number: 18
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.begin(Ljava/lang/String;)J: I39 Branch 13 IFEQ L481 - true
   */

	@Test(timeout=300000)
  public void test18()  throws Throwable  {
      Controller controller0 = new Controller("(", (-213), (-213));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-213), true, (-213), (-213), (long) (-213), (-213), (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb2DistributedRequestManager rAIDb2DistributedRequestManager0 = new RAIDb2DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) null, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, 65535L, 65535L, 65535L);
      long long0 = rAIDb2DistributedRequestManager0.begin("");
      assertEquals(1L, long0);
  }

  //Test case number: 19
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.lazyTransactionStart(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I4 Branch 14 IFNE L521 - true
   */

	@Test(timeout=300000)
  public void test19()  throws Throwable  {
      Controller controller0 = new Controller("(", (-206), (-206));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-206), false, (-206), (-206), (long) (-206), (-206), (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      DropRequest dropRequest0 = new DropRequest("(", false, (-206), "Error while enabling backend ");
      dropRequest0.setIsAutoCommit(true);
      RAIDb2DistributedRequestManager rAIDb2DistributedRequestManager0 = new RAIDb2DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) null, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (-284L), (-284L), (-284L));
      rAIDb2DistributedRequestManager0.lazyTransactionStart(dropRequest0);
      assertEquals("requestmanager", rAIDb2DistributedRequestManager0.getAssociatedString());
  }

  //Test case number: 20
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.lazyTransactionStart(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I4 Branch 14 IFNE L521 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.lazyTransactionStart(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I18 Branch 15 IFEQ L524 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.lazyTransactionStart(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I28 Branch 16 IFNE L526 - true
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.lazyTransactionStart(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I28 Branch 16 IFNE L526 - false
   * Goal 7. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.lazyTransactionStart(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I49 Branch 17 IFEQ L534 - true
   * Goal 8. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.lazyTransactionStart(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I86 Branch 18 IFNULL L548 - true
   */

	@Test(timeout=300000)
  public void test20()  throws Throwable  {
      Controller controller0 = new Controller("(", (-202), (-202));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-202), true, (-202), (-202), (long) (-202), (-202), (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      DropRequest dropRequest0 = new DropRequest("(", true, (-202), "Error while eabling backnd ");
      RAIDb2DistributedRequestManager rAIDb2DistributedRequestManager0 = new RAIDb2DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) null, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (-277L), (-277L), (-277L));
      dropRequest0.setTransactionId((-65541L));
      rAIDb2DistributedRequestManager0.lazyTransactionStart(dropRequest0);
      rAIDb2DistributedRequestManager0.lazyTransactionStart(dropRequest0);
      assertEquals(1, rAIDb1PassThroughScheduler0.getPendingTransactions());
  }

  //Test case number: 21
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.commit(JZ)V: I37 Branch 20 IFEQ L587 - true
   */

	@Test(timeout=300000)
  public void test21()  throws Throwable  {
      Controller controller0 = new Controller("(", (-206), (-206));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-206), false, (-206), (-206), (long) (-206), (-206), (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb2DistributedRequestManager rAIDb2DistributedRequestManager0 = new RAIDb2DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) null, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (-284L), (-284L), (-284L));
      try { 
        rAIDb2DistributedRequestManager0.commit(0L, true);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // transaction.marker.not.found
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 22
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.rollback(JZ)V: I37 Branch 21 IFEQ L610 - true
   */

	@Test(timeout=300000)
  public void test22()  throws Throwable  {
      Controller controller0 = new Controller("(", (-202), (-202));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-202), true, (-202), (-202), (long) (-202), (-202), (AbstractBlobFilter) blobEscapedFilter0);
      ResultCacheDatabase resultCacheDatabase0 = new ResultCacheDatabase((-202), (-202));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb2DistributedRequestManager rAIDb2DistributedRequestManager0 = new RAIDb2DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) resultCacheDatabase0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (-284L), (-284L), (-284L));
      try { 
        rAIDb2DistributedRequestManager0.rollback((-284L), true);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // transaction.marker.not.found
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 23
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.rollback(JLjava/lang/String;)V: I20 Branch 22 IFLE L631 - true
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.rollback(JLjava/lang/String;)V: I43 Branch 23 IFEQ L633 - true
   */

	@Test(timeout=300000)
  public void test23()  throws Throwable  {
      Controller controller0 = new Controller("(", (-132), (-132));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-132), false, (-132), (-132), (long) (-132), (-132), (AbstractBlobFilter) blobEscapedFilter0);
      ResultCacheDatabase resultCacheDatabase0 = new ResultCacheDatabase((-132), (-132));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb1DistributedRequestManager rAIDb1DistributedRequestManager0 = new RAIDb1DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) resultCacheDatabase0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, 2830L, (-9223372036854775808L), (-9223372036854775808L));
      try { 
        rAIDb1DistributedRequestManager0.rollback((long) (-132), "(");
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // transaction.marker.not.found
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 24
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setSavepoint(J)I: I20 Branch 24 IFLE L649 - true
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setSavepoint(J)I: I43 Branch 25 IFEQ L651 - true
   */

	@Test(timeout=300000)
  public void test24()  throws Throwable  {
      Controller controller0 = new Controller("p{", 1, 1);
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "p{", "p{", 1, false, 1, 1, (long) 1, 1, (AbstractBlobFilter) blobEscapedFilter0);
      ResultCacheDatabase resultCacheDatabase0 = new ResultCacheDatabase(1, 1);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb1DistributedRequestManager rAIDb1DistributedRequestManager0 = new RAIDb1DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) resultCacheDatabase0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (long) 1, (long) 1, (long) 1);
      try { 
        rAIDb1DistributedRequestManager0.setSavepoint((long) (byte)1);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // transaction.marker.not.found
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 25
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setSavepoint(JLjava/lang/String;)V: I20 Branch 26 IFLE L672 - true
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setSavepoint(JLjava/lang/String;)V: I43 Branch 27 IFEQ L674 - true
   */

	@Test(timeout=300000)
  public void test25()  throws Throwable  {
      Controller controller0 = new Controller("", (-2147450879), (-2147450879));
      Base64Filter base64Filter0 = new Base64Filter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "", "", (-2147450879), false, (-2147450879), (-2147450879), (long) (-2147450879), 0, (AbstractBlobFilter) base64Filter0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      ResultCacheColumnUnique resultCacheColumnUnique0 = new ResultCacheColumnUnique((-2147450879), (-2147450879));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_RR rAIDb1_RR0 = new RAIDb1_RR((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb2DistributedRequestManager rAIDb2DistributedRequestManager0 = new RAIDb2DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) resultCacheColumnUnique0, (AbstractLoadBalancer) rAIDb1_RR0, (RecoveryLog) null, (long) (-2147450879), (long) (-2147450879), (long) (-2147450879));
      try { 
        rAIDb2DistributedRequestManager0.setSavepoint((long) (byte)28, "");
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // transaction.marker.not.found
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 26
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.releaseSavepoint(JLjava/lang/String;)V: I20 Branch 28 IFLE L692 - true
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.releaseSavepoint(JLjava/lang/String;)V: I43 Branch 29 IFEQ L694 - true
   */

	@Test(timeout=300000)
  public void test26()  throws Throwable  {
      Controller controller0 = new Controller("", (-132), (-132));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "", "", (-132), false, (-132), (-132), (long) (-132), (-132), (AbstractBlobFilter) blobEscapedFilter0);
      ResultCacheDatabase resultCacheDatabase0 = new ResultCacheDatabase((-132), (-132));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb1DistributedRequestManager rAIDb1DistributedRequestManager0 = new RAIDb1DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) resultCacheDatabase0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (long) (-132), (long) (-132), (long) (-132));
      try { 
        rAIDb1DistributedRequestManager0.releaseSavepoint(0L, "``6Cv,X-:aC{");
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // transaction.marker.not.found
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.RequestManager", e);
      }
  }

  //Test case number: 27
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)I: I4 Branch 30 IFNE L747 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)I: I26 Branch 31 IFLE L752 - true
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)I: I32 Branch 32 IFNE L752 - false
   */

	@Test(timeout=300000)
  public void test27()  throws Throwable  {
      Controller controller0 = new Controller("n(", (-132), (-132));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "n(", "n(", (-132), true, (-132), (-132), (long) (-132), (-132), (AbstractBlobFilter) blobEscapedFilter0);
      ResultCacheDatabase resultCacheDatabase0 = new ResultCacheDatabase((-132), (-132));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb1DistributedRequestManager rAIDb1DistributedRequestManager0 = new RAIDb1DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) resultCacheDatabase0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (long) (-132), (long) (-132), (long) (-132));
      AlterRequest alterRequest0 = new AlterRequest("org.apache.xerces.parsers.AbstractDOMParser", true, (int) (byte)10, "org.apache.xerces.parsers.AbstractDOMParser");
      // Undeclared exception!
      try { 
        rAIDb1DistributedRequestManager0.execWriteRequest(alterRequest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.distributed.RAIDb1DistributedRequestManager", e);
      }
  }

  //Test case number: 28
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execWriteRequestWithKeys(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I4 Branch 33 IFNE L765 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execWriteRequestWithKeys(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I26 Branch 34 IFLE L770 - true
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execWriteRequestWithKeys(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I32 Branch 35 IFNE L770 - false
   */

	@Test(timeout=300000)
  public void test28()  throws Throwable  {
      Controller controller0 = new Controller("(", (-206), (-206));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-206), false, (-206), (-206), (long) (-206), (-206), (AbstractBlobFilter) blobEscapedFilter0);
      ResultCacheDatabase resultCacheDatabase0 = new ResultCacheDatabase((-206), (-206));
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb1DistributedRequestManager rAIDb1DistributedRequestManager0 = new RAIDb1DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) resultCacheDatabase0, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (long) (-206), (long) (-206), (long) (-206));
      DropRequest dropRequest0 = new DropRequest("(", false, (-206), "(");
      // Undeclared exception!
      try { 
        rAIDb1DistributedRequestManager0.execWriteRequestWithKeys(dropRequest0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.distributed.RAIDb1DistributedRequestManager", e);
      }
  }

  //Test case number: 29
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execReadStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I4 Branch 36 IFEQ L784 - true
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execReadStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I19 Branch 37 IFNE L796 - false
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execReadStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I41 Branch 38 IFLE L801 - true
   * Goal 6. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execReadStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I47 Branch 39 IFNE L801 - false
   */

	@Test(timeout=300000)
  public void test29()  throws Throwable  {
      Controller controller0 = new Controller("", (-2147450871), (-2147450871));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "", "", (-2147450871), true, (-2147450871), (-2147450871), (long) (-2147450871), (-2147450871), (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb2DistributedRequestManager rAIDb2DistributedRequestManager0 = new RAIDb2DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) null, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (long) (-2147450871), (long) (-2147450871), (long) (-2147450871));
      StoredProcedure storedProcedure0 = new StoredProcedure("", true, (-2147450871), "", true);
      // Undeclared exception!
      try { 
        rAIDb2DistributedRequestManager0.execReadStoredProcedure(storedProcedure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.distributed.RAIDb2DistributedRequestManager", e);
      }
  }

  //Test case number: 30
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execReadStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I4 Branch 36 IFEQ L784 - true
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execReadStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: I19 Branch 37 IFNE L796 - true
   */

	@Test(timeout=300000)
  public void test30()  throws Throwable  {
      Controller controller0 = new Controller("", (-2147450871), (-2147450871));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "", "", (-2147450871), true, (-2147450871), (-2147450871), (long) (-2147450871), (-2147450871), (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb2DistributedRequestManager rAIDb2DistributedRequestManager0 = new RAIDb2DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) null, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (long) (-2147450871), (long) (-2147450871), (long) (-2147450871));
      StoredProcedure storedProcedure0 = new StoredProcedure("", true, (-2147450871), "", true);
      storedProcedure0.setIsAutoCommit(true);
      // Undeclared exception!
      try { 
        rAIDb2DistributedRequestManager0.execReadStoredProcedure(storedProcedure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.distributed.RAIDb2DistributedRequestManager", e);
      }
  }

  //Test case number: 31
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execWriteStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)I: I4 Branch 40 IFNE L813 - true
   */

	@Test(timeout=300000)
  public void test31()  throws Throwable  {
      Controller controller0 = new Controller("(", (-213), (-213));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "(", "(", (-213), true, (-213), (-213), (long) (-213), (-213), (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb2DistributedRequestManager rAIDb2DistributedRequestManager0 = new RAIDb2DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) null, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, 65535L, 65535L, 65535L);
      StoredProcedure storedProcedure0 = new StoredProcedure("", true, 169, "7`0tR1(p'Bm5=N", true);
      storedProcedure0.setIsAutoCommit(true);
      // Undeclared exception!
      try { 
        rAIDb2DistributedRequestManager0.execWriteStoredProcedure(storedProcedure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.distributed.RAIDb2DistributedRequestManager", e);
      }
  }

  //Test case number: 32
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/DistributedVirtualDatabase;Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/cache/result/AbstractResultCache;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;JJJ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.setScheduler(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;)V: I10 Branch 3 IFNONNULL L205 - true
   * Goal 3. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execWriteStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)I: I4 Branch 40 IFNE L813 - false
   * Goal 4. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execWriteStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)I: I26 Branch 41 IFLE L818 - true
   * Goal 5. org.objectweb.cjdbc.controller.requestmanager.distributed.DistributedRequestManager.execWriteStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)I: I32 Branch 42 IFNE L818 - false
   */

	@Test(timeout=300000)
  public void test32()  throws Throwable  {
      Controller controller0 = new Controller("J(", (-213), (-213));
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      DistributedVirtualDatabase distributedVirtualDatabase0 = new DistributedVirtualDatabase(controller0, "J(", "J(", (-213), false, (-213), (-213), (long) (-213), (-213), (AbstractBlobFilter) blobEscapedFilter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_LPRF rAIDb1_LPRF0 = new RAIDb1_LPRF((VirtualDatabase) distributedVirtualDatabase0, waitForCompletionPolicy0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler((VirtualDatabase) distributedVirtualDatabase0);
      RAIDb2DistributedRequestManager rAIDb2DistributedRequestManager0 = new RAIDb2DistributedRequestManager(distributedVirtualDatabase0, (AbstractScheduler) rAIDb1PassThroughScheduler0, (AbstractResultCache) null, (AbstractLoadBalancer) rAIDb1_LPRF0, (RecoveryLog) null, (long) (-213), (long) (-213), (long) (-213));
      StoredProcedure storedProcedure0 = new StoredProcedure("", false, (-213), "", false);
      // Undeclared exception!
      try { 
        rAIDb2DistributedRequestManager0.execWriteStoredProcedure(storedProcedure0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.requestmanager.distributed.RAIDb2DistributedRequestManager", e);
      }
  }
}
