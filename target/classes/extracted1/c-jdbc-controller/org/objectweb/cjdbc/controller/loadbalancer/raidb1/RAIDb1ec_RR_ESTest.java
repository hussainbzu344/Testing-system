/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 20:41:20 GMT 2016
 */

package org.objectweb.cjdbc.controller.loadbalancer.raidb1;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.exceptions.NotImplementedException;
import org.objectweb.cjdbc.common.sql.SelectRequest;
import org.objectweb.cjdbc.common.sql.StoredProcedure;
import org.objectweb.cjdbc.common.sql.filters.AbstractBlobFilter;
import org.objectweb.cjdbc.common.sql.filters.Base64Filter;
import org.objectweb.cjdbc.common.sql.filters.BlobEscapedFilter;
import org.objectweb.cjdbc.controller.cache.metadata.MetadataCache;
import org.objectweb.cjdbc.controller.core.Controller;
import org.objectweb.cjdbc.controller.loadbalancer.policies.WaitForCompletionPolicy;
import org.objectweb.cjdbc.controller.loadbalancer.policies.errorchecking.ErrorCheckingAll;
import org.objectweb.cjdbc.controller.loadbalancer.policies.errorchecking.ErrorCheckingPolicy;
import org.objectweb.cjdbc.controller.loadbalancer.policies.errorchecking.ErrorCheckingRoundRobin;
import org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_RR;
import org.objectweb.cjdbc.controller.virtualdatabase.VirtualDatabase;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RAIDb1ec_RR_ESTest extends RAIDb1ec_RR_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_RR.getRaidb1Xml()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_RR.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/errorchecking/ErrorCheckingPolicy;I)V: root-Branch
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      Controller controller0 = new Controller("", (-2049), 0);
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", 0, false, (-2049), 0, (long) (-2049), (-2049), (AbstractBlobFilter) base64Filter0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      ErrorCheckingAll errorCheckingAll0 = new ErrorCheckingAll();
      RAIDb1ec_RR rAIDb1ec_RR0 = new RAIDb1ec_RR(virtualDatabase0, waitForCompletionPolicy0, (ErrorCheckingPolicy) errorCheckingAll0, 0);
      String string0 = rAIDb1ec_RR0.getRaidb1Xml();
      assertEquals("<RAIDb-1ec-RoundRobin/>", string0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_RR.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/errorchecking/ErrorCheckingPolicy;I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_RR.execReadRequest(Lorg/objectweb/cjdbc/common/sql/SelectRequest;Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: root-Branch
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      Controller controller0 = new Controller("RAIDb-1 Error Checking with Round-Robin Request load balancer (", 2689, 8233);
      BlobEscapedFilter blobEscapedFilter0 = new BlobEscapedFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "snr{Gl", 799, true, 2689, 116, 812L, 1, (AbstractBlobFilter) blobEscapedFilter0);
      RAIDb1ec_RR rAIDb1ec_RR0 = new RAIDb1ec_RR(virtualDatabase0, (WaitForCompletionPolicy) null, (ErrorCheckingPolicy) null, 4415);
      SelectRequest selectRequest0 = new SelectRequest("RAIDb-1 Error Checking with Round-Robin Request load balancer (", true, 8233, "RAIDb-1 Error Checking with Round-Robin Request load balancer (");
      try { 
        rAIDb1ec_RR0.execReadRequest(selectRequest0, (MetadataCache) null);
        fail("Expecting exception: NotImplementedException");
      
      } catch(NotImplementedException e) {
         //
         // org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_RR:execReadRequest not implemented
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_RR", e);
      }
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_RR.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/errorchecking/ErrorCheckingPolicy;I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_RR.execReadOnlyReadStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;Lorg/objectweb/cjdbc/controller/cache/metadata/MetadataCache;)Lorg/objectweb/cjdbc/controller/virtualdatabase/ControllerResultSet;: root-Branch
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
      Controller controller0 = new Controller((String) null, 1, 1);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, (String) null, 1, true, 1, 0, (long) 1, 1, (AbstractBlobFilter) null);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      ErrorCheckingRoundRobin errorCheckingRoundRobin0 = new ErrorCheckingRoundRobin(31);
      RAIDb1ec_RR rAIDb1ec_RR0 = new RAIDb1ec_RR(virtualDatabase0, waitForCompletionPolicy0, (ErrorCheckingPolicy) errorCheckingRoundRobin0, 77);
      StoredProcedure storedProcedure0 = new StoredProcedure((String) null, true, 50000, (String) null, true);
      MetadataCache metadataCache0 = new MetadataCache(77, 1);
      try { 
        rAIDb1ec_RR0.execReadOnlyReadStoredProcedure(storedProcedure0, metadataCache0);
        fail("Expecting exception: NotImplementedException");
      
      } catch(NotImplementedException e) {
         //
         // org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_RR:execReadStoredProcedure not implemented
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_RR", e);
      }
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_RR.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/WaitForCompletionPolicy;Lorg/objectweb/cjdbc/controller/loadbalancer/policies/errorchecking/ErrorCheckingPolicy;I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1ec_RR.getInformation()Ljava/lang/String;: I10 Branch 1 IFNE L125 - false
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
      Controller controller0 = new Controller((String) null, 1, 1);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, (String) null, 1, true, 1, 0, (long) 1, 1, (AbstractBlobFilter) null);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      ErrorCheckingRoundRobin errorCheckingRoundRobin0 = new ErrorCheckingRoundRobin(31);
      RAIDb1ec_RR rAIDb1ec_RR0 = new RAIDb1ec_RR(virtualDatabase0, waitForCompletionPolicy0, (ErrorCheckingPolicy) errorCheckingRoundRobin0, 77);
      String string0 = rAIDb1ec_RR0.getInformation();
      assertEquals("RAIDb-1 Error Checking with Round-Robin Request load balancer: !!!Warning!!! No backend nodes found\n", string0);
  }
}
