/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 21:05:12 GMT 2016
 */

package org.objectweb.cjdbc.controller.loadbalancer.policies.createtable;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.controller.backend.DatabaseBackend;
import org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableAll;
import org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRandom;
import org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRoundRobin;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CreateTableRule_ESTest extends CreateTableRule_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getPolicy()I: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.<init>(I)V: root-Branch
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      CreateTableRoundRobin createTableRoundRobin0 = new CreateTableRoundRobin();
      int int0 = createTableRoundRobin0.getPolicy();
      assertEquals(0, createTableRoundRobin0.getNumberOfNodes());
      assertEquals(1, int0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.setPolicy(I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.<init>(I)V: root-Branch
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      CreateTableRandom createTableRandom0 = new CreateTableRandom();
      createTableRandom0.setPolicy((-949));
      assertEquals(-949, createTableRandom0.getPolicy());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getTableName()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.<init>(I)V: root-Branch
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      CreateTableRoundRobin createTableRoundRobin0 = new CreateTableRoundRobin();
      createTableRoundRobin0.getTableName();
      assertEquals(1, createTableRoundRobin0.getPolicy());
      assertEquals(0, createTableRoundRobin0.getNumberOfNodes());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.setTableName(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.<init>(I)V: root-Branch
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      CreateTableRoundRobin createTableRoundRobin0 = new CreateTableRoundRobin();
      createTableRoundRobin0.setTableName((String) null);
      assertEquals(1, createTableRoundRobin0.getPolicy());
      assertEquals(0, createTableRoundRobin0.getNumberOfNodes());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.<init>(I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getNumberOfNodes()I: root-Branch
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      CreateTableRoundRobin createTableRoundRobin0 = new CreateTableRoundRobin();
      int int0 = createTableRoundRobin0.getNumberOfNodes();
      assertEquals(1, createTableRoundRobin0.getPolicy());
      assertEquals(0, int0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.<init>(ILjava/util/ArrayList;)V: I17 Branch 1 IFNONNULL L75 - false
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      CreateTableRandom createTableRandom0 = null;
      try {
        createTableRandom0 = new CreateTableRandom((ArrayList) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Null backendList in CreateTableRule constructor
         //
         assertThrownBy("org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule", e);
      }
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.<init>(I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.isDefaultRule()Z: I4 Branch 2 IFNONNULL L170 - true
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      CreateTableRoundRobin createTableRoundRobin0 = new CreateTableRoundRobin();
      createTableRoundRobin0.tableName = "";
      boolean boolean0 = createTableRoundRobin0.isDefaultRule();
      assertFalse(boolean0);
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.<init>(I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.isDefaultRule()Z: I4 Branch 2 IFNONNULL L170 - false
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      CreateTableAll createTableAll0 = new CreateTableAll();
      boolean boolean0 = createTableAll0.isDefaultRule();
      assertEquals(2, createTableAll0.getPolicy());
      assertEquals(0, createTableAll0.getNumberOfNodes());
      assertTrue(boolean0);
  }

  //Test case number: 8
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.addBackendName(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.<init>(I)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I10 Branch 3 IFLE L188 - false
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I25 Branch 4 IF_ICMPGE L191 - true
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I25 Branch 4 IF_ICMPGE L191 - false
   * Goal 6. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I37 Branch 5 IFEQ L194 - true
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      ArrayList<DatabaseBackend> arrayList0 = new ArrayList<DatabaseBackend>();
      DatabaseBackend databaseBackend0 = new DatabaseBackend("Connection.getColumnPrivileges", "Connection.getColumnPrivileges", "Connection.getColumnPrivileges", "Connection.getColumnPrivileges", "Connection.getColumnPrivileges", true, "Connection.getColumnPrivileges");
      arrayList0.add(databaseBackend0);
      CreateTableAll createTableAll0 = new CreateTableAll();
      createTableAll0.addBackendName("Connection.getColumnPrivileges");
      ArrayList arrayList1 = createTableAll0.getBackends(arrayList0);
      assertEquals(0, createTableAll0.getNumberOfNodes());
      assertEquals(2, createTableAll0.getPolicy());
      assertTrue(arrayList1.isEmpty());
  }

  //Test case number: 9
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.addBackendName(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.<init>(I)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I10 Branch 3 IFLE L188 - false
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I25 Branch 4 IF_ICMPGE L191 - true
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I25 Branch 4 IF_ICMPGE L191 - false
   * Goal 6. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I37 Branch 5 IFEQ L194 - false
   * Goal 7. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I43 Branch 6 IFLE L194 - false
   * Goal 8. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I49 Branch 7 IFEQ L194 - false
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      ArrayList<DatabaseBackend> arrayList0 = new ArrayList<DatabaseBackend>();
      DatabaseBackend databaseBackend0 = new DatabaseBackend("Connection.getColumnPrivileges", "Connection.getColumnPrivileges", "Connection.getColumnPrivileges", "Connection.getColumnPrivileges", "Connection.getColumnPrivileges", true, "Connection.getColumnPrivileges");
      databaseBackend0.enableWrite();
      arrayList0.add(databaseBackend0);
      CreateTableAll createTableAll0 = new CreateTableAll();
      createTableAll0.addBackendName("Connection.getColumnPrivileges");
      createTableAll0.getBackends(arrayList0);
      assertEquals(1, arrayList0.size());
  }

  //Test case number: 10
  /*
   * 7 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.<init>(ILjava/util/ArrayList;)V: I17 Branch 1 IFNONNULL L75 - true
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I10 Branch 3 IFLE L188 - false
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I25 Branch 4 IF_ICMPGE L191 - true
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I25 Branch 4 IF_ICMPGE L191 - false
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I37 Branch 5 IFEQ L194 - false
   * Goal 6. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I43 Branch 6 IFLE L194 - true
   * Goal 7. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I49 Branch 7 IFEQ L194 - true
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      ArrayList<DatabaseBackend> arrayList0 = new ArrayList<DatabaseBackend>();
      DatabaseBackend databaseBackend0 = new DatabaseBackend("Connection.getColumnPrivileges", "Connection.getColumnPrivileges", "Connection.getColumnPrivileges", "Connection.getColumnPrivileges", "Connection.getColumnPrivileges", true, "Connection.getColumnPrivileges");
      databaseBackend0.enableWrite();
      arrayList0.add(databaseBackend0);
      CreateTableAll createTableAll0 = new CreateTableAll(arrayList0);
      ArrayList arrayList1 = createTableAll0.getBackends(arrayList0);
      assertEquals(0, createTableAll0.getNumberOfNodes());
      assertEquals(0, arrayList1.size());
      assertEquals(2, createTableAll0.getPolicy());
  }

  //Test case number: 11
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.setNumberOfNodes(I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.<init>(I)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I10 Branch 3 IFLE L188 - true
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I76 Branch 8 IF_ICMPGE L201 - true
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I76 Branch 8 IF_ICMPGE L201 - false
   * Goal 6. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I88 Branch 9 IFEQ L204 - true
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      ArrayList<DatabaseBackend> arrayList0 = new ArrayList<DatabaseBackend>();
      CreateTableRoundRobin createTableRoundRobin0 = new CreateTableRoundRobin();
      DatabaseBackend databaseBackend0 = new DatabaseBackend("Connection.getColumnPrivileges", "l8_Fc\"Y", "D}<5,pu RfC<n]e|:PE", "l8_Fc\"Y", "Connection.getColumnPrivileges", true, "");
      arrayList0.add(databaseBackend0);
      createTableRoundRobin0.setNumberOfNodes((-378));
      // Undeclared exception!
      try { 
        createTableRoundRobin0.getBackends(arrayList0);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal Capacity: -378
         //
         assertThrownBy("java.util.ArrayList", e);
      }
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.<init>(I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I10 Branch 3 IFLE L188 - true
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I76 Branch 8 IF_ICMPGE L201 - true
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I76 Branch 8 IF_ICMPGE L201 - false
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackends(Ljava/util/ArrayList;)Ljava/util/ArrayList;: I88 Branch 9 IFEQ L204 - false
   */

	@Test(timeout=300000)
  public void test12()  throws Throwable  {
      ArrayList<DatabaseBackend> arrayList0 = new ArrayList<DatabaseBackend>();
      DatabaseBackend databaseBackend0 = new DatabaseBackend("Connection.getColumnPrivileges", "Connection.getColumnPrivileges", "Connection.getColumnPrivileges", "Connection.getColumnPrivileges", "Connection.getColumnPrivileges", true, "Connection.getColumnPrivileges");
      databaseBackend0.enableWrite();
      arrayList0.add(databaseBackend0);
      CreateTableAll createTableAll0 = new CreateTableAll();
      ArrayList arrayList1 = createTableAll0.getBackends(arrayList0);
      assertEquals(1, arrayList0.size());
      assertFalse(arrayList1.isEmpty());
  }

  //Test case number: 13
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.addBackendName(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getBackendList()Ljava/util/ArrayList;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.<init>(I)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getXml()Ljava/lang/String;: I58 Branch 10 IF_ICMPGE L235 - true
   * Goal 5. org.objectweb.cjdbc.controller.loadbalancer.policies.createtable.CreateTableRule.getXml()Ljava/lang/String;: I58 Branch 10 IF_ICMPGE L235 - false
   */

	@Test(timeout=300000)
  public void test13()  throws Throwable  {
      CreateTableRoundRobin createTableRoundRobin0 = new CreateTableRoundRobin();
      createTableRoundRobin0.addBackendName("7");
      String string0 = createTableRoundRobin0.getXml();
      assertEquals("<CreateTable tableName=\"null\" policy=\"roundRobin\" numberOfNodes=\"0\"><BackendName name=\"7\"/></CreateTable>", string0);
  }
}
