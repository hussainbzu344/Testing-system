/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 19 02:14:51 GMT 2016
 */

package org.objectweb.cjdbc.controller.scheduler.raidb1;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.sql.AlterRequest;
import org.objectweb.cjdbc.common.sql.DropRequest;
import org.objectweb.cjdbc.common.sql.SelectRequest;
import org.objectweb.cjdbc.common.sql.StoredProcedure;
import org.objectweb.cjdbc.common.sql.filters.AbstractBlobFilter;
import org.objectweb.cjdbc.common.sql.filters.HexaBlobFilter;
import org.objectweb.cjdbc.common.sql.filters.NoneBlobFilter;
import org.objectweb.cjdbc.controller.core.Controller;
import org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler;
import org.objectweb.cjdbc.controller.virtualdatabase.VirtualDatabase;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RAIDb1PassThroughScheduler_ESTest extends RAIDb1PassThroughScheduler_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.getXmlImpl()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      Controller controller0 = new Controller("", (-289), (-289));
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "UYTU;P|/!c`l6-", (-2144), true, Integer.MAX_VALUE, (-1), 0L, (-1), (AbstractBlobFilter) noneBlobFilter0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler(virtualDatabase0);
      String string0 = rAIDb1PassThroughScheduler0.getXmlImpl();
      assertEquals("<RAIDb-1Scheduler level=\"passThrough\"/>", string0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.scheduleReadRequest(Lorg/objectweb/cjdbc/common/sql/SelectRequest;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      Controller controller0 = new Controller("I=m%m", 0, 0);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "eU#", 0, false, 0, 0, 322L, 1776, (AbstractBlobFilter) null);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler(virtualDatabase0);
      SelectRequest selectRequest0 = new SelectRequest("4y0n'R", false, 393, "m]1Ft4,kvn!7,s4");
      rAIDb1PassThroughScheduler0.scheduleReadRequest(selectRequest0);
      assertEquals(0L, selectRequest0.getId());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.readCompletedNotify(Lorg/objectweb/cjdbc/common/sql/SelectRequest;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      Controller controller0 = new Controller("<RAIDb-1Scheduler level=\"passThrough\"/>", 69, (-336));
      NoneBlobFilter noneBlobFilter0 = (NoneBlobFilter)AbstractBlobFilter.getBlobFilterInstance("Y]>B");
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", 1002, false, 116, 69, (long) 69, 116, (AbstractBlobFilter) noneBlobFilter0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler(virtualDatabase0);
      rAIDb1PassThroughScheduler0.readCompletedNotify((SelectRequest) null);
      assertEquals(0, rAIDb1PassThroughScheduler0.getNumberRead());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.notifyStoredProcedureCompleted(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      Controller controller0 = new Controller("", 0, 0);
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", 0, true, (-1), 0, 0L, (-824), (AbstractBlobFilter) null);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler(virtualDatabase0);
      StoredProcedure storedProcedure0 = new StoredProcedure("SerialDate.getFollowingDayOfWeek(...): invalid day-of-the-week code.", true, (-1499), "", true);
      rAIDb1PassThroughScheduler0.notifyStoredProcedureCompleted(storedProcedure0);
      assertNull(storedProcedure0.getSqlSkeleton());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.notifyWriteCompleted(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      Controller controller0 = new Controller("No BackendWorkerThread to recover, you should have called RecoveryLog.startRecovery()", 0, (-1));
      NoneBlobFilter noneBlobFilter0 = new NoneBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", 0, true, (-1), (-1), (long) (-1), (-1), (AbstractBlobFilter) noneBlobFilter0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler(virtualDatabase0);
      DropRequest dropRequest0 = new DropRequest("No BackendWorkerThread to recover, you should have called RecoveryLog.startRecovery()", true, (-576), "w~1a!DhW2 L_6fM)ha{");
      rAIDb1PassThroughScheduler0.notifyWriteCompleted(dropRequest0);
      assertEquals("<RAIDb-1Scheduler level=\"passThrough\"/>", rAIDb1PassThroughScheduler0.getXmlImpl());
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.scheduleNonSuspendedWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)V: I15 Branch 2 IFNULL L117 - true
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      Controller controller0 = new Controller("1", 1086, 1086);
      HexaBlobFilter hexaBlobFilter0 = new HexaBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "1", 1086, true, 1086, 1086, (long) 1086, 1086, (AbstractBlobFilter) hexaBlobFilter0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler(virtualDatabase0);
      AlterRequest alterRequest0 = new AlterRequest("1", true, 1086, "1");
      rAIDb1PassThroughScheduler0.scheduleNonSuspendedWriteRequest(alterRequest0);
      assertEquals(0L, alterRequest0.getId());
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.scheduleNonSuspendedStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)V: I15 Branch 3 IFNULL L140 - true
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      Controller controller0 = new Controller("1", 1086, 1086);
      HexaBlobFilter hexaBlobFilter0 = new HexaBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "1", 1086, true, 1086, 1086, (long) 1086, 1086, (AbstractBlobFilter) hexaBlobFilter0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler(virtualDatabase0);
      StoredProcedure storedProcedure0 = new StoredProcedure("1", true, 1086, "1", true);
      rAIDb1PassThroughScheduler0.scheduleNonSuspendedStoredProcedure(storedProcedure0);
      assertEquals(0L, storedProcedure0.getId());
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.commitTransaction(J)V: I4 Branch 4 IFNULL L165 - true
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      Controller controller0 = new Controller("1", 1086, 1086);
      HexaBlobFilter hexaBlobFilter0 = new HexaBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "1", 1086, true, 1086, 1086, (long) 1086, 1086, (AbstractBlobFilter) hexaBlobFilter0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler(virtualDatabase0);
      rAIDb1PassThroughScheduler0.commitTransaction(1086);
      assertEquals(0, rAIDb1PassThroughScheduler0.getNumberWrite());
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.rollbackTransaction(J)V: I4 Branch 5 IFNULL L179 - true
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      Controller controller0 = new Controller("1", 1086, 1086);
      HexaBlobFilter hexaBlobFilter0 = new HexaBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "1", 1086, true, 1086, 1086, (long) 1086, 1086, (AbstractBlobFilter) hexaBlobFilter0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler(virtualDatabase0);
      rAIDb1PassThroughScheduler0.rollbackTransaction(1086);
      assertEquals(0, rAIDb1PassThroughScheduler0.getPendingWrites());
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.rollbackTransaction(JLjava/lang/String;)V: I4 Branch 6 IFNULL L195 - true
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      Controller controller0 = new Controller("1", 1086, 1086);
      HexaBlobFilter hexaBlobFilter0 = new HexaBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "1", 1086, true, 1086, 1086, (long) 1086, 1086, (AbstractBlobFilter) hexaBlobFilter0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler(virtualDatabase0);
      rAIDb1PassThroughScheduler0.rollbackTransaction(1086, "1");
      assertEquals(0, rAIDb1PassThroughScheduler0.getParsingGranularity());
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.setSavepointTransaction(JLjava/lang/String;)V: I4 Branch 7 IFNULL L211 - true
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      Controller controller0 = new Controller("1", 1086, 1086);
      HexaBlobFilter hexaBlobFilter0 = new HexaBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "1", 1086, true, 1086, 1086, (long) 1086, 1086, (AbstractBlobFilter) hexaBlobFilter0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler(virtualDatabase0);
      rAIDb1PassThroughScheduler0.setSavepointTransaction(1086, "1");
      assertFalse(rAIDb1PassThroughScheduler0.isSuspendedTransactions());
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.<init>(Lorg/objectweb/cjdbc/controller/virtualdatabase/VirtualDatabase;)V: I20 Branch 1 IFEQ L84 - true
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler.releaseSavepointTransaction(JLjava/lang/String;)V: I4 Branch 8 IFNULL L227 - true
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      Controller controller0 = new Controller("1", 1086, 1086);
      HexaBlobFilter hexaBlobFilter0 = new HexaBlobFilter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "1", 1086, true, 1086, 1086, (long) 1086, 1086, (AbstractBlobFilter) hexaBlobFilter0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler(virtualDatabase0);
      rAIDb1PassThroughScheduler0.releaseSavepointTransaction(1086, "1");
      assertFalse(rAIDb1PassThroughScheduler0.isSuspendedWrites());
  }
}
