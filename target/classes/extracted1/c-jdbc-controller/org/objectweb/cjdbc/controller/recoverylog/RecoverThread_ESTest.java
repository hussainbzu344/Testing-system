/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 20:01:51 GMT 2016
 */

package org.objectweb.cjdbc.controller.recoverylog;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.sql.filters.AbstractBlobFilter;
import org.objectweb.cjdbc.common.sql.filters.Base64Filter;
import org.objectweb.cjdbc.controller.backend.DatabaseBackend;
import org.objectweb.cjdbc.controller.core.Controller;
import org.objectweb.cjdbc.controller.loadbalancer.AbstractLoadBalancer;
import org.objectweb.cjdbc.controller.loadbalancer.policies.WaitForCompletionPolicy;
import org.objectweb.cjdbc.controller.loadbalancer.raidb1.RAIDb1_WRR;
import org.objectweb.cjdbc.controller.recoverylog.RecoverThread;
import org.objectweb.cjdbc.controller.recoverylog.RecoveryLog;
import org.objectweb.cjdbc.controller.scheduler.AbstractScheduler;
import org.objectweb.cjdbc.controller.scheduler.raidb1.RAIDb1PassThroughScheduler;
import org.objectweb.cjdbc.controller.virtualdatabase.VirtualDatabase;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RecoverThread_ESTest extends RecoverThread_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 1 covered goal:
   * Goal 1. org.objectweb.cjdbc.controller.recoverylog.RecoverThread.<init>(Lorg/objectweb/cjdbc/controller/scheduler/AbstractScheduler;Lorg/objectweb/cjdbc/controller/recoverylog/RecoveryLog;Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Lorg/objectweb/cjdbc/controller/loadbalancer/AbstractLoadBalancer;Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      Controller controller0 = new Controller("", (-3636), 2700);
      Base64Filter base64Filter0 = new Base64Filter();
      VirtualDatabase virtualDatabase0 = new VirtualDatabase(controller0, "", 2, true, 3690, (-3636), 1L, 616, (AbstractBlobFilter) base64Filter0);
      RAIDb1PassThroughScheduler rAIDb1PassThroughScheduler0 = new RAIDb1PassThroughScheduler(virtualDatabase0);
      WaitForCompletionPolicy waitForCompletionPolicy0 = new WaitForCompletionPolicy();
      RAIDb1_WRR rAIDb1_WRR0 = new RAIDb1_WRR(virtualDatabase0, waitForCompletionPolicy0);
      RecoverThread recoverThread0 = null;
      try {
        recoverThread0 = new RecoverThread((AbstractScheduler) rAIDb1PassThroughScheduler0, (RecoveryLog) null, (DatabaseBackend) null, (AbstractLoadBalancer) rAIDb1_WRR0, "");
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.recoverylog.RecoverThread", e);
      }
  }
}
