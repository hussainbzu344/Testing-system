/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 19:51:24 GMT 2016
 */

package org.objectweb.cjdbc.controller.connection;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.sql.Connection;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.controller.connection.SimpleConnectionManager;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SimpleConnectionManager_ESTest extends SimpleConnectionManager_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.deleteConnection(Ljava/sql/Connection;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      SimpleConnectionManager simpleConnectionManager0 = new SimpleConnectionManager("", "", "", "", "", "!ZbYZ09o");
      simpleConnectionManager0.deleteConnection((Connection) null);
      assertEquals(0, simpleConnectionManager0.getCurrentNumberOfConnections());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.clone()Ljava/lang/Object;: root-Branch
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      SimpleConnectionManager simpleConnectionManager0 = new SimpleConnectionManager("K$J(Xe<d2U7yS$OE}", "{g)EMr", "", "K$J(Xe<d2U7yS$OE}", "", "");
      SimpleConnectionManager simpleConnectionManager1 = (SimpleConnectionManager)simpleConnectionManager0.clone();
      assertEquals(0, simpleConnectionManager1.getCurrentNumberOfConnections());
      assertEquals("K$J(Xe<d2U7yS$OE}", simpleConnectionManager1.getPassword());
      assertEquals("", simpleConnectionManager1.getDriverClassName());
      assertEquals("", simpleConnectionManager1.getLogin());
      assertEquals("", simpleConnectionManager1.getDriverPath());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.getCurrentNumberOfConnections()I: root-Branch
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
      SimpleConnectionManager simpleConnectionManager0 = new SimpleConnectionManager(";s1S:`_T^lJx.B", ";s1S:`_T^lJx.B", ";s1S:`_T^lJx.B", "", "Yo K~Ou]{%=:", "xB5|%5y/a(");
      int int0 = simpleConnectionManager0.getCurrentNumberOfConnections();
      assertEquals(0, int0);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.getXmlImpl()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
      SimpleConnectionManager simpleConnectionManager0 = new SimpleConnectionManager("L!{vr[`E3\"{b#", "", "", "", ":Pd%SFx", "");
      String string0 = simpleConnectionManager0.getXml();
      assertEquals("<ConnectionManager vLogin=\"null\"  rLogin=\"\"  rPassword=\"\"  ><SimpleConnectionManager/></ConnectionManager>", string0);
      assertEquals(0, simpleConnectionManager0.getCurrentNumberOfConnections());
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.removeConnection()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.releaseConnection(Ljava/sql/Connection;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test4()  throws Throwable  {
      SimpleConnectionManager simpleConnectionManager0 = new SimpleConnectionManager("L!{vr[`E3\"{b#", "", "", "", ":Pd%SFx", "");
      // Undeclared exception!
      try { 
        simpleConnectionManager0.releaseConnection((Connection) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.connection.SimpleConnectionManager", e);
      }
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.finalizeConnections()V: root-Branch
   */

	@Test(timeout=300000)
  public void test5()  throws Throwable  {
      SimpleConnectionManager simpleConnectionManager0 = new SimpleConnectionManager(">;xrJhVAM2g(CM|Q'z", "", "", "TimeSeries.add(...): you are attempting to add an observation for ", "", "TimeSeries.add(...): you are attempting to add an observation for ");
      simpleConnectionManager0.finalizeConnections();
      assertFalse(simpleConnectionManager0.isInitialized());
      assertEquals(0, simpleConnectionManager0.getCurrentNumberOfConnections());
  }

  //Test case number: 6
  /*
   * 7 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.initializeConnections()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.removeConnection()V: root-Branch
   * Goal 4. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.addConnection()V: root-Branch
   * Goal 5. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.getConnection()Ljava/sql/Connection;: I4 Branch 1 IFNE L101 - true
   * Goal 6. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.getConnection()Ljava/sql/Connection;: I26 Branch 2 IFNONNULL L110 - false
   * Goal 7. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.getConnection()Ljava/sql/Connection;: I48 Branch 3 IFNE L114 - false
   */

	@Test(timeout=300000)
  public void test6()  throws Throwable  {
      SimpleConnectionManager simpleConnectionManager0 = new SimpleConnectionManager("DM  mhA,]lLe/", "DM  mhA,]lLe/", "DM  mhA,]lLe/", "DM  mhA,]lLe/", "DM  mhA,]lLe/", "DM  mhA,]lLe/");
      simpleConnectionManager0.initializeConnections();
      try { 
        simpleConnectionManager0.getConnection();
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.connection.SimpleConnectionManager", e);
      }
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.connection.SimpleConnectionManager.getConnection()Ljava/sql/Connection;: I4 Branch 1 IFNE L101 - false
   */

	@Test(timeout=300000)
  public void test7()  throws Throwable  {
      SimpleConnectionManager simpleConnectionManager0 = new SimpleConnectionManager("L!{vr[`E3\"{b#", "", "", "", ":Pd%SFx", "");
      simpleConnectionManager0.getConnection(0L);
      assertEquals(0, simpleConnectionManager0.getCurrentNumberOfConnections());
  }
}
