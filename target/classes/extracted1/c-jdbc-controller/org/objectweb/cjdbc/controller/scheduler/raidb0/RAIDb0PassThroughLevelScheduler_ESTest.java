/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 19 02:27:15 GMT 2016
 */

package org.objectweb.cjdbc.controller.scheduler.raidb0;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.sql.DropRequest;
import org.objectweb.cjdbc.common.sql.InsertRequest;
import org.objectweb.cjdbc.common.sql.SelectRequest;
import org.objectweb.cjdbc.common.sql.StoredProcedure;
import org.objectweb.cjdbc.common.sql.schema.DatabaseSchema;
import org.objectweb.cjdbc.controller.requestmanager.TransactionMarkerMetaData;
import org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class RAIDb0PassThroughLevelScheduler_ESTest extends RAIDb0PassThroughLevelScheduler_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.scheduleNonSuspendedWriteRequest(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      RAIDb0PassThroughLevelScheduler rAIDb0PassThroughLevelScheduler0 = new RAIDb0PassThroughLevelScheduler();
      DropRequest dropRequest0 = new DropRequest("8", false, 0, "p:");
      rAIDb0PassThroughLevelScheduler0.scheduleNonSuspendedWriteRequest(dropRequest0);
      assertEquals(0L, dropRequest0.getId());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.notifyStoredProcedureCompleted(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      RAIDb0PassThroughLevelScheduler rAIDb0PassThroughLevelScheduler0 = new RAIDb0PassThroughLevelScheduler();
      StoredProcedure storedProcedure0 = new StoredProcedure("C1EA#A99", false, 1, "<RAIDb-0Scheduler level=\"passThrough\"/>", false);
      rAIDb0PassThroughLevelScheduler0.notifyStoredProcedureCompleted(storedProcedure0);
      assertFalse(storedProcedure0.getEscapeProcessing());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.getXmlImpl()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      RAIDb0PassThroughLevelScheduler rAIDb0PassThroughLevelScheduler0 = new RAIDb0PassThroughLevelScheduler();
      String string0 = rAIDb0PassThroughLevelScheduler0.getXml();
      assertEquals("<RequestScheduler><RAIDb-0Scheduler level=\"passThrough\"/></RequestScheduler>", string0);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.setSavepointTransaction(JLjava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      RAIDb0PassThroughLevelScheduler rAIDb0PassThroughLevelScheduler0 = new RAIDb0PassThroughLevelScheduler();
      TransactionMarkerMetaData transactionMarkerMetaData0 = new TransactionMarkerMetaData(1L, 2410L, "\t");
      rAIDb0PassThroughLevelScheduler0.setSavepoint(transactionMarkerMetaData0, "\t");
      assertEquals(0, rAIDb0PassThroughLevelScheduler0.getRAIDbLevel());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.rollbackTransaction(J)V: root-Branch
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      RAIDb0PassThroughLevelScheduler rAIDb0PassThroughLevelScheduler0 = new RAIDb0PassThroughLevelScheduler();
      rAIDb0PassThroughLevelScheduler0.rollbackTransaction((-1L));
      assertFalse(rAIDb0PassThroughLevelScheduler0.isSuspendedTransactions());
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.notifyWriteCompleted(Lorg/objectweb/cjdbc/common/sql/AbstractWriteRequest;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      RAIDb0PassThroughLevelScheduler rAIDb0PassThroughLevelScheduler0 = new RAIDb0PassThroughLevelScheduler();
      InsertRequest insertRequest0 = new InsertRequest("C1EA#A99", true, 0, "C1EA#A99", true);
      rAIDb0PassThroughLevelScheduler0.notifyWriteCompleted(insertRequest0);
      assertEquals(0, rAIDb0PassThroughLevelScheduler0.getPendingWrites());
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.commitTransaction(J)V: root-Branch
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      RAIDb0PassThroughLevelScheduler rAIDb0PassThroughLevelScheduler0 = new RAIDb0PassThroughLevelScheduler();
      rAIDb0PassThroughLevelScheduler0.commitTransaction((-1L));
      assertEquals(0, rAIDb0PassThroughLevelScheduler0.getParsingGranularity());
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.releaseSavepointTransaction(JLjava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      RAIDb0PassThroughLevelScheduler rAIDb0PassThroughLevelScheduler0 = new RAIDb0PassThroughLevelScheduler();
      rAIDb0PassThroughLevelScheduler0.releaseSavepointTransaction(1L, "C1EA#A99");
      assertFalse(rAIDb0PassThroughLevelScheduler0.isSuspendedTransactions());
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.scheduleReadRequest(Lorg/objectweb/cjdbc/common/sql/SelectRequest;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      RAIDb0PassThroughLevelScheduler rAIDb0PassThroughLevelScheduler0 = new RAIDb0PassThroughLevelScheduler();
      SelectRequest selectRequest0 = new SelectRequest("", false, 0, "", (DatabaseSchema) null, 0, true);
      rAIDb0PassThroughLevelScheduler0.scheduleReadRequest(selectRequest0);
      assertEquals(0L, selectRequest0.getId());
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.rollbackTransaction(JLjava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      RAIDb0PassThroughLevelScheduler rAIDb0PassThroughLevelScheduler0 = new RAIDb0PassThroughLevelScheduler();
      rAIDb0PassThroughLevelScheduler0.rollbackTransaction(1L, (String) null);
      assertFalse(rAIDb0PassThroughLevelScheduler0.isSuspendedWrites());
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.readCompletedNotify(Lorg/objectweb/cjdbc/common/sql/SelectRequest;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      RAIDb0PassThroughLevelScheduler rAIDb0PassThroughLevelScheduler0 = new RAIDb0PassThroughLevelScheduler();
      SelectRequest selectRequest0 = new SelectRequest("", false, (-1), "iVXn8!bU");
      rAIDb0PassThroughLevelScheduler0.readCompletedNotify(selectRequest0);
      assertEquals(0, selectRequest0.getMaxRows());
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.scheduler.raidb0.RAIDb0PassThroughLevelScheduler.scheduleNonSuspendedStoredProcedure(Lorg/objectweb/cjdbc/common/sql/StoredProcedure;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      RAIDb0PassThroughLevelScheduler rAIDb0PassThroughLevelScheduler0 = new RAIDb0PassThroughLevelScheduler();
      StoredProcedure storedProcedure0 = new StoredProcedure("C1EA#A99", false, 1, "<RAIDb-0Scheduler level=\"passThrough\"/>", false);
      rAIDb0PassThroughLevelScheduler0.scheduleNonSuspendedStoredProcedure(storedProcedure0);
      assertEquals(0L, storedProcedure0.getId());
  }
}
