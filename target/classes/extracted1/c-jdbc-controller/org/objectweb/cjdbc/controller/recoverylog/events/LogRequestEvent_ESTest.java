/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 20:23:51 GMT 2016
 */

package org.objectweb.cjdbc.controller.recoverylog.events;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.controller.recoverylog.LoggerThread;
import org.objectweb.cjdbc.controller.recoverylog.RecoveryLog;
import org.objectweb.cjdbc.controller.recoverylog.events.LogEntry;
import org.objectweb.cjdbc.controller.recoverylog.events.LogRequestEvent;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class LogRequestEvent_ESTest extends LogRequestEvent_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.recoverylog.events.LogRequestEvent.<init>(Lorg/objectweb/cjdbc/controller/recoverylog/events/LogEntry;)V: I7 Branch 1 IFNONNULL L50 - true
   * Goal 2. org.objectweb.cjdbc.controller.recoverylog.events.LogRequestEvent.belongToTransaction(J)Z: I7 Branch 2 IFNE L61 - true
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      LogEntry logEntry0 = new LogEntry(417L, "D5z_|RRE>.Ko BWa", "D5z_|RRE>.Ko BWa", 0L, true);
      LogRequestEvent logRequestEvent0 = new LogRequestEvent(logEntry0);
      boolean boolean0 = logRequestEvent0.belongToTransaction(417L);
      assertFalse(boolean0);
  }

  //Test case number: 1
  /*
   * 1 covered goal:
   * Goal 1. org.objectweb.cjdbc.controller.recoverylog.events.LogRequestEvent.<init>(Lorg/objectweb/cjdbc/controller/recoverylog/events/LogEntry;)V: I7 Branch 1 IFNONNULL L50 - false
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      LogRequestEvent logRequestEvent0 = null;
      try {
        logRequestEvent0 = new LogRequestEvent((LogEntry) null);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Invalid null entry in LogRequestEvent constructor
         //
         assertThrownBy("org.objectweb.cjdbc.controller.recoverylog.events.LogRequestEvent", e);
      }
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.recoverylog.events.LogRequestEvent.<init>(Lorg/objectweb/cjdbc/controller/recoverylog/events/LogEntry;)V: I7 Branch 1 IFNONNULL L50 - true
   * Goal 2. org.objectweb.cjdbc.controller.recoverylog.events.LogRequestEvent.belongToTransaction(J)Z: I7 Branch 2 IFNE L61 - false
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
      LogEntry logEntry0 = new LogEntry(4315L, "T=/w=|/FE", "T=/w=|/FE", 4315L, true);
      LogRequestEvent logRequestEvent0 = new LogRequestEvent(logEntry0);
      boolean boolean0 = logRequestEvent0.belongToTransaction(4315L);
      assertTrue(boolean0);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.recoverylog.events.LogRequestEvent.<init>(Lorg/objectweb/cjdbc/controller/recoverylog/events/LogEntry;)V: I7 Branch 1 IFNONNULL L50 - true
   * Goal 2. org.objectweb.cjdbc.controller.recoverylog.events.LogRequestEvent.execute(Lorg/objectweb/cjdbc/controller/recoverylog/LoggerThread;)V: I9 Branch 3 IFEQ L72 - true
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
      LogEntry logEntry0 = new LogEntry(4315L, "T=/w=|/FE", "T=/w=|/FE", 4315L, true);
      LogRequestEvent logRequestEvent0 = new LogRequestEvent(logEntry0);
      LoggerThread loggerThread0 = new LoggerThread((RecoveryLog) null);
      // Undeclared exception!
      try { 
        logRequestEvent0.execute(loggerThread0);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.recoverylog.LoggerThread", e);
      }
  }
}
