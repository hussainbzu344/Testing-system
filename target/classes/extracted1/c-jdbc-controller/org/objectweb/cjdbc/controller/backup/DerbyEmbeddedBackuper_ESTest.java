/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 19 01:13:10 GMT 2016
 */

package org.objectweb.cjdbc.controller.backup;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.net.InetSocketAddress;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.net.MockInetSocketAddress;
import org.evosuite.runtime.mock.java.util.MockDate;
import org.evosuite.runtime.testdata.EvoSuiteFile;
import org.evosuite.runtime.testdata.FileSystemHandling;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.controller.backend.DatabaseBackend;
import org.objectweb.cjdbc.controller.backup.BackupManager;
import org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper;
import org.objectweb.cjdbc.controller.backup.DumpTransferInfo;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class DerbyEmbeddedBackuper_ESTest extends DerbyEmbeddedBackuper_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getOptions()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.<init>()V: root-Branch
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      DerbyEmbeddedBackuper derbyEmbeddedBackuper0 = new DerbyEmbeddedBackuper();
      String string0 = derbyEmbeddedBackuper0.getOptions();
      assertNull(string0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getDumpFormat()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.<init>()V: root-Branch
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      DerbyEmbeddedBackuper derbyEmbeddedBackuper0 = new DerbyEmbeddedBackuper();
      String string0 = derbyEmbeddedBackuper0.getDumpFormat();
      assertEquals("Derby embedded compressed dump", string0);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.fetchDump(Lorg/objectweb/cjdbc/controller/backup/DumpTransferInfo;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.<init>()V: root-Branch
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      DerbyEmbeddedBackuper derbyEmbeddedBackuper0 = new DerbyEmbeddedBackuper();
      InetSocketAddress inetSocketAddress0 = MockInetSocketAddress.createUnresolved("", 486);
      DumpTransferInfo dumpTransferInfo0 = new DumpTransferInfo(inetSocketAddress0, 486);
      derbyEmbeddedBackuper0.fetchDump(dumpTransferInfo0, "\"  ", "\"  ");
      assertEquals(486L, dumpTransferInfo0.getSessionKey());
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getDumpPhysicalPath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.deleteDump(Ljava/lang/String;Ljava/lang/String;)V: I27 Branch 5 IFEQ L161 - true
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      DerbyEmbeddedBackuper derbyEmbeddedBackuper0 = new DerbyEmbeddedBackuper();
      derbyEmbeddedBackuper0.deleteDump("jdbc:derby:jdbc:derby:jdbc:der;y:)/GXoW&<ok<]U(2", "jdbc:derby:jdbc:derby:jdbc:der;y:)/GXoW&<ok<]U(2");
      assertEquals("Derby embedded compressed dump", derbyEmbeddedBackuper0.getDumpFormat());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getBackupManager()Lorg/objectweb/cjdbc/controller/backup/BackupManager;: root-Branch
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      DerbyEmbeddedBackuper derbyEmbeddedBackuper0 = new DerbyEmbeddedBackuper();
      BackupManager backupManager0 = derbyEmbeddedBackuper0.getBackupManager();
      assertNull(backupManager0);
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.setOptions(Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      DerbyEmbeddedBackuper derbyEmbeddedBackuper0 = new DerbyEmbeddedBackuper();
      derbyEmbeddedBackuper0.setOptions("");
      assertNull(derbyEmbeddedBackuper0.getOptions());
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.setupServer()Lorg/objectweb/cjdbc/controller/backup/DumpTransferInfo;: root-Branch
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      DerbyEmbeddedBackuper derbyEmbeddedBackuper0 = new DerbyEmbeddedBackuper();
      DumpTransferInfo dumpTransferInfo0 = derbyEmbeddedBackuper0.setupServer();
      assertNull(dumpTransferInfo0);
  }

  //Test case number: 7
  /*
   * 9 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getDumpPhysicalPath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.backup(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;)Ljava/util/Date;: I31 Branch 1 IFNE L95 - true
   * Goal 4. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.backup(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;)Ljava/util/Date;: I31 Branch 1 IFNE L95 - false
   * Goal 5. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.backup(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;)Ljava/util/Date;: I46 Branch 2 IFEQ L101 - true
   * Goal 6. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getDerbyPath(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Z)Ljava/lang/String;: I11 Branch 6 IFGT L191 - true
   * Goal 7. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getDerbyPath(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Z)Ljava/lang/String;: I44 Branch 7 IF_ICMPLE L200 - true
   * Goal 8. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getDerbyPath(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Z)Ljava/lang/String;: I55 Branch 8 IFEQ L203 - false
   * Goal 9. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getDerbyPath(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Z)Ljava/lang/String;: I80 Branch 9 IFNE L206 - true
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      DerbyEmbeddedBackuper derbyEmbeddedBackuper0 = new DerbyEmbeddedBackuper();
      DatabaseBackend databaseBackend0 = new DatabaseBackend("jdbc:derby:<|om[/:k", "jdbc:derby:<|om[/:k", "jdbc:derby:<|om[/:k", "jdbc:derby:<|om[/:k", "jdbc:derby:<|om[/:k", false, "jdbc:derby:<|om[/:k");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/li/Projects/phd/corpus-x/data/qualitas_corpus_20130901/c_jdbc-2.0.2/.xcorpus/<|om[/:k");
      FileSystemHandling.createFolder(evoSuiteFile0);
      derbyEmbeddedBackuper0.backup(databaseBackend0, "jdbc:derby:<|om[/:k", "jdbc:derby:<|om[/:k", "jdbc:derby:<|om[/:k", "jdbc:derby:<|om[/:k", (ArrayList) null);
      MockDate mockDate0 = (MockDate)derbyEmbeddedBackuper0.backup(databaseBackend0, "VXDELc[}rzW", "VXDELc[}rzW", "jdbc:derby:jdb+:derby:)/GnoW&<ok<|U(2", "jdbc:derby:<|om[/:k", (ArrayList) null);
      assertEquals("Fri Feb 14 20:21:21 GMT 2014", mockDate0.toString());
  }

  //Test case number: 8
  /*
   * 7 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getDumpPhysicalPath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.restore(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;)V: I31 Branch 3 IFEQ L131 - true
   * Goal 4. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.restore(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;)V: I60 Branch 4 IFEQ L142 - true
   * Goal 5. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getDerbyPath(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Z)Ljava/lang/String;: I11 Branch 6 IFGT L191 - true
   * Goal 6. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getDerbyPath(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Z)Ljava/lang/String;: I44 Branch 7 IF_ICMPLE L200 - false
   * Goal 7. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getDerbyPath(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Z)Ljava/lang/String;: I55 Branch 8 IFEQ L203 - true
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      DerbyEmbeddedBackuper derbyEmbeddedBackuper0 = new DerbyEmbeddedBackuper();
      DatabaseBackend databaseBackend0 = new DatabaseBackend("jdbc:derby:jdbc:derby:jdbc:der;y:)/GXoW&<ok<]U(2", "jdbc:derby:jdbc:derby:jdbc:der;y:)/GXoW&<ok<]U(2", "jdbc:derby:jdbc:derby:jdbc:der;y:)/GXoW&<ok<]U(2", "jdbc:derby:jdbc:derby:jdbc:der;y:)/GXoW&<ok<]U(2", "jdbc:derby:jdbc:derby:jdbc:der;y:)/GXoW&<ok<]U(2", true, "jdbc:derby:jdbc:derby:jdbc:der;y:)/GXoW&<ok<]U(2");
      try { 
        derbyEmbeddedBackuper0.restore(databaseBackend0, "jdbc:derby:jdbc:derby:jdbc:der;y:)/GXoW&<ok<]U(2", "jdbc:derby:jdbc:derby:jdbc:der;y:)/GXoW&<ok<]U(2", "jdbc:derby:jdbc:derby:jdbc:der;y:)/GXoW&<ok<]U(2", "jdbc:derby:jdbc:derby:jdbc:der;y:)/GXoW&<ok<]U(2", (ArrayList) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // zip.invalid.source.file
         //
         assertThrownBy("org.objectweb.cjdbc.common.util.Zipper", e);
      }
  }

  //Test case number: 9
  /*
   * 7 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getDumpPhysicalPath(Ljava/lang/String;Ljava/lang/String;)Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.restore(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;)V: I31 Branch 3 IFEQ L131 - false
   * Goal 4. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.restore(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/ArrayList;)V: I60 Branch 4 IFEQ L142 - true
   * Goal 5. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getDerbyPath(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Z)Ljava/lang/String;: I11 Branch 6 IFGT L191 - true
   * Goal 6. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getDerbyPath(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Z)Ljava/lang/String;: I44 Branch 7 IF_ICMPLE L200 - true
   * Goal 7. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getDerbyPath(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Z)Ljava/lang/String;: I55 Branch 8 IFEQ L203 - true
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      DerbyEmbeddedBackuper derbyEmbeddedBackuper0 = new DerbyEmbeddedBackuper();
      DatabaseBackend databaseBackend0 = new DatabaseBackend("T+]J8**Np", "T+]J8**Np", "jdbc:derby:)/GXoW&<ok<]U(2", "jdbc:derby:)/GXoW&<ok<]U(2", "jdbc:derby:)/GXoW&<ok<]U(2", true, "1P|:2Co6Xk('{D.`UBe");
      EvoSuiteFile evoSuiteFile0 = new EvoSuiteFile("/home/li/Projects/phd/corpus-x/data/qualitas_corpus_20130901/c_jdbc-2.0.2/.xcorpus/)/GXoW&<ok<]U(2");
      FileSystemHandling.createFolder(evoSuiteFile0);
      try { 
        derbyEmbeddedBackuper0.restore(databaseBackend0, "", (String) null, "Write Task from transaction:", "jdbc:derby:)/GXoW&<ok<]U(2", (ArrayList) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // zip.invalid.source.file
         //
         assertThrownBy("org.objectweb.cjdbc.common.util.Zipper", e);
      }
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getDerbyPath(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Z)Ljava/lang/String;: I11 Branch 6 IFGT L191 - false
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      DerbyEmbeddedBackuper derbyEmbeddedBackuper0 = new DerbyEmbeddedBackuper();
      DatabaseBackend databaseBackend0 = new DatabaseBackend("", "recovery.jdbc.dumptable.create", "", "Q7xy0..yC", "recovery.jdbc.dumptable.create", true, "");
      try { 
        derbyEmbeddedBackuper0.backup(databaseBackend0, "", "", "", "=]<ZU6lXXnPH#.b!", (ArrayList) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Unsupported url Q7xy0..yC expecting jdbc:derby:pathToDb
         //
         assertThrownBy("org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper", e);
      }
  }

  //Test case number: 11
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getDerbyPath(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Z)Ljava/lang/String;: I11 Branch 6 IFGT L191 - true
   * Goal 3. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getDerbyPath(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Z)Ljava/lang/String;: I44 Branch 7 IF_ICMPLE L200 - true
   * Goal 4. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getDerbyPath(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Z)Ljava/lang/String;: I55 Branch 8 IFEQ L203 - false
   * Goal 5. org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper.getDerbyPath(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;Z)Ljava/lang/String;: I80 Branch 9 IFNE L206 - false
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      DerbyEmbeddedBackuper derbyEmbeddedBackuper0 = new DerbyEmbeddedBackuper();
      DatabaseBackend databaseBackend0 = new DatabaseBackend("T+]J8**Np", "T+]J8**Np", "jdbc:derby:)/GXoW&<ok<]U(2", "jdbc:derby:)/GXoW&<ok<]U(2", "jdbc:derby:)/GXoW&<ok<]U(2", true, "1P|:2Co6Xk('{D.`UBe");
      try { 
        derbyEmbeddedBackuper0.backup(databaseBackend0, "0}%zO#C$Ye", "1P|:2Co6Xk('{D.`UBe", "Write Task from transaction:", "0}%zO#C$Ye", (ArrayList) null);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // Directory )/GXoW&<ok<]U(2 does not exist. This might be due to an unsupported URL format (expectin jdbc:derby:pathToDb)
         //
         assertThrownBy("org.objectweb.cjdbc.controller.backup.DerbyEmbeddedBackuper", e);
      }
  }
}
