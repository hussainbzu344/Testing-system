/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 19 03:14:58 GMT 2016
 */

package org.objectweb.cjdbc.driver;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.exceptions.NotImplementedException;
import org.objectweb.cjdbc.common.exceptions.driver.DriverSQLException;
import org.objectweb.cjdbc.driver.Blob;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Blob_ESTest extends Blob_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 7 covered goals:
   * Goal 1. org.objectweb.cjdbc.driver.Blob.length()J: root-Branch
   * Goal 2. org.objectweb.cjdbc.driver.Blob.<init>([B)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.driver.Blob.resizedByteArray([BII)[B: root-Branch
   * Goal 4. org.objectweb.cjdbc.driver.Blob.setBytes(J[BII)I: I25 Branch 1 IFGE L137 - true
   * Goal 5. org.objectweb.cjdbc.driver.Blob.checkInitialized()V: I5 Branch 3 IF_ACMPNE L214 - true
   * Goal 6. org.objectweb.cjdbc.driver.Blob.checkSQLRangeIsSupported(JI)V: I11 Branch 4 IFGE L232 - true
   * Goal 7. org.objectweb.cjdbc.driver.Blob.checkSQLRangeIsSupported(JI)V: I36 Branch 5 IFGT L237 - true
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Blob blob0 = new Blob(byteArray0);
      // Undeclared exception!
      try { 
        blob0.setBytes((long) (byte)80, byteArray0, (int) (byte)0, (-204));
        fail("Expecting exception: ArrayIndexOutOfBoundsException");
      
      } catch(ArrayIndexOutOfBoundsException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.lang.System", e);
      }
  }

  //Test case number: 1
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.driver.Blob.position([BJ)J: root-Branch
   * Goal 2. org.objectweb.cjdbc.driver.Blob.<init>([B)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.driver.Blob.resizedByteArray([BII)[B: root-Branch
   * Goal 4. org.objectweb.cjdbc.driver.Blob.checkInitialized()V: I5 Branch 3 IF_ACMPNE L214 - true
   * Goal 5. org.objectweb.cjdbc.driver.Blob.checkSQLRangeIsSupported(JI)V: I11 Branch 4 IFGE L232 - true
   * Goal 6. org.objectweb.cjdbc.driver.Blob.checkSQLRangeIsSupported(JI)V: I36 Branch 5 IFGT L237 - true
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Blob blob0 = new Blob(byteArray0);
      try { 
        blob0.position(byteArray0, (long) (byte)108);
        fail("Expecting exception: NotImplementedException");
      
      } catch(NotImplementedException e) {
         //
         // position not yet implemented not implemented
         //
         assertThrownBy("org.objectweb.cjdbc.driver.Blob", e);
      }
  }

  //Test case number: 2
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.driver.Blob.getBytes(JI)[B: root-Branch
   * Goal 2. org.objectweb.cjdbc.driver.Blob.<init>([B)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.driver.Blob.resizedByteArray([BII)[B: root-Branch
   * Goal 4. org.objectweb.cjdbc.driver.Blob.checkInitialized()V: I5 Branch 3 IF_ACMPNE L214 - true
   * Goal 5. org.objectweb.cjdbc.driver.Blob.checkSQLRangeIsSupported(JI)V: I11 Branch 4 IFGE L232 - true
   * Goal 6. org.objectweb.cjdbc.driver.Blob.checkSQLRangeIsSupported(JI)V: I36 Branch 5 IFGT L237 - false
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Blob blob0 = new Blob(byteArray0);
      try { 
        blob0.getBytes((byte)123, Integer.MAX_VALUE);
        fail("Expecting exception: NotImplementedException");
      
      } catch(NotImplementedException e) {
         //
         // End of Blob (2147483770) is too great. Blobs greater than 2147483647 are not supported not implemented
         //
         assertThrownBy("org.objectweb.cjdbc.driver.Blob", e);
      }
  }

  //Test case number: 3
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.driver.Blob.length()J: root-Branch
   * Goal 2. org.objectweb.cjdbc.driver.Blob.<init>([B)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.driver.Blob.setBytes(J[B)I: root-Branch
   * Goal 4. org.objectweb.cjdbc.driver.Blob.resizedByteArray([BII)[B: root-Branch
   * Goal 5. org.objectweb.cjdbc.driver.Blob.setBytes(J[BII)I: I25 Branch 1 IFGE L137 - false
   * Goal 6. org.objectweb.cjdbc.driver.Blob.checkInitialized()V: I5 Branch 3 IF_ACMPNE L214 - true
   * Goal 7. org.objectweb.cjdbc.driver.Blob.checkSQLRangeIsSupported(JI)V: I11 Branch 4 IFGE L232 - true
   * Goal 8. org.objectweb.cjdbc.driver.Blob.checkSQLRangeIsSupported(JI)V: I36 Branch 5 IFGT L237 - true
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Blob blob0 = new Blob(byteArray0);
      int int0 = blob0.setBytes((long) (byte)37, byteArray0);
      assertEquals(1, int0);
  }

  //Test case number: 4
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.driver.Blob.<init>([B)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.driver.Blob.setBinaryStream(J)Ljava/io/OutputStream;: root-Branch
   * Goal 3. org.objectweb.cjdbc.driver.Blob.resizedByteArray([BII)[B: root-Branch
   * Goal 4. org.objectweb.cjdbc.driver.Blob.checkInitialized()V: I5 Branch 3 IF_ACMPNE L214 - true
   * Goal 5. org.objectweb.cjdbc.driver.Blob.checkSQLRangeIsSupported(JI)V: I11 Branch 4 IFGE L232 - false
   */

	@Test(timeout=300000)
  public void test4()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Blob blob0 = new Blob(byteArray0);
      try { 
        blob0.setBinaryStream(0L);
        fail("Expecting exception: DriverSQLException");
      
      } catch(DriverSQLException e) {
         //
         // Illegal argument: start of Blob (0) cannot be less than 1
         //
         assertThrownBy("org.objectweb.cjdbc.driver.Blob", e);
      }
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.driver.Blob.<init>([B)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.driver.Blob.getBinaryStream()Ljava/io/InputStream;: root-Branch
   * Goal 3. org.objectweb.cjdbc.driver.Blob.free()V: root-Branch
   * Goal 4. org.objectweb.cjdbc.driver.Blob.resizedByteArray([BII)[B: root-Branch
   * Goal 5. org.objectweb.cjdbc.driver.Blob.checkInitialized()V: I5 Branch 3 IF_ACMPNE L214 - false
   */

	@Test(timeout=300000)
  public void test5()  throws Throwable  {
      byte[] byteArray0 = new byte[0];
      Blob blob0 = new Blob(byteArray0);
      blob0.free();
      try { 
        blob0.getBinaryStream();
        fail("Expecting exception: DriverSQLException");
      
      } catch(DriverSQLException e) {
         //
         // Blob has been freed
         //
         assertThrownBy("org.objectweb.cjdbc.driver.Blob", e);
      }
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.driver.Blob.<init>([B)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.driver.Blob.getInternalByteArray()[B: root-Branch
   * Goal 3. org.objectweb.cjdbc.driver.Blob.resizedByteArray([BII)[B: root-Branch
   */

	@Test(timeout=300000)
  public void test6()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      Blob blob0 = new Blob(byteArray0);
      byte[] byteArray1 = blob0.getInternalByteArray();
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray1);
      assertNotSame(byteArray1, byteArray0);
  }

  //Test case number: 7
  /*
   * 9 covered goals:
   * Goal 1. org.objectweb.cjdbc.driver.Blob.length()J: root-Branch
   * Goal 2. org.objectweb.cjdbc.driver.Blob.getBytes(JI)[B: root-Branch
   * Goal 3. org.objectweb.cjdbc.driver.Blob.<init>([B)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.driver.Blob.resizedByteArray([BII)[B: root-Branch
   * Goal 5. org.objectweb.cjdbc.driver.Blob.position(Ljava/sql/Blob;J)J: root-Branch
   * Goal 6. org.objectweb.cjdbc.driver.Blob.checkInitialized()V: I5 Branch 3 IF_ACMPNE L214 - true
   * Goal 7. org.objectweb.cjdbc.driver.Blob.checkSQLRangeIsSupported(JI)V: I11 Branch 4 IFGE L232 - true
   * Goal 8. org.objectweb.cjdbc.driver.Blob.checkSQLRangeIsSupported(JI)V: I11 Branch 4 IFGE L232 - false
   * Goal 9. org.objectweb.cjdbc.driver.Blob.checkSQLRangeIsSupported(JI)V: I36 Branch 5 IFGT L237 - true
   */

	@Test(timeout=300000)
  public void test7()  throws Throwable  {
      byte[] byteArray0 = new byte[1];
      Blob blob0 = new Blob(byteArray0);
      try { 
        blob0.position((java.sql.Blob) blob0, 37L);
        fail("Expecting exception: DriverSQLException");
      
      } catch(DriverSQLException e) {
         //
         // Illegal argument: start of Blob (0) cannot be less than 1
         //
         assertThrownBy("org.objectweb.cjdbc.driver.Blob", e);
      }
  }

  //Test case number: 8
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.driver.Blob.length()J: root-Branch
   * Goal 2. org.objectweb.cjdbc.driver.Blob.<init>([B)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.driver.Blob.resizedByteArray([BII)[B: root-Branch
   * Goal 4. org.objectweb.cjdbc.driver.Blob.truncate(J)V: I10 Branch 2 IFLT L175 - true
   * Goal 5. org.objectweb.cjdbc.driver.Blob.checkInitialized()V: I5 Branch 3 IF_ACMPNE L214 - true
   */

	@Test(timeout=300000)
  public void test8()  throws Throwable  {
      byte[] byteArray0 = new byte[2];
      Blob blob0 = new Blob(byteArray0);
      blob0.truncate((byte)0);
  }

  //Test case number: 9
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.driver.Blob.length()J: root-Branch
   * Goal 2. org.objectweb.cjdbc.driver.Blob.<init>([B)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.driver.Blob.resizedByteArray([BII)[B: root-Branch
   * Goal 4. org.objectweb.cjdbc.driver.Blob.truncate(J)V: I10 Branch 2 IFLT L175 - false
   * Goal 5. org.objectweb.cjdbc.driver.Blob.checkInitialized()V: I5 Branch 3 IF_ACMPNE L214 - true
   */

	@Test(timeout=300000)
  public void test9()  throws Throwable  {
      byte[] byteArray0 = new byte[6];
      Blob blob0 = new Blob(byteArray0);
      blob0.truncate((byte)108);
  }
}
