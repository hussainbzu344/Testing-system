/*
 * This file was automatically generated by EvoSuite
 * Tue Jul 19 03:09:27 GMT 2016
 */

package org.objectweb.cjdbc.driver;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.driver.DatabaseUser;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class DatabaseUser_ESTest extends DatabaseUser_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.driver.DatabaseUser.getDbName()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.driver.DatabaseUser.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      DatabaseUser databaseUser0 = new DatabaseUser("", "", "");
      String string0 = databaseUser0.getDbName();
      assertEquals("", string0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.driver.DatabaseUser.getLogin()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.driver.DatabaseUser.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      DatabaseUser databaseUser0 = new DatabaseUser("", "", "");
      String string0 = databaseUser0.getLogin();
      assertEquals("", string0);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.driver.DatabaseUser.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.driver.DatabaseUser.getPassword()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
      DatabaseUser databaseUser0 = new DatabaseUser("", "", "");
      String string0 = databaseUser0.getPassword();
      assertEquals("", string0);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.driver.DatabaseUser.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.driver.DatabaseUser.matches(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z: I6 Branch 1 IFLE L76 - true
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
      DatabaseUser databaseUser0 = new DatabaseUser("", "", "");
      boolean boolean0 = databaseUser0.matches("w9v7d", "org.objectweb.cjdbc.driver.DatabaseUser", "FxIo;_{K2s:S(");
      assertFalse(boolean0);
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.driver.DatabaseUser.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.driver.DatabaseUser.matches(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z: I6 Branch 1 IFLE L76 - false
   * Goal 3. org.objectweb.cjdbc.driver.DatabaseUser.matches(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z: I11 Branch 2 IFLE L76 - true
   */

	@Test(timeout=300000)
  public void test4()  throws Throwable  {
      DatabaseUser databaseUser0 = new DatabaseUser("", "H", "");
      boolean boolean0 = databaseUser0.matches("", "{bn ;v", "*a)7#dI/kgy(|hz`o");
      assertFalse(boolean0);
      assertEquals("H", databaseUser0.getLogin());
      assertEquals("", databaseUser0.getDbName());
      assertEquals("", databaseUser0.getPassword());
  }

  //Test case number: 5
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.driver.DatabaseUser.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.driver.DatabaseUser.matches(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z: I6 Branch 1 IFLE L76 - false
   * Goal 3. org.objectweb.cjdbc.driver.DatabaseUser.matches(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z: I11 Branch 2 IFLE L76 - false
   * Goal 4. org.objectweb.cjdbc.driver.DatabaseUser.matches(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z: I16 Branch 3 IFLE L76 - true
   */

	@Test(timeout=300000)
  public void test5()  throws Throwable  {
      DatabaseUser databaseUser0 = new DatabaseUser("DvQ,k kjM^<9", "", "DvQ,k kjM^<9");
      boolean boolean0 = databaseUser0.matches("DvQ,k kjM^<9", "", (String) null);
      assertEquals("DvQ,k kjM^<9", databaseUser0.getPassword());
      assertFalse(boolean0);
      assertEquals("", databaseUser0.getLogin());
      assertEquals("DvQ,k kjM^<9", databaseUser0.getDbName());
  }

  //Test case number: 6
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.driver.DatabaseUser.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.driver.DatabaseUser.matches(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z: I6 Branch 1 IFLE L76 - false
   * Goal 3. org.objectweb.cjdbc.driver.DatabaseUser.matches(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z: I11 Branch 2 IFLE L76 - false
   * Goal 4. org.objectweb.cjdbc.driver.DatabaseUser.matches(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)Z: I16 Branch 3 IFLE L76 - false
   * Goal 5. org.objectweb.cjdbc.driver.DatabaseUser.equals(Ljava/lang/Object;)Z: I4 Branch 4 IFNE L89 - true
   */

	@Test(timeout=300000)
  public void test6()  throws Throwable  {
      DatabaseUser databaseUser0 = new DatabaseUser("FieldCannotBeNull", "", "FieldCannotBeNull");
      boolean boolean0 = databaseUser0.equals(databaseUser0);
      assertEquals("FieldCannotBeNull", databaseUser0.getPassword());
      assertTrue(boolean0);
      assertEquals("", databaseUser0.getLogin());
      assertEquals("FieldCannotBeNull", databaseUser0.getDbName());
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.driver.DatabaseUser.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.driver.DatabaseUser.equals(Ljava/lang/Object;)Z: I4 Branch 4 IFNE L89 - false
   */

	@Test(timeout=300000)
  public void test7()  throws Throwable  {
      DatabaseUser databaseUser0 = new DatabaseUser("FieldCannotBeNull", "", "FieldCannotBeNull");
      Object object0 = new Object();
      boolean boolean0 = databaseUser0.equals(object0);
      assertEquals("FieldCannotBeNull", databaseUser0.getPassword());
      assertEquals("", databaseUser0.getLogin());
      assertFalse(boolean0);
      assertEquals("FieldCannotBeNull", databaseUser0.getDbName());
  }
}
