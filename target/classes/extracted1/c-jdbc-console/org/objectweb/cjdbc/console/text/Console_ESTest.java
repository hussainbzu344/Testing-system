/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 08:53:55 GMT 2016
 */

package org.objectweb.cjdbc.console.text;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.io.PushbackInputStream;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.sql.rowset.serial.SerialBlob;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.console.jmx.RmiJmxClient;
import org.objectweb.cjdbc.console.text.Console;
import org.objectweb.cjdbc.console.views.InfoViewer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Console_ESTest extends Console_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 11 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.println(Ljava/lang/String;)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   * Goal 9. org.objectweb.cjdbc.console.text.Console.readLine(Ljava/lang/String;)Ljava/lang/String;: I8 Branch 7 IFEQ L187 - false
   * Goal 10. org.objectweb.cjdbc.console.text.Console.readLine(Ljava/lang/String;)Ljava/lang/String;: I24 Branch 8 IFEQ L190 - false
   * Goal 11. org.objectweb.cjdbc.console.text.Console.readLine(Ljava/lang/String;)Ljava/lang/String;: I63 Branch 9 IFNULL L206 - false
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          byte[] byteArray0 = new byte[2];
          SerialBlob serialBlob0 = new SerialBlob(byteArray0);
          ByteArrayInputStream byteArrayInputStream0 = (ByteArrayInputStream)serialBlob0.getBinaryStream();
          Console console0 = new Console((RmiJmxClient) null, (InputStream) byteArrayInputStream0, true, false);
          String string0 = console0.readLine("[6#.DYzkmuk#");
          assertEquals("", string0);
          assertTrue(console0.isInteractive());
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 1
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.getControllerModule()Lorg/objectweb/cjdbc/console/text/module/ControllerConsole;: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Console console0 = new Console((RmiJmxClient) null, (InputStream) null, false, true);
          console0.getControllerModule();
          assertFalse(console0.isInteractive());
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 2
  /*
   * 9 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.println()V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.println(Ljava/lang/String;)V: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 9. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          byte[] byteArray0 = new byte[6];
          ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
          Console console0 = new Console((RmiJmxClient) null, (InputStream) byteArrayInputStream0, true, true);
          console0.println();
          assertTrue(console0.isInteractive());
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 3
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.getAdminModule()Lorg/objectweb/cjdbc/console/text/module/VirtualDatabaseAdmin;: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          byte[] byteArray0 = new byte[5];
          ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
          Console console0 = new Console((RmiJmxClient) null, (InputStream) byteArrayInputStream0, false, false);
          console0.getAdminModule();
          assertFalse(console0.isInteractive());
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 4
  /*
   * 9 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.getConsoleReader()Ljline/ConsoleReader;: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.println(Ljava/lang/String;)V: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 9. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Console console0 = new Console((RmiJmxClient) null, (InputStream) null, true, false);
          console0.getConsoleReader();
          assertTrue(console0.isInteractive());
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 5
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.getMonitorModule()Lorg/objectweb/cjdbc/console/text/module/MonitorConsole;: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          byte[] byteArray0 = new byte[5];
          ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
          Console console0 = new Console((RmiJmxClient) null, (InputStream) byteArrayInputStream0, false, false);
          console0.getMonitorModule();
          assertFalse(console0.isInteractive());
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 6
  /*
   * 10 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.println(Ljava/lang/String;)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.printInfo(Ljava/lang/String;)V: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 9. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   * Goal 10. org.objectweb.cjdbc.console.text.Console.println(Ljava/lang/String;I)V: I4 Branch 13 IFEQ L276 - false
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Console console0 = new Console((RmiJmxClient) null, (InputStream) null, true, true);
          console0.printInfo(")yw|w>c @iUo");
          assertTrue(console0.isInteractive());
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 7
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.getConsoleModule()Lorg/objectweb/cjdbc/console/text/module/VirtualDatabaseConsole;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          PipedInputStream pipedInputStream0 = new PipedInputStream();
          Console console0 = new Console((RmiJmxClient) null, (InputStream) pipedInputStream0, false, true);
          console0.getConsoleModule();
          assertFalse(console0.isInteractive());
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 8
  /*
   * 9 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.println(Ljava/lang/String;)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.Console.print(Ljava/lang/String;)V: root-Branch
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 9. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          PushbackInputStream pushbackInputStream0 = new PushbackInputStream((InputStream) null);
          Console console0 = new Console((RmiJmxClient) null, (InputStream) pushbackInputStream0, true, true);
          console0.print(" > ");
          assertTrue(console0.isInteractive());
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 9
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 5. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.readLine(Ljava/lang/String;)Ljava/lang/String;: I8 Branch 7 IFEQ L187 - true
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          PipedInputStream pipedInputStream0 = new PipedInputStream();
          Console console0 = new Console((RmiJmxClient) null, (InputStream) pipedInputStream0, false, true);
          try { 
            console0.readLine("t*}msu>FAZn$v)>");
            fail("Expecting exception: Exception");
          
          } catch(Exception e) {
             //
             // console.read.command.failed
             //
             assertThrownBy("org.objectweb.cjdbc.console.text.Console", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 10
  /*
   * 11 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.println(Ljava/lang/String;)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   * Goal 9. org.objectweb.cjdbc.console.text.Console.readLine(Ljava/lang/String;)Ljava/lang/String;: I8 Branch 7 IFEQ L187 - false
   * Goal 10. org.objectweb.cjdbc.console.text.Console.readLine(Ljava/lang/String;)Ljava/lang/String;: I24 Branch 8 IFEQ L190 - true
   * Goal 11. org.objectweb.cjdbc.console.text.Console.readLine(Ljava/lang/String;)Ljava/lang/String;: I63 Branch 9 IFNULL L206 - false
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          byte[] byteArray0 = new byte[2];
          SerialBlob serialBlob0 = new SerialBlob(byteArray0);
          ByteArrayInputStream byteArrayInputStream0 = (ByteArrayInputStream)serialBlob0.getBinaryStream();
          Console console0 = new Console((RmiJmxClient) null, (InputStream) byteArrayInputStream0, true, true);
          console0.setPrintColor(false);
          String string0 = console0.readLine("[6#.DYzkmuk#");
          assertTrue(console0.isInteractive());
          assertEquals("", string0);
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 11
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 5. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.readPassword(Ljava/lang/String;)Ljava/lang/String;: I4 Branch 10 IFEQ L219 - true
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          Console console0 = new Console((RmiJmxClient) null, (InputStream) null, false, false);
          // Undeclared exception!
          try { 
            console0.readPassword("H");
            fail("Expecting exception: NullPointerException");
          
          } catch(NullPointerException e) {
             //
             // no message in exception (getMessage() returned null)
             //
             assertThrownBy("jline.ConsoleReader", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 12
  /*
   * 10 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.println(Ljava/lang/String;)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   * Goal 9. org.objectweb.cjdbc.console.text.Console.readPassword(Ljava/lang/String;)Ljava/lang/String;: I4 Branch 10 IFEQ L219 - false
   * Goal 10. org.objectweb.cjdbc.console.text.Console.readPassword(Ljava/lang/String;)Ljava/lang/String;: I20 Branch 11 IFEQ L222 - false
   */

	@Test(timeout=300000)
  public void test12()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          byte[] byteArray0 = new byte[2];
          SerialBlob serialBlob0 = new SerialBlob(byteArray0);
          ByteArrayInputStream byteArrayInputStream0 = (ByteArrayInputStream)serialBlob0.getBinaryStream();
          Console console0 = new Console((RmiJmxClient) null, (InputStream) byteArrayInputStream0, true, false);
          String string0 = console0.readPassword("");
          assertEquals("\u0000\u0000", string0);
          assertTrue(console0.isInteractive());
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 13
  /*
   * 10 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.println(Ljava/lang/String;)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   * Goal 9. org.objectweb.cjdbc.console.text.Console.readPassword(Ljava/lang/String;)Ljava/lang/String;: I4 Branch 10 IFEQ L219 - false
   * Goal 10. org.objectweb.cjdbc.console.text.Console.readPassword(Ljava/lang/String;)Ljava/lang/String;: I20 Branch 11 IFEQ L222 - true
   */

	@Test(timeout=300000)
  public void test13()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          byte[] byteArray0 = new byte[2];
          SerialBlob serialBlob0 = new SerialBlob(byteArray0);
          ByteArrayInputStream byteArrayInputStream0 = (ByteArrayInputStream)serialBlob0.getBinaryStream();
          Console console0 = new Console((RmiJmxClient) null, (InputStream) byteArrayInputStream0, true, true);
          console0.setPrintColor(false);
          String string0 = console0.readPassword("");
          assertTrue(console0.isInteractive());
          assertEquals("\u0000\u0000", string0);
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 14
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 5. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.print(Ljava/lang/String;I)V: I4 Branch 12 IFEQ L254 - true
   */

	@Test(timeout=300000)
  public void test14()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
          PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
          Console console0 = new Console((RmiJmxClient) null, (InputStream) pipedInputStream0, false, false);
          console0.setPrintColor(false);
          console0.print("", (-1));
          assertFalse(console0.isInteractive());
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 15
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 5. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.print(Ljava/lang/String;I)V: I4 Branch 12 IFEQ L254 - false
   */

	@Test(timeout=300000)
  public void test15()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
          PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
          Console console0 = new Console((RmiJmxClient) null, (InputStream) pipedInputStream0, false, false);
          console0.print("", (-1));
          assertFalse(console0.isInteractive());
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 16
  /*
   * 9 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.println(Ljava/lang/String;)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   * Goal 9. org.objectweb.cjdbc.console.text.Console.println(Ljava/lang/String;I)V: I4 Branch 13 IFEQ L276 - true
   */

	@Test(timeout=300000)
  public void test16()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          byte[] byteArray0 = new byte[2];
          SerialBlob serialBlob0 = new SerialBlob(byteArray0);
          ByteArrayInputStream byteArrayInputStream0 = (ByteArrayInputStream)serialBlob0.getBinaryStream();
          Console console0 = new Console((RmiJmxClient) null, (InputStream) byteArrayInputStream0, true, false);
          console0.setPrintColor(false);
          console0.println("", 3);
          assertTrue(console0.isInteractive());
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 17
  /*
   * 10 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.handlePrompt()V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   * Goal 9. org.objectweb.cjdbc.console.text.Console.printError(Ljava/lang/String;)V: I4 Branch 14 IFEQ L295 - true
   * Goal 10. org.objectweb.cjdbc.console.text.Console.printError(Ljava/lang/String;Ljava/lang/Exception;)V: I4 Branch 15 IFEQ L317 - true
   */

	@Test(timeout=300000)
  public void test17()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
          PipedInputStream pipedInputStream0 = new PipedInputStream(pipedOutputStream0);
          Console console0 = new Console((RmiJmxClient) null, (InputStream) pipedInputStream0, false, false);
          console0.setPrintColor(false);
          // Undeclared exception!
          try { 
            console0.handlePrompt();
            fail("Expecting exception: TooManyResourcesException");
          
          } catch(TooManyResourcesException e) {
             //
             // Loop has been executed more times than the allowed 10000
             //
             assertThrownBy("org.evosuite.runtime.LoopCounter", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 18
  /*
   * 10 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.handlePrompt()V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   * Goal 9. org.objectweb.cjdbc.console.text.Console.printError(Ljava/lang/String;)V: I4 Branch 14 IFEQ L295 - false
   * Goal 10. org.objectweb.cjdbc.console.text.Console.printError(Ljava/lang/String;Ljava/lang/Exception;)V: I4 Branch 15 IFEQ L317 - false
   */

	@Test(timeout=300000)
  public void test18()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Console console0 = new Console((RmiJmxClient) null, (InputStream) null, false, true);
          // Undeclared exception!
          try { 
            console0.handlePrompt();
            fail("Expecting exception: TooManyResourcesException");
          
          } catch(TooManyResourcesException e) {
             //
             // Loop has been executed more times than the allowed 10000
             //
             assertThrownBy("org.evosuite.runtime.LoopCounter", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 19
  /*
   * 9 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.println(Ljava/lang/String;)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   * Goal 9. org.objectweb.cjdbc.console.text.Console.showInfo([[Ljava/lang/String;Lorg/objectweb/cjdbc/console/views/InfoViewer;)V: I4 Branch 16 IFEQ L331 - true
   */

	@Test(timeout=300000)
  public void test19()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Console console0 = new Console((RmiJmxClient) null, (InputStream) null, true, true);
          String[][] stringArray0 = new String[9][5];
          console0.setPrintColor(false);
          // Undeclared exception!
          try { 
            console0.showInfo(stringArray0, (InfoViewer) null);
            fail("Expecting exception: NullPointerException");
          
          } catch(NullPointerException e) {
             //
             // no message in exception (getMessage() returned null)
             //
             assertThrownBy("org.objectweb.cjdbc.console.text.Console", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 20
  /*
   * 9 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.Console.isInteractive()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.Console.<init>(Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;Ljava/io/InputStream;ZZ)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.Console.println(Ljava/lang/String;)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.Console.getJmxClient()Lorg/objectweb/cjdbc/console/jmx/RmiJmxClient;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I12 Branch 3 IF_ICMPGT L151 - false
   * Goal 6. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I17 Branch 4 IF_ICMPLE L151 - true
   * Goal 7. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I28 Branch 5 IFEQ L152 - true
   * Goal 8. org.objectweb.cjdbc.console.text.Console.setPrintColor(Z)V: I44 Branch 6 IFNULL L157 - true
   * Goal 9. org.objectweb.cjdbc.console.text.Console.showInfo([[Ljava/lang/String;Lorg/objectweb/cjdbc/console/views/InfoViewer;)V: I4 Branch 16 IFEQ L331 - false
   */

	@Test(timeout=300000)
  public void test20()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Console console0 = new Console((RmiJmxClient) null, (InputStream) null, true, true);
          String[][] stringArray0 = new String[7][5];
          // Undeclared exception!
          try { 
            console0.showInfo(stringArray0, (InfoViewer) null);
            fail("Expecting exception: NullPointerException");
          
          } catch(NullPointerException e) {
             //
             // no message in exception (getMessage() returned null)
             //
             assertThrownBy("org.objectweb.cjdbc.console.text.Console", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }
}
