/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 09:10:49 GMT 2016
 */

package org.objectweb.cjdbc.console.wizard.objects;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;
import java.awt.TextArea;
import java.text.Format;
import java.util.Hashtable;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.console.wizard.objects.Backend;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Backend_ESTest extends Backend_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.wizard.objects.Backend.toString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.wizard.objects.Backend.<init>()V: root-Branch
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      Backend backend0 = new Backend();
      String string0 = backend0.toString();
      assertEquals("label.backend.undefined", string0);
      assertNotNull(string0);
      assertEquals("false", backend0.getGatherSystemTables());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.wizard.objects.Backend.setUrl(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.wizard.objects.Backend.<init>()V: root-Branch
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      Backend backend0 = new Backend();
      backend0.setUrl(">PzpN-");
      assertEquals("false", backend0.getGatherSystemTables());
      assertEquals(">PzpN-", backend0.getUrl());
      assertEquals("label.backend.undefined", backend0.toString());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.wizard.objects.Backend.getConnectionTestStatement()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.wizard.objects.Backend.<init>()V: root-Branch
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      Backend backend0 = new Backend();
      String string0 = backend0.getConnectionTestStatement();
      assertNull(string0);
      assertEquals("label.backend.undefined", backend0.getName());
      assertEquals("false", backend0.getGatherSystemTables());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.wizard.objects.Backend.setConnectionManagers(Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.wizard.objects.Backend.<init>()V: root-Branch
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      Backend backend0 = new Backend();
      Hashtable<Format.Field, TextArea> hashtable0 = new Hashtable<Format.Field, TextArea>();
      backend0.setConnectionManagers(hashtable0);
      assertEquals("label.backend.undefined", backend0.getName());
      assertEquals("false", backend0.getGatherSystemTables());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.wizard.objects.Backend.getUrl()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.wizard.objects.Backend.<init>()V: root-Branch
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      Backend backend0 = new Backend();
      String string0 = backend0.getUrl();
      assertNull(string0);
      assertEquals("false", backend0.getGatherSystemTables());
      assertEquals("label.backend.undefined", backend0.toString());
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.wizard.objects.Backend.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.wizard.objects.Backend.setName(Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      Backend backend0 = new Backend();
      backend0.setName("Guis;l[d/!Q/gw+6");
      assertEquals("Guis;l[d/!Q/gw+6", backend0.toString());
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.wizard.objects.Backend.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.wizard.objects.Backend.getDynamicPrecision()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      Backend backend0 = new Backend();
      String string0 = backend0.getDynamicPrecision();
      assertNull(string0);
      assertEquals("false", backend0.getGatherSystemTables());
      assertEquals("label.backend.undefined", backend0.toString());
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.wizard.objects.Backend.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.wizard.objects.Backend.setGatherSystemTables(Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      Backend backend0 = new Backend();
      backend0.setGatherSystemTables(")e-85T~1\"1");
      assertEquals(")e-85T~1\"1", backend0.getGatherSystemTables());
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.wizard.objects.Backend.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.wizard.objects.Backend.setConnectionTestStatement(Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      Backend backend0 = new Backend();
      backend0.setConnectionTestStatement((String) null);
      assertEquals("false", backend0.getGatherSystemTables());
      assertEquals("label.backend.undefined", backend0.toString());
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.wizard.objects.Backend.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.wizard.objects.Backend.setDynamicPrecision(Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      Backend backend0 = new Backend();
      backend0.setDynamicPrecision("tw6=/j>Pvt8_S");
      assertEquals("label.backend.undefined", backend0.toString());
      assertEquals("false", backend0.getGatherSystemTables());
      assertEquals("tw6=/j>Pvt8_S", backend0.getDynamicPrecision());
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.wizard.objects.Backend.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.wizard.objects.Backend.getDriver()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      Backend backend0 = new Backend();
      String string0 = backend0.getDriver();
      assertEquals("label.backend.undefined", backend0.getName());
      assertEquals("false", backend0.getGatherSystemTables());
      assertNull(string0);
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.wizard.objects.Backend.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.wizard.objects.Backend.setDriver(Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      Backend backend0 = new Backend();
      backend0.setDriver("p|");
      assertEquals("p|", backend0.getDriver());
      assertEquals("label.backend.undefined", backend0.getName());
      assertEquals("false", backend0.getGatherSystemTables());
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.wizard.objects.Backend.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.wizard.objects.Backend.setDriverPath(Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test12()  throws Throwable  {
      Backend backend0 = new Backend();
      backend0.setDriverPath(")e-85T~1\"1");
      assertEquals("false", backend0.getGatherSystemTables());
      assertEquals(")e-85T~1\"1", backend0.getDriverPath());
      assertEquals("label.backend.undefined", backend0.toString());
  }

  //Test case number: 13
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.wizard.objects.Backend.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.wizard.objects.Backend.getName()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test13()  throws Throwable  {
      Backend backend0 = new Backend();
      String string0 = backend0.getName();
      assertEquals("false", backend0.getGatherSystemTables());
      assertEquals("label.backend.undefined", string0);
      assertNotNull(string0);
  }

  //Test case number: 14
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.wizard.objects.Backend.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.wizard.objects.Backend.getDriverPath()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test14()  throws Throwable  {
      Backend backend0 = new Backend();
      String string0 = backend0.getDriverPath();
      assertNull(string0);
      assertEquals("label.backend.undefined", backend0.getName());
      assertEquals("false", backend0.getGatherSystemTables());
  }

  //Test case number: 15
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.wizard.objects.Backend.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.wizard.objects.Backend.getGatherSystemTables()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test15()  throws Throwable  {
      Backend backend0 = new Backend();
      String string0 = backend0.getGatherSystemTables();
      assertNotNull(string0);
      assertEquals("false", string0);
      assertEquals("label.backend.undefined", backend0.toString());
  }

  //Test case number: 16
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.wizard.objects.Backend.<init>()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.wizard.objects.Backend.getConnectionManagers()Ljava/util/Hashtable;: root-Branch
   */

	@Test(timeout=300000)
  public void test16()  throws Throwable  {
      Backend backend0 = new Backend();
      backend0.getConnectionManagers();
      assertEquals("false", backend0.getGatherSystemTables());
      assertEquals("label.backend.undefined", backend0.toString());
  }
}
