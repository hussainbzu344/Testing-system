/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 09:10:15 GMT 2016
 */

package org.objectweb.cjdbc.console.text.module;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import javax.sql.rowset.serial.SerialBlob;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.console.jmx.RmiJmxClient;
import org.objectweb.cjdbc.console.text.Console;
import org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class VirtualDatabaseAdmin_ESTest extends VirtualDatabaseAdmin_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 12 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getDescriptionString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getLogin()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getVirtualDbName()Ljava/lang/String;: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.loadCommands()V: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getPassword()Ljava/lang/String;: root-Branch
   * Goal 6. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.<init>(Lorg/objectweb/cjdbc/console/text/Console;)V: root-Branch
   * Goal 7. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.login([Ljava/lang/String;)V: I34 Branch 1 IFNULL L119 - false
   * Goal 8. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.login([Ljava/lang/String;)V: I39 Branch 2 IFLE L119 - false
   * Goal 9. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.login([Ljava/lang/String;)V: I51 Branch 3 IFNONNULL L122 - true
   * Goal 10. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.login([Ljava/lang/String;)V: I68 Branch 4 IFNONNULL L127 - true
   * Goal 11. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.login([Ljava/lang/String;)V: I85 Branch 5 IFNONNULL L132 - true
   * Goal 12. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.login([Ljava/lang/String;)V: I202 Branch 8 IFEQ L172 - false
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          byte[] byteArray0 = new byte[7];
          ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, 0, (-210));
          Console console0 = new Console((RmiJmxClient) null, (InputStream) byteArrayInputStream0, true, true);
          VirtualDatabaseAdmin virtualDatabaseAdmin0 = console0.getAdminModule();
          String[] stringArray0 = new String[7];
          stringArray0[0] = "";
          virtualDatabaseAdmin0.login(stringArray0);
          assertEquals("VirtualDatabase Administration", virtualDatabaseAdmin0.getDescriptionString());
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 1
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getDescriptionString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.expertCommandsSet()Ljava/util/Set;: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.removeExpertCommands()V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getLogin()Ljava/lang/String;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getVirtualDbName()Ljava/lang/String;: root-Branch
   * Goal 6. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.loadCommands()V: root-Branch
   * Goal 7. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getPassword()Ljava/lang/String;: root-Branch
   * Goal 8. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.<init>(Lorg/objectweb/cjdbc/console/text/Console;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Console console0 = new Console((RmiJmxClient) null, (InputStream) null, true, true);
          VirtualDatabaseAdmin virtualDatabaseAdmin0 = console0.getAdminModule();
          virtualDatabaseAdmin0.removeExpertCommands();
          assertEquals("VirtualDatabase Administration", virtualDatabaseAdmin0.getDescriptionString());
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 2
  /*
   * 7 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getDescriptionString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getLogin()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getVirtualDbName()Ljava/lang/String;: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.loadCommands()V: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getPassword()Ljava/lang/String;: root-Branch
   * Goal 6. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getPromptString()Ljava/lang/String;: root-Branch
   * Goal 7. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.<init>(Lorg/objectweb/cjdbc/console/text/Console;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Console console0 = new Console((RmiJmxClient) null, (InputStream) null, true, true);
          VirtualDatabaseAdmin virtualDatabaseAdmin0 = console0.getAdminModule();
          String string0 = virtualDatabaseAdmin0.getPromptString();
          assertEquals("VirtualDatabase Administration", virtualDatabaseAdmin0.getDescriptionString());
          assertEquals("null(null)", string0);
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 3
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getDescriptionString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.expertCommandsSet()Ljava/util/Set;: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getLogin()Ljava/lang/String;: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getVirtualDbName()Ljava/lang/String;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.loadCommands()V: root-Branch
   * Goal 6. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getPassword()Ljava/lang/String;: root-Branch
   * Goal 7. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.addExpertCommands()V: root-Branch
   * Goal 8. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.<init>(Lorg/objectweb/cjdbc/console/text/Console;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          byte[] byteArray0 = new byte[1];
          SerialBlob serialBlob0 = new SerialBlob(byteArray0);
          ByteArrayInputStream byteArrayInputStream0 = (ByteArrayInputStream)serialBlob0.getBinaryStream();
          Console console0 = new Console((RmiJmxClient) null, (InputStream) byteArrayInputStream0, true, true);
          VirtualDatabaseAdmin virtualDatabaseAdmin0 = new VirtualDatabaseAdmin(console0);
          virtualDatabaseAdmin0.addExpertCommands();
          assertEquals("VirtualDatabase Administration", virtualDatabaseAdmin0.getDescriptionString());
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 4
  /*
   * 10 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getLogin()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getVirtualDbName()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.loadCommands()V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getPassword()Ljava/lang/String;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.<init>(Lorg/objectweb/cjdbc/console/text/Console;)V: root-Branch
   * Goal 6. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.login([Ljava/lang/String;)V: I34 Branch 1 IFNULL L119 - true
   * Goal 7. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.login([Ljava/lang/String;)V: I51 Branch 3 IFNONNULL L122 - true
   * Goal 8. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.login([Ljava/lang/String;)V: I68 Branch 4 IFNONNULL L127 - true
   * Goal 9. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.login([Ljava/lang/String;)V: I85 Branch 5 IFNONNULL L132 - true
   * Goal 10. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.login([Ljava/lang/String;)V: I202 Branch 8 IFEQ L172 - false
   */

	@Test(timeout=300000)
  public void test4()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          byte[] byteArray0 = new byte[10];
          String[] stringArray0 = new String[3];
          ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0);
          Console console0 = new Console((RmiJmxClient) null, (InputStream) byteArrayInputStream0, false, false);
          VirtualDatabaseAdmin virtualDatabaseAdmin0 = console0.getAdminModule();
          virtualDatabaseAdmin0.login(stringArray0);
          assertEquals("VirtualDatabase Administration", virtualDatabaseAdmin0.getDescriptionString());
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 5
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getDescriptionString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getLogin()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getVirtualDbName()Ljava/lang/String;: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.loadCommands()V: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.getPassword()Ljava/lang/String;: root-Branch
   * Goal 6. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.<init>(Lorg/objectweb/cjdbc/console/text/Console;)V: root-Branch
   * Goal 7. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.login([Ljava/lang/String;)V: I34 Branch 1 IFNULL L119 - false
   * Goal 8. org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin.login([Ljava/lang/String;)V: I39 Branch 2 IFLE L119 - true
   */

	@Test(timeout=300000)
  public void test5()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Console console0 = new Console((RmiJmxClient) null, (InputStream) null, true, true);
          VirtualDatabaseAdmin virtualDatabaseAdmin0 = console0.getAdminModule();
          String[] stringArray0 = new String[5];
          stringArray0[0] = "module.database.invalid";
          // Undeclared exception!
          try { 
            virtualDatabaseAdmin0.login(stringArray0);
            fail("Expecting exception: NullPointerException");
          
          } catch(NullPointerException e) {
             //
             // no message in exception (getMessage() returned null)
             //
             assertThrownBy("java.lang.StringBuffer", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }
}
