/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 08:54:24 GMT 2016
 */

package org.objectweb.cjdbc.console.text.module;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.io.InputStream;
import java.io.PipedInputStream;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.TooManyResourcesException;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.console.jmx.RmiJmxClient;
import org.objectweb.cjdbc.console.text.Console;
import org.objectweb.cjdbc.console.text.module.MonitorConsole;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class MonitorConsole_ESTest extends MonitorConsole_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.module.MonitorConsole.getDescriptionString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.module.MonitorConsole.<init>(Lorg/objectweb/cjdbc/console/text/Console;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.module.MonitorConsole.loadCommands()V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.module.MonitorConsole.getCurrentTarget()Ljava/lang/String;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.module.MonitorConsole.setCurrentTarget(Ljava/lang/String;)V: I15 Branch 1 IFEQ L73 - true
   * Goal 6. org.objectweb.cjdbc.console.text.module.MonitorConsole.setCurrentTarget(Ljava/lang/String;)V: I15 Branch 1 IFEQ L73 - false
   * Goal 7. org.objectweb.cjdbc.console.text.module.MonitorConsole.setCurrentTarget(Ljava/lang/String;)V: I25 Branch 2 IFEQ L76 - true
   * Goal 8. org.objectweb.cjdbc.console.text.module.MonitorConsole.setCurrentTarget(Ljava/lang/String;)V: I25 Branch 2 IFEQ L76 - false
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Console console0 = new Console((RmiJmxClient) null, (InputStream) null, true, true);
          MonitorConsole monitorConsole0 = console0.getMonitorModule();
          monitorConsole0.setCurrentTarget("q?I>M}SjU/3G'");
          assertEquals("Monitoring", monitorConsole0.getDescriptionString());
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 1
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.module.MonitorConsole.getDescriptionString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.module.MonitorConsole.<init>(Lorg/objectweb/cjdbc/console/text/Console;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.module.MonitorConsole.loadCommands()V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.module.MonitorConsole.getCurrentTarget()Ljava/lang/String;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.module.MonitorConsole.getPromptString()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Console console0 = new Console((RmiJmxClient) null, (InputStream) null, true, false);
          MonitorConsole monitorConsole0 = console0.getMonitorModule();
          // Undeclared exception!
          try { 
            monitorConsole0.handlePrompt();
            fail("Expecting exception: TooManyResourcesException");
          
          } catch(TooManyResourcesException e) {
             //
             // Loop has been executed more times than the allowed 10000
             //
             assertThrownBy("org.evosuite.runtime.LoopCounter", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 2
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.module.MonitorConsole.getDescriptionString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.module.MonitorConsole.<init>(Lorg/objectweb/cjdbc/console/text/Console;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.module.MonitorConsole.loadCommands()V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.module.MonitorConsole.getCurrentTarget()Ljava/lang/String;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.module.MonitorConsole.login([Ljava/lang/String;)V: I9 Branch 3 IFLE L132 - true
   * Goal 6. org.objectweb.cjdbc.console.text.module.MonitorConsole.login([Ljava/lang/String;)V: I27 Branch 5 IFLE L133 - false
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Console console0 = new Console((RmiJmxClient) null, (InputStream) null, true, true);
          MonitorConsole monitorConsole0 = console0.getMonitorModule();
          String[] stringArray0 = new String[0];
          monitorConsole0.login(stringArray0);
          assertEquals("Monitoring", monitorConsole0.getDescriptionString());
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 3
  /*
   * 7 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.module.MonitorConsole.getDescriptionString()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.module.MonitorConsole.<init>(Lorg/objectweb/cjdbc/console/text/Console;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.module.MonitorConsole.loadCommands()V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.module.MonitorConsole.getCurrentTarget()Ljava/lang/String;: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.text.module.MonitorConsole.login([Ljava/lang/String;)V: I9 Branch 3 IFLE L132 - false
   * Goal 6. org.objectweb.cjdbc.console.text.module.MonitorConsole.login([Ljava/lang/String;)V: I13 Branch 4 IFNULL L132 - true
   * Goal 7. org.objectweb.cjdbc.console.text.module.MonitorConsole.login([Ljava/lang/String;)V: I27 Branch 5 IFLE L133 - false
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Console console0 = new Console((RmiJmxClient) null, (InputStream) null, true, true);
          MonitorConsole monitorConsole0 = new MonitorConsole(console0);
          String[] stringArray0 = new String[3];
          monitorConsole0.login(stringArray0);
          assertEquals("Monitoring", monitorConsole0.getDescriptionString());
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 4
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.module.MonitorConsole.<init>(Lorg/objectweb/cjdbc/console/text/Console;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.module.MonitorConsole.loadCommands()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.module.MonitorConsole.getCurrentTarget()Ljava/lang/String;: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.module.MonitorConsole.login([Ljava/lang/String;)V: I9 Branch 3 IFLE L132 - false
   * Goal 5. org.objectweb.cjdbc.console.text.module.MonitorConsole.login([Ljava/lang/String;)V: I13 Branch 4 IFNULL L132 - false
   * Goal 6. org.objectweb.cjdbc.console.text.module.MonitorConsole.login([Ljava/lang/String;)V: I27 Branch 5 IFLE L133 - true
   */

	@Test(timeout=300000)
  public void test4()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          PipedInputStream pipedInputStream0 = new PipedInputStream(50000);
          Console console0 = new Console((RmiJmxClient) null, (InputStream) pipedInputStream0, false, true);
          MonitorConsole monitorConsole0 = new MonitorConsole(console0);
          String[] stringArray0 = new String[4];
          stringArray0[0] = "K/PH@:3eqOk f>h";
          // Undeclared exception!
          try { 
            monitorConsole0.login(stringArray0);
            fail("Expecting exception: NullPointerException");
          
          } catch(NullPointerException e) {
             //
             // no message in exception (getMessage() returned null)
             //
             assertThrownBy("java.lang.StringBuffer", e);
          }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }
}
