/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 05:23:13 GMT 2016
 */

package org.objectweb.cjdbc.console.views;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.console.views.DatabasesViewer;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class DatabasesViewer_ESTest extends DatabasesViewer_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.views.DatabasesViewer.getTraceableColumns()[I: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.views.DatabasesViewer.<init>([[Ljava/lang/Object;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.views.DatabasesViewer.getColumnNames()[Ljava/lang/String;: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.views.DatabasesViewer.setLabels()V: root-Branch
   * Goal 5. org.objectweb.cjdbc.console.views.DatabasesViewer.getDataTypes([[Ljava/lang/Object;)[[Ljava/lang/Object;: I17 Branch 1 IF_ICMPGE L53 - true
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      Object[][] objectArray0 = new Object[0][0];
      DatabasesViewer databasesViewer0 = new DatabasesViewer(objectArray0);
      int[] intArray0 = databasesViewer0.getTraceableColumns();
      assertEquals("console.infoviewer.database.frame.title", databasesViewer0.getFrameTitle());
      assertArrayEquals(new int[] {1, 2, 3}, intArray0);
  }

  //Test case number: 1
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.views.DatabasesViewer.<init>([[Ljava/lang/Object;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.views.DatabasesViewer.getColumnNames()[Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.views.DatabasesViewer.setLabels()V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.views.DatabasesViewer.getDataTypes([[Ljava/lang/Object;)[[Ljava/lang/Object;: I17 Branch 1 IF_ICMPGE L53 - true
   * Goal 5. org.objectweb.cjdbc.console.views.DatabasesViewer.getDataTypes([[Ljava/lang/Object;)[[Ljava/lang/Object;: I17 Branch 1 IF_ICMPGE L53 - false
   * Goal 6. org.objectweb.cjdbc.console.views.DatabasesViewer.getDataTypes([[Ljava/lang/Object;)[[Ljava/lang/Object;: I54 Branch 2 IF_ICMPGE L59 - true
   * Goal 7. org.objectweb.cjdbc.console.views.DatabasesViewer.getDataTypes([[Ljava/lang/Object;)[[Ljava/lang/Object;: I54 Branch 2 IF_ICMPGE L59 - false
   * Goal 8. org.objectweb.cjdbc.console.views.DatabasesViewer.getDataTypes([[Ljava/lang/Object;)[[Ljava/lang/Object;: I58 Branch 3 IFNE L61 - false
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      Object[][] objectArray0 = new Object[0][4];
      DatabasesViewer databasesViewer0 = new DatabasesViewer(objectArray0);
      String[] stringArray0 = new String[1];
      stringArray0[0] = "";
      Object[][] objectArray1 = new Object[3][8];
      objectArray1[0] = (Object[]) stringArray0;
      // Undeclared exception!
      try { 
        databasesViewer0.displayText(objectArray1);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // [Ljava.lang.Object; cannot be cast to [Ljava.lang.String;
         //
         assertThrownBy("org.objectweb.cjdbc.console.views.DatabasesViewer", e);
      }
  }

  //Test case number: 2
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.views.DatabasesViewer.<init>([[Ljava/lang/Object;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.views.DatabasesViewer.getColumnNames()[Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.views.DatabasesViewer.setLabels()V: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.views.DatabasesViewer.getDataTypes([[Ljava/lang/Object;)[[Ljava/lang/Object;: I17 Branch 1 IF_ICMPGE L53 - true
   * Goal 5. org.objectweb.cjdbc.console.views.DatabasesViewer.getDataTypes([[Ljava/lang/Object;)[[Ljava/lang/Object;: I17 Branch 1 IF_ICMPGE L53 - false
   * Goal 6. org.objectweb.cjdbc.console.views.DatabasesViewer.getDataTypes([[Ljava/lang/Object;)[[Ljava/lang/Object;: I54 Branch 2 IF_ICMPGE L59 - false
   * Goal 7. org.objectweb.cjdbc.console.views.DatabasesViewer.getDataTypes([[Ljava/lang/Object;)[[Ljava/lang/Object;: I58 Branch 3 IFNE L61 - true
   * Goal 8. org.objectweb.cjdbc.console.views.DatabasesViewer.getDataTypes([[Ljava/lang/Object;)[[Ljava/lang/Object;: I58 Branch 3 IFNE L61 - false
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
      Object[][] objectArray0 = new Object[0][0];
      DatabasesViewer databasesViewer0 = new DatabasesViewer(objectArray0);
      String[] stringArray0 = databasesViewer0.getColumnNames();
      Object[][] objectArray1 = new Object[6][6];
      objectArray1[0] = (Object[]) stringArray0;
      // Undeclared exception!
      try { 
        databasesViewer0.getDataTypes(objectArray1);
        fail("Expecting exception: NumberFormatException");
      
      } catch(NumberFormatException e) {
         //
         // For input string: \"console.infoviewer.database.column.1\"
         //
         assertThrownBy("java.lang.NumberFormatException", e);
      }
  }
}
