/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 07:02:29 GMT 2016
 */

package org.objectweb.cjdbc.console.text.commands.dbadmin;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.console.jmx.RmiJmxClient;
import org.objectweb.cjdbc.console.text.Console;
import org.objectweb.cjdbc.console.text.commands.dbadmin.Backup;
import org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Backup_ESTest extends Backup_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.getCommandDescription()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.<init>(Lorg/objectweb/cjdbc/console/text/module/VirtualDatabaseAdmin;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.getCommandParameters()Ljava/lang/String;: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.getCommandName()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Console console0 = new Console((RmiJmxClient) null, (InputStream) null, true, true);
          VirtualDatabaseAdmin virtualDatabaseAdmin0 = console0.getAdminModule();
          Backup backup0 = new Backup(virtualDatabaseAdmin0);
          String string0 = backup0.getUsage();
          assertEquals("command.usage\n   admin.command.backup.description", string0);
          assertEquals("backup", backup0.getCommandName());
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 1
  /*
   * 10 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.<init>(Lorg/objectweb/cjdbc/console/text/module/VirtualDatabaseAdmin;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.getCommandName()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.parse(Ljava/lang/String;)V: I11 Branch 1 IFNULL L65 - false
   * Goal 4. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.parse(Ljava/lang/String;)V: I15 Branch 2 IF_ICMPGE L65 - true
   * Goal 5. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.parse(Ljava/lang/String;)V: I64 Branch 3 IFEQ L74 - false
   * Goal 6. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.parse(Ljava/lang/String;)V: I75 Branch 4 IFEQ L77 - true
   * Goal 7. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.parse(Ljava/lang/String;)V: I75 Branch 4 IFEQ L77 - false
   * Goal 8. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.parse(Ljava/lang/String;)V: I95 Branch 5 IFNONNULL L84 - true
   * Goal 9. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.parse(Ljava/lang/String;)V: I110 Branch 6 IFNONNULL L89 - true
   * Goal 10. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.parse(Ljava/lang/String;)V: I134 Branch 7 IFNULL L94 - false
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          byte[] byteArray0 = new byte[6];
          ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (int) (byte)0, 5);
          Console console0 = new Console((RmiJmxClient) null, (InputStream) byteArrayInputStream0, true, false);
          VirtualDatabaseAdmin virtualDatabaseAdmin0 = new VirtualDatabaseAdmin(console0);
          Backup backup0 = new Backup(virtualDatabaseAdmin0);
          try { 
            backup0.parse("No driver to set a savepoint");
            fail("Expecting exception: NullPointerException");
          
          } catch(NullPointerException e) {
             //
             // no message in exception (getMessage() returned null)
             //
             assertThrownBy("org.objectweb.cjdbc.console.text.commands.dbadmin.Backup", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.<init>(Lorg/objectweb/cjdbc/console/text/module/VirtualDatabaseAdmin;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.getCommandParameters()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.getCommandName()Ljava/lang/String;: root-Branch
   * Goal 4. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.parse(Ljava/lang/String;)V: I11 Branch 1 IFNULL L65 - false
   * Goal 5. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.parse(Ljava/lang/String;)V: I15 Branch 2 IF_ICMPGE L65 - false
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          Console console0 = new Console((RmiJmxClient) null, (InputStream) null, true, false);
          VirtualDatabaseAdmin virtualDatabaseAdmin0 = console0.getAdminModule();
          Backup backup0 = new Backup(virtualDatabaseAdmin0);
          try { 
            backup0.parse("admin.backup.password");
            fail("Expecting exception: Exception");
          
          } catch(Exception e) {
             //
             // Usage: backup admin.command.backup.params
             //
             assertThrownBy("org.objectweb.cjdbc.console.text.commands.dbadmin.Backup", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 3
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.<init>(Lorg/objectweb/cjdbc/console/text/module/VirtualDatabaseAdmin;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.getCommandName()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.parse(Ljava/lang/String;)V: I11 Branch 1 IFNULL L65 - false
   * Goal 4. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.parse(Ljava/lang/String;)V: I15 Branch 2 IF_ICMPGE L65 - true
   * Goal 5. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.parse(Ljava/lang/String;)V: I64 Branch 3 IFEQ L74 - true
   * Goal 6. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.parse(Ljava/lang/String;)V: I95 Branch 5 IFNONNULL L84 - true
   * Goal 7. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.parse(Ljava/lang/String;)V: I110 Branch 6 IFNONNULL L89 - true
   * Goal 8. org.objectweb.cjdbc.console.text.commands.dbadmin.Backup.parse(Ljava/lang/String;)V: I134 Branch 7 IFNULL L94 - true
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          byte[] byteArray0 = new byte[13];
          ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (int) (byte)4, (int) (byte)4);
          Console console0 = new Console((RmiJmxClient) null, (InputStream) byteArrayInputStream0, true, true);
          VirtualDatabaseAdmin virtualDatabaseAdmin0 = new VirtualDatabaseAdmin(console0);
          Backup backup0 = new Backup(virtualDatabaseAdmin0);
          try { 
            backup0.parse("ff xqrt sz \"r$aos");
            fail("Expecting exception: NullPointerException");
          
          } catch(NullPointerException e) {
             //
             // no message in exception (getMessage() returned null)
             //
             assertThrownBy("org.objectweb.cjdbc.console.text.commands.dbadmin.Backup", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }
}
