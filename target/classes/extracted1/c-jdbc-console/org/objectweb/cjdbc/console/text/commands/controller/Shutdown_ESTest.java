/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 08:24:30 GMT 2016
 */

package org.objectweb.cjdbc.console.text.commands.controller;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.io.ByteArrayInputStream;
import java.io.DataInputStream;
import java.io.FileDescriptor;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFileInputStream;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.console.jmx.RmiJmxClient;
import org.objectweb.cjdbc.console.text.Console;
import org.objectweb.cjdbc.console.text.commands.controller.Shutdown;
import org.objectweb.cjdbc.console.text.module.AbstractConsoleModule;
import org.objectweb.cjdbc.console.text.module.MonitorConsole;
import org.objectweb.cjdbc.console.text.module.VirtualDatabaseAdmin;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Shutdown_ESTest extends Shutdown_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.getCommandParameters()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.getCommandName()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.<init>(Lorg/objectweb/cjdbc/console/text/module/AbstractConsoleModule;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          FileDescriptor fileDescriptor0 = new FileDescriptor();
          MockFileInputStream mockFileInputStream0 = new MockFileInputStream(fileDescriptor0);
          Console console0 = new Console((RmiJmxClient) null, (InputStream) mockFileInputStream0, true, true);
          MonitorConsole monitorConsole0 = new MonitorConsole(console0);
          Shutdown shutdown0 = new Shutdown((AbstractConsoleModule) monitorConsole0);
          String string0 = shutdown0.getCommandParameters();
          assertEquals("shutdown", shutdown0.getCommandName());
          assertEquals("[mode]", string0);
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.getCommandName()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.<init>(Lorg/objectweb/cjdbc/console/text/module/AbstractConsoleModule;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.getCommandDescription()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Console console0 = new Console((RmiJmxClient) null, (InputStream) null, true, true);
          VirtualDatabaseAdmin virtualDatabaseAdmin0 = console0.getAdminModule();
          Shutdown shutdown0 = new Shutdown((AbstractConsoleModule) virtualDatabaseAdmin0);
          String string0 = shutdown0.getCommandDescription();
          assertEquals("controller.command.shutdown", string0);
          assertEquals("shutdown", shutdown0.getCommandName());
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 2
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.getCommandName()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.<init>(Lorg/objectweb/cjdbc/console/text/module/AbstractConsoleModule;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.parse(Ljava/lang/String;)V: I7 Branch 1 IF_ICMPEQ L64 - true
   * Goal 4. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.parse(Ljava/lang/String;)V: I23 Branch 2 IF_ICMPEQ L66 - true
   * Goal 5. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.parse(Ljava/lang/String;)V: I39 Branch 3 IF_ICMPEQ L68 - false
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          byte[] byteArray0 = new byte[7];
          ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (-304), 4);
          DataInputStream dataInputStream0 = new DataInputStream((InputStream) byteArrayInputStream0);
          Console console0 = new Console((RmiJmxClient) null, (InputStream) dataInputStream0, false, true);
          VirtualDatabaseAdmin virtualDatabaseAdmin0 = new VirtualDatabaseAdmin(console0);
          Shutdown shutdown0 = new Shutdown((AbstractConsoleModule) virtualDatabaseAdmin0);
          // Undeclared exception!
          try { 
            shutdown0.parse("|Xn3epk*?4");
            fail("Expecting exception: NullPointerException");
          
          } catch(NullPointerException e) {
             //
             // no message in exception (getMessage() returned null)
             //
             assertThrownBy("org.objectweb.cjdbc.console.text.commands.controller.Shutdown", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.getCommandName()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.<init>(Lorg/objectweb/cjdbc/console/text/module/AbstractConsoleModule;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.parse(Ljava/lang/String;)V: I7 Branch 1 IF_ICMPEQ L64 - false
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          Console console0 = new Console((RmiJmxClient) null, (InputStream) null, true, true);
          VirtualDatabaseAdmin virtualDatabaseAdmin0 = console0.getAdminModule();
          Shutdown shutdown0 = new Shutdown((AbstractConsoleModule) virtualDatabaseAdmin0);
          // Undeclared exception!
          try { 
            shutdown0.parse("yt42.R");
            fail("Expecting exception: NullPointerException");
          
          } catch(NullPointerException e) {
             //
             // no message in exception (getMessage() returned null)
             //
             assertThrownBy("org.objectweb.cjdbc.console.text.commands.controller.Shutdown", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 4
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.getCommandName()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.<init>(Lorg/objectweb/cjdbc/console/text/module/AbstractConsoleModule;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.parse(Ljava/lang/String;)V: I7 Branch 1 IF_ICMPEQ L64 - true
   * Goal 4. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.parse(Ljava/lang/String;)V: I23 Branch 2 IF_ICMPEQ L66 - false
   */

	@Test(timeout=300000)
  public void test4()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          PipedInputStream pipedInputStream0 = new PipedInputStream(2786);
          Console console0 = new Console((RmiJmxClient) null, (InputStream) pipedInputStream0, true, true);
          MonitorConsole monitorConsole0 = console0.getMonitorModule();
          Shutdown shutdown0 = new Shutdown((AbstractConsoleModule) monitorConsole0);
          // Undeclared exception!
          try { 
            shutdown0.parse("1");
            fail("Expecting exception: NullPointerException");
          
          } catch(NullPointerException e) {
             //
             // no message in exception (getMessage() returned null)
             //
             assertThrownBy("org.objectweb.cjdbc.console.text.commands.controller.Shutdown", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 5
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.getCommandName()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.<init>(Lorg/objectweb/cjdbc/console/text/module/AbstractConsoleModule;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.parse(Ljava/lang/String;)V: I7 Branch 1 IF_ICMPEQ L64 - true
   * Goal 4. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.parse(Ljava/lang/String;)V: I23 Branch 2 IF_ICMPEQ L66 - true
   * Goal 5. org.objectweb.cjdbc.console.text.commands.controller.Shutdown.parse(Ljava/lang/String;)V: I39 Branch 3 IF_ICMPEQ L68 - true
   */

	@Test(timeout=300000)
  public void test5()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          Console console0 = new Console((RmiJmxClient) null, (InputStream) null, true, true);
          VirtualDatabaseAdmin virtualDatabaseAdmin0 = console0.getAdminModule();
          Shutdown shutdown0 = new Shutdown((AbstractConsoleModule) virtualDatabaseAdmin0);
          // Undeclared exception!
          try { 
            shutdown0.parse("Unknown periodicity type.");
            fail("Expecting exception: NullPointerException");
          
          } catch(NullPointerException e) {
             //
             // no message in exception (getMessage() returned null)
             //
             assertThrownBy("org.objectweb.cjdbc.console.text.commands.controller.Shutdown", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }
}
