/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 08:18:57 GMT 2016
 */

package org.objectweb.cjdbc.console.text.commands.controller;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.io.ByteArrayInputStream;
import java.io.InputStream;
import java.io.PipedInputStream;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;
import java.util.concurrent.Future;
import java.util.concurrent.TimeUnit;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.console.jmx.RmiJmxClient;
import org.objectweb.cjdbc.console.text.Console;
import org.objectweb.cjdbc.console.text.commands.controller.AddDriver;
import org.objectweb.cjdbc.console.text.module.AbstractConsoleModule;
import org.objectweb.cjdbc.console.text.module.ControllerConsole;
import org.objectweb.cjdbc.console.text.module.MonitorConsole;
import org.objectweb.cjdbc.console.text.module.VirtualDatabaseConsole;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class AddDriver_ESTest extends AddDriver_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.<init>(Lorg/objectweb/cjdbc/console/text/module/AbstractConsoleModule;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.getCommandName()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.parse(Ljava/lang/String;)V: I7 Branch 1 IFNULL L63 - true
   * Goal 4. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.parse(Ljava/lang/String;)V: I38 Branch 3 IFNULL L77 - false
   * Goal 5. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.parse(Ljava/lang/String;)V: I42 Branch 4 IFLE L77 - false
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          byte[] byteArray0 = new byte[1];
          ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (int) (byte) (-39), (int) (byte) (-39));
          Console console0 = new Console((RmiJmxClient) null, (InputStream) byteArrayInputStream0, true, false);
          VirtualDatabaseConsole virtualDatabaseConsole0 = new VirtualDatabaseConsole(console0);
          AddDriver addDriver0 = new AddDriver((AbstractConsoleModule) virtualDatabaseConsole0);
          try { 
            addDriver0.parse((String) null);
            fail("Expecting exception: Exception");
          
          } catch(Exception e) {
             //
             // controller.command.add.driver.null.filename
             //
             assertThrownBy("org.objectweb.cjdbc.console.text.commands.controller.AddDriver", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.<init>(Lorg/objectweb/cjdbc/console/text/module/AbstractConsoleModule;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.getCommandParameters()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.getCommandName()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          Console console0 = new Console((RmiJmxClient) null, (InputStream) null, true, true);
          ControllerConsole controllerConsole0 = console0.getControllerModule();
          AddDriver addDriver0 = new AddDriver((AbstractConsoleModule) controllerConsole0);
          String string0 = addDriver0.getCommandParameters();
          assertEquals("upload driver", addDriver0.getCommandName());
          assertEquals("controller.command.add.driver.params", string0);
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.<init>(Lorg/objectweb/cjdbc/console/text/module/AbstractConsoleModule;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.getCommandName()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.getCommandDescription()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
          PipedInputStream pipedInputStream0 = new PipedInputStream();
          Console console0 = new Console((RmiJmxClient) null, (InputStream) pipedInputStream0, false, false);
          MonitorConsole monitorConsole0 = new MonitorConsole(console0);
          AddDriver addDriver0 = new AddDriver((AbstractConsoleModule) monitorConsole0);
          String string0 = addDriver0.getCommandDescription();
          assertEquals("upload driver", addDriver0.getCommandName());
          assertEquals("controller.command.add.driver.description", string0);
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.<init>(Lorg/objectweb/cjdbc/console/text/module/AbstractConsoleModule;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.getCommandName()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.parse(Ljava/lang/String;)V: I7 Branch 1 IFNULL L63 - false
   * Goal 4. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.parse(Ljava/lang/String;)V: I12 Branch 2 IFLE L63 - false
   * Goal 5. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.parse(Ljava/lang/String;)V: I38 Branch 3 IFNULL L77 - true
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          PipedInputStream pipedInputStream0 = new PipedInputStream();
          Console console0 = new Console((RmiJmxClient) null, (InputStream) pipedInputStream0, true, true);
          MonitorConsole monitorConsole0 = new MonitorConsole(console0);
          AddDriver addDriver0 = new AddDriver((AbstractConsoleModule) monitorConsole0);
          try { 
            addDriver0.parse("");
            fail("Expecting exception: Exception");
          
          } catch(Exception e) {
             //
             // controller.command.add.driver.null.filename
             //
             assertThrownBy("org.objectweb.cjdbc.console.text.commands.controller.AddDriver", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }

  //Test case number: 4
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.<init>(Lorg/objectweb/cjdbc/console/text/module/AbstractConsoleModule;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.getCommandName()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.parse(Ljava/lang/String;)V: I7 Branch 1 IFNULL L63 - false
   * Goal 4. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.parse(Ljava/lang/String;)V: I12 Branch 2 IFLE L63 - true
   * Goal 5. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.parse(Ljava/lang/String;)V: I38 Branch 3 IFNULL L77 - false
   * Goal 6. org.objectweb.cjdbc.console.text.commands.controller.AddDriver.parse(Ljava/lang/String;)V: I42 Branch 4 IFLE L77 - true
   */

	@Test(timeout=300000)
  public void test4()  throws Throwable  {
    Future<?> future = executor.submit(new Runnable(){ 
            @Override public void run() { 
        try {
          byte[] byteArray0 = new byte[5];
          ByteArrayInputStream byteArrayInputStream0 = new ByteArrayInputStream(byteArray0, (int) (byte) (-90), (int) (byte) (-90));
          Console console0 = new Console((RmiJmxClient) null, (InputStream) byteArrayInputStream0, false, false);
          VirtualDatabaseConsole virtualDatabaseConsole0 = new VirtualDatabaseConsole(console0);
          AddDriver addDriver0 = new AddDriver((AbstractConsoleModule) virtualDatabaseConsole0);
          try { 
            addDriver0.parse("qCJ'~}#hVwFqW+Qg'Q");
            fail("Expecting exception: Exception");
          
          } catch(Exception e) {
             //
             // controller.command.add.driver.sent.failed
             //
             assertThrownBy("org.objectweb.cjdbc.console.text.commands.controller.AddDriver", e);
          }
        } catch(Throwable t) {
            // Need to catch declared exceptions
        }
      } 
    });
    future.get(4000, TimeUnit.MILLISECONDS);
  }
}
