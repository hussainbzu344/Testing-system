/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 15:50:45 GMT 2016
 */

package org.objectweb.cjdbc.common.jmx.notifications;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.util.Hashtable;
import org.dom4j.bean.BeanElement;
import org.dom4j.dom.DOMElement;
import org.dom4j.tree.BaseElement;
import org.dom4j.tree.DefaultElement;
import org.dom4j.util.NonLazyElement;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.jmx.notifications.JmxNotification;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class JmxNotification_ESTest extends JmxNotification_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.setType(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      Hashtable<String, BaseElement> hashtable0 = new Hashtable<String, BaseElement>();
      JmxNotification jmxNotification0 = new JmxNotification("", "", "!A`:(Yv:~(=|", "", "", "", "!A`:(Yv:~(=|", "", "", "!A`:(Yv:~(=|", (Hashtable) hashtable0);
      jmxNotification0.setType("!A`:(Yv:~(=|");
      assertEquals("", jmxNotification0.getMbeanServerIP());
      assertEquals("", jmxNotification0.getDescription());
      assertEquals("!A`:(Yv:~(=|", jmxNotification0.getMbeanClass());
      assertEquals("!A`:(Yv:~(=|", jmxNotification0.getType());
      assertEquals("", jmxNotification0.getMbeanName());
      assertEquals("", jmxNotification0.getTime());
      assertEquals("!A`:(Yv:~(=|", jmxNotification0.getMbeanServerPort());
      assertEquals("", jmxNotification0.getControllerName());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.setPriority(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      JmxNotification jmxNotification0 = new JmxNotification("", "z}r61ZhtrNB)r1|[6", "controller", ":mk", "jmxevent", "Node doesn't have attributes", "", "", "=~{SBnB", "jmxevent", (Hashtable) null);
      jmxNotification0.setPriority((String) null);
      assertEquals("=~{SBnB", jmxNotification0.getMbeanServerIP());
      assertEquals(":mk", jmxNotification0.getDescription());
      assertEquals("", jmxNotification0.getMbeanClass());
      assertEquals("", jmxNotification0.getMbeanName());
      assertEquals("Node doesn't have attributes", jmxNotification0.getControllerName());
      assertEquals("jmxevent", jmxNotification0.getTime());
      assertEquals("jmxevent", jmxNotification0.getMbeanServerPort());
      assertEquals("z}r61ZhtrNB)r1|[6", jmxNotification0.getSequence());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.getControllerName()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      Hashtable<BaseElement, Integer> hashtable0 = new Hashtable<BaseElement, Integer>();
      JmxNotification jmxNotification0 = new JmxNotification("d#1W", "", "", "d#1W", "d#1W", (String) null, "ip", "Specified node cannot be a child of element", "C9[_u+>}9v", "ip", (Hashtable) hashtable0);
      String string0 = jmxNotification0.getControllerName();
      assertEquals("d#1W", jmxNotification0.getDescription());
      assertNull(string0);
      assertEquals("d#1W", jmxNotification0.getTime());
      assertEquals("", jmxNotification0.getSequence());
      assertEquals("", jmxNotification0.getType());
      assertEquals("ip", jmxNotification0.getMbeanServerPort());
      assertEquals("Specified node cannot be a child of element", jmxNotification0.getMbeanName());
      assertEquals("ip", jmxNotification0.getMbeanClass());
      assertEquals("C9[_u+>}9v", jmxNotification0.getMbeanServerIP());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.setMbeanClass(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      Hashtable<DefaultElement, BaseElement> hashtable0 = new Hashtable<DefaultElement, BaseElement>();
      JmxNotification jmxNotification0 = new JmxNotification("=t", "=t", "=t", "=t", "=t", "Rwwg3`", "=t", "Rwwg3`", "value", "MEaD&aiv4|X+h", (Hashtable) hashtable0);
      assertEquals("=t", jmxNotification0.getMbeanClass());
      
      jmxNotification0.setMbeanClass("MEaD&aiv4|X+h");
      assertEquals("MEaD&aiv4|X+h", jmxNotification0.getMbeanClass());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.getSequence()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      Hashtable<BaseElement, Integer> hashtable0 = new Hashtable<BaseElement, Integer>();
      JmxNotification jmxNotification0 = new JmxNotification("d#1W", "", "", "d#1W", "d#1W", (String) null, "ip", "Specified node cannot be a child of element", "C9[_u+>}9v", "ip", (Hashtable) hashtable0);
      String string0 = jmxNotification0.getSequence();
      assertEquals("ip", jmxNotification0.getMbeanServerPort());
      assertEquals("d#1W", jmxNotification0.getTime());
      assertNotNull(string0);
      assertEquals("ip", jmxNotification0.getMbeanClass());
      assertEquals("Specified node cannot be a child of element", jmxNotification0.getMbeanName());
      assertEquals("C9[_u+>}9v", jmxNotification0.getMbeanServerIP());
      assertEquals("d#1W", jmxNotification0.getDescription());
      assertEquals("", string0);
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.getPriority()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      Hashtable<NonLazyElement, BeanElement> hashtable0 = new Hashtable<NonLazyElement, BeanElement>();
      JmxNotification jmxNotification0 = new JmxNotification((String) null, (String) null, (String) null, (String) null, (String) null, "jlP4*U>8?Sw", (String) null, (String) null, (String) null, (String) null, (Hashtable) hashtable0);
      String string0 = jmxNotification0.getPriority();
      assertNull(string0);
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.setMbeanName(Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      JmxNotification jmxNotification0 = new JmxNotification("", "z}r61ZhtrNB)r1|[6", "controller", ":mk", "jmxevent", "Node doesn't have attributes", "", "", "=~{SBnB", "jmxevent", (Hashtable) null);
      assertEquals("", jmxNotification0.getMbeanName());
      
      jmxNotification0.setMbeanName("W?^*");
      assertEquals("W?^*", jmxNotification0.getMbeanName());
  }

  //Test case number: 7
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.getMbeanServerPort()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.getControllerJmxName()Ljava/lang/String;: root-Branch
   * Goal 4. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.getMbeanServerIP()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      Hashtable<DOMElement, BaseElement> hashtable0 = new Hashtable<DOMElement, BaseElement>();
      JmxNotification jmxNotification0 = new JmxNotification("V", "Specified node cannot be a child of element", (String) null, (String) null, "org.dom4j.QName", "section = ", "]NJqf", "]NJqf", "Specified node cannot be a child of element", "i#6<}^[q8+)B*_+X3p", (Hashtable) hashtable0);
      String string0 = jmxNotification0.getControllerJmxName();
      assertEquals("Specified node cannot be a child of element:i#6<}^[q8+)B*_+X3p", string0);
      assertEquals("section = ", jmxNotification0.getControllerName());
      assertEquals("org.dom4j.QName", jmxNotification0.getTime());
      assertEquals("]NJqf", jmxNotification0.getMbeanName());
      assertEquals("Specified node cannot be a child of element", jmxNotification0.getSequence());
      assertEquals("]NJqf", jmxNotification0.getMbeanClass());
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.getType()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      JmxNotification jmxNotification0 = new JmxNotification("", "z}r61ZhtrNB)r1|[6", "controller", ":mk", "jmxevent", "Node doesn't have attributes", "", "", "=~{SBnB", "jmxevent", (Hashtable) null);
      String string0 = jmxNotification0.getType();
      assertEquals("controller", string0);
      assertEquals("jmxevent", jmxNotification0.getTime());
      assertEquals(":mk", jmxNotification0.getDescription());
      assertEquals("=~{SBnB", jmxNotification0.getMbeanServerIP());
      assertEquals("", jmxNotification0.getMbeanName());
      assertNotNull(string0);
      assertEquals("", jmxNotification0.getMbeanClass());
      assertEquals("z}r61ZhtrNB)r1|[6", jmxNotification0.getSequence());
      assertEquals("jmxevent", jmxNotification0.getMbeanServerPort());
      assertEquals("Node doesn't have attributes", jmxNotification0.getControllerName());
  }

  //Test case number: 9
  /*
   * 1 covered goal:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.createNotificationFromXmlString(Ljava/lang/String;)Lorg/objectweb/cjdbc/common/jmx/notifications/JmxNotification;: root-Branch
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      try { 
        JmxNotification.createNotificationFromXmlString((String) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.io.StringReader", e);
      }
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.setTime(Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      JmxNotification jmxNotification0 = new JmxNotification("\n]", "\n]", "\n]", "", "\n]", (String) null, "\n]", (String) null, (String) null, "\n]", (Hashtable) null);
      assertEquals("\n]", jmxNotification0.getTime());
      
      jmxNotification0.setTime("");
      assertEquals("", jmxNotification0.getTime());
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.toString()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      Hashtable<DefaultElement, BaseElement> hashtable0 = new Hashtable<DefaultElement, BaseElement>();
      JmxNotification jmxNotification0 = new JmxNotification("=t", "", "", "=t", "", "Rwwg3`", "", "Rwwg3`", "value", "MEaD&aiv4|X+h", (Hashtable) hashtable0);
      // Undeclared exception!
      try { 
        jmxNotification0.toString();
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/dom4j/DocumentFactory
         //
         assertThrownBy("org.dom4j.tree.NamespaceStack", e);
      }
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.getDataList()Ljava/util/Hashtable;: root-Branch
   */

	@Test(timeout=300000)
  public void test12()  throws Throwable  {
      JmxNotification jmxNotification0 = new JmxNotification("", "z}r61ZhtrNB)r1|[6", "controller", ":mk", "jmxevent", "Node doesn't have attributes", "", "", "=~{SBnB", "jmxevent", (Hashtable) null);
      jmxNotification0.getDataList();
      assertEquals("controller", jmxNotification0.getType());
      assertEquals("Node doesn't have attributes", jmxNotification0.getControllerName());
      assertEquals(":mk", jmxNotification0.getDescription());
      assertEquals("jmxevent", jmxNotification0.getTime());
      assertEquals("=~{SBnB", jmxNotification0.getMbeanServerIP());
      assertEquals("z}r61ZhtrNB)r1|[6", jmxNotification0.getSequence());
      assertEquals("jmxevent", jmxNotification0.getMbeanServerPort());
      assertEquals("", jmxNotification0.getMbeanName());
      assertEquals("", jmxNotification0.getMbeanClass());
  }

  //Test case number: 13
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.getMbeanClass()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test13()  throws Throwable  {
      Hashtable<BaseElement, BaseElement> hashtable0 = new Hashtable<BaseElement, BaseElement>();
      JmxNotification jmxNotification0 = new JmxNotification("GQ>jufPlA'oW>Us", "J*^", "GQ>jufPlA'oW>Us", "", "", "", "", "", "J*^", "", (Hashtable) hashtable0);
      String string0 = jmxNotification0.getMbeanClass();
      assertNotNull(string0);
      assertEquals("J*^", jmxNotification0.getMbeanServerIP());
      assertEquals("J*^", jmxNotification0.getSequence());
      assertEquals("", jmxNotification0.getMbeanServerPort());
      assertEquals("", jmxNotification0.getControllerName());
      assertEquals("GQ>jufPlA'oW>Us", jmxNotification0.getType());
      assertEquals("", jmxNotification0.getTime());
      assertEquals("", string0);
      assertEquals("", jmxNotification0.getMbeanName());
      assertEquals("", jmxNotification0.getDescription());
  }

  //Test case number: 14
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.setDescription(Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test14()  throws Throwable  {
      Hashtable<Integer, BeanElement> hashtable0 = new Hashtable<Integer, BeanElement>();
      JmxNotification jmxNotification0 = new JmxNotification("", "", " .N g}IQgUCQ0WZP8", "org.dom4j.util.UserDataElement", "org.dom4j.util.UserDataElement", " .N g}IQgUCQ0WZP8", "org.dom4j.util.UserDataElement", "", "[c-^*:q>sQIjH:dI", "", (Hashtable) hashtable0);
      assertEquals("org.dom4j.util.UserDataElement", jmxNotification0.getDescription());
      
      jmxNotification0.setDescription("");
      assertEquals("", jmxNotification0.getDescription());
  }

  //Test case number: 15
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.getTime()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test15()  throws Throwable  {
      Hashtable<DOMElement, BaseElement> hashtable0 = new Hashtable<DOMElement, BaseElement>();
      JmxNotification jmxNotification0 = new JmxNotification("V", "Specified node cannot be a child of element", (String) null, (String) null, "org.dom4j.QName", "section = ", "]NJqf", "]NJqf", "Specified node cannot be a child of element", "i#6<}^[q8+)B*_+X3p", (Hashtable) hashtable0);
      String string0 = jmxNotification0.getTime();
      assertEquals("org.dom4j.QName", string0);
      assertNotNull(string0);
      assertEquals("section = ", jmxNotification0.getControllerName());
      assertEquals("Specified node cannot be a child of element", jmxNotification0.getMbeanServerIP());
      assertEquals("]NJqf", jmxNotification0.getMbeanName());
      assertEquals("]NJqf", jmxNotification0.getMbeanClass());
      assertEquals("i#6<}^[q8+)B*_+X3p", jmxNotification0.getMbeanServerPort());
      assertEquals("Specified node cannot be a child of element", jmxNotification0.getSequence());
  }

  //Test case number: 16
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.getDescription()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test16()  throws Throwable  {
      Hashtable<DefaultElement, BaseElement> hashtable0 = new Hashtable<DefaultElement, BaseElement>();
      JmxNotification jmxNotification0 = new JmxNotification("=t", "=t", "=t", "=t", "=t", "Rwwg3`", "=t", "Rwwg3`", "value", "MEaD&aiv4|X+h", (Hashtable) hashtable0);
      String string0 = jmxNotification0.getDescription();
      assertNotNull(string0);
      assertEquals("Rwwg3`", jmxNotification0.getControllerName());
      assertEquals("=t", string0);
      assertEquals("MEaD&aiv4|X+h", jmxNotification0.getMbeanServerPort());
      assertEquals("=t", jmxNotification0.getMbeanClass());
      assertEquals("value", jmxNotification0.getMbeanServerIP());
      assertEquals("=t", jmxNotification0.getTime());
      assertEquals("Rwwg3`", jmxNotification0.getMbeanName());
  }

  //Test case number: 17
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.getMbeanName()Ljava/lang/String;: root-Branch
   */

	@Test(timeout=300000)
  public void test17()  throws Throwable  {
      Hashtable<BeanElement, String> hashtable0 = new Hashtable<BeanElement, String>();
      JmxNotification jmxNotification0 = new JmxNotification((String) null, "?]F\"iv(aG1v{}*{4:/", "ip", "", "zW[hLgbB)/^2jM%\"", "zW[hLgbB)/^2jM%\"", "q&syAy~", "MA$|", "", "q&syAy~", (Hashtable) hashtable0);
      String string0 = jmxNotification0.getMbeanName();
      assertEquals("", jmxNotification0.getDescription());
      assertEquals("q&syAy~", jmxNotification0.getMbeanClass());
      assertEquals("q&syAy~", jmxNotification0.getMbeanServerPort());
      assertEquals("", jmxNotification0.getMbeanServerIP());
      assertNotNull(string0);
      assertEquals("zW[hLgbB)/^2jM%\"", jmxNotification0.getTime());
      assertEquals("MA$|", string0);
      assertEquals("ip", jmxNotification0.getType());
      assertEquals("zW[hLgbB)/^2jM%\"", jmxNotification0.getControllerName());
  }

  //Test case number: 18
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.setControllerName(Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test18()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      JmxNotification jmxNotification0 = new JmxNotification((String) null, "v(=|xu3b_m%}uJ'", "v(=|xu3b_m%}uJ'", "v(=|xu3b_m%}uJ'", (String) null, "v(=|xu3b_m%}uJ'", "=d4kk/0/[X'N>$Da", "=d4kk/0/[X'N>$Da", (String) null, "v(=|xu3b_m%}uJ'", (Hashtable) hashtable0);
      jmxNotification0.setControllerName("");
      assertEquals("", jmxNotification0.getControllerName());
  }

  //Test case number: 19
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.setMbeanServerPort(Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test19()  throws Throwable  {
      Hashtable<BeanElement, BeanElement> hashtable0 = new Hashtable<BeanElement, BeanElement>();
      JmxNotification jmxNotification0 = new JmxNotification("", "", "", "YRu5fRRB?Y$p\"@Y", "dgSN40&", "#c)<^I:^", "#c)<^I:^", "]]>", (String) null, "#c)<^I:^", (Hashtable) hashtable0);
      assertEquals("#c)<^I:^", jmxNotification0.getMbeanServerPort());
      
      jmxNotification0.setMbeanServerPort("dgSN40&");
      assertEquals("dgSN40&", jmxNotification0.getMbeanServerPort());
  }

  //Test case number: 20
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.setMbeanServerIP(Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test20()  throws Throwable  {
      Hashtable<Integer, DOMElement> hashtable0 = new Hashtable<Integer, DOMElement>();
      JmxNotification jmxNotification0 = new JmxNotification((String) null, ">ms<U", (String) null, (String) null, (String) null, "p\"wWWBlh4WWrHx}s1", "p\"wWWBlh4WWrHx}s1", "?&df:v*W4Q J$QG(,", "internal/error-reporter", "p\"wWWBlh4WWrHx}s1", (Hashtable) hashtable0);
      assertEquals("internal/error-reporter", jmxNotification0.getMbeanServerIP());
      
      jmxNotification0.setMbeanServerIP((String) null);
      assertEquals("p\"wWWBlh4WWrHx}s1", jmxNotification0.getMbeanServerPort());
      assertEquals("p\"wWWBlh4WWrHx}s1", jmxNotification0.getControllerName());
      assertEquals("?&df:v*W4Q J$QG(,", jmxNotification0.getMbeanName());
      assertEquals("p\"wWWBlh4WWrHx}s1", jmxNotification0.getMbeanClass());
  }

  //Test case number: 21
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.setDataList(Ljava/util/Hashtable;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test21()  throws Throwable  {
      Hashtable<DOMElement, Integer> hashtable0 = new Hashtable<DOMElement, Integer>();
      JmxNotification jmxNotification0 = new JmxNotification((String) null, (String) null, (String) null, (String) null, "name", "", (String) null, "mb?P%TG?cHrUr*PX", "", ":", (Hashtable) hashtable0);
      jmxNotification0.setDataList(hashtable0);
      assertEquals("name", jmxNotification0.getTime());
      assertEquals("", jmxNotification0.getMbeanServerIP());
      assertEquals("mb?P%TG?cHrUr*PX", jmxNotification0.getMbeanName());
      assertEquals(":", jmxNotification0.getMbeanServerPort());
  }

  //Test case number: 22
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.setSequence(Ljava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test22()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      JmxNotification jmxNotification0 = new JmxNotification((String) null, "v(=|xu3b_m%}uJ'", "v(=|xu3b_m%}uJ'", "v(=|xu3b_m%}uJ'", (String) null, "v(=|xu3b_m%}uJ'", "=d4kk/0/[X'N>$Da", "=d4kk/0/[X'N>$Da", (String) null, "v(=|xu3b_m%}uJ'", (Hashtable) hashtable0);
      jmxNotification0.setSequence("|RL|=3f?|2]w");
      assertEquals("|RL|=3f?|2]w", jmxNotification0.getSequence());
  }

  //Test case number: 23
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.getDataValue(Ljava/lang/String;)Ljava/lang/String;: I6 Branch 1 IFNE L182 - true
   */

	@Test(timeout=300000)
  public void test23()  throws Throwable  {
      Hashtable<String, Object> hashtable0 = new Hashtable<String, Object>();
      JmxNotification jmxNotification0 = new JmxNotification((String) null, "v(=|xu3b_m%}uJ'", "v(=|xu3b_m%}uJ'", "v(=|xu3b_m%}uJ'", (String) null, "v(=|xu3b_m%}uJ'", "=d4kk/0/[X'N>$Da", "=d4kk/0/[X'N>$Da", (String) null, "v(=|xu3b_m%}uJ'", (Hashtable) hashtable0);
      hashtable0.put("", jmxNotification0);
      // Undeclared exception!
      try { 
        jmxNotification0.getDataValue("");
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.objectweb.cjdbc.common.jmx.notifications.JmxNotification cannot be cast to java.util.ArrayList
         //
         assertThrownBy("org.objectweb.cjdbc.common.jmx.notifications.JmxNotification", e);
      }
  }

  //Test case number: 24
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.<init>(Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/lang/String;Ljava/util/Hashtable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.jmx.notifications.JmxNotification.getDataValue(Ljava/lang/String;)Ljava/lang/String;: I6 Branch 1 IFNE L182 - false
   */

	@Test(timeout=300000)
  public void test24()  throws Throwable  {
      Hashtable<DOMElement, BaseElement> hashtable0 = new Hashtable<DOMElement, BaseElement>();
      JmxNotification jmxNotification0 = new JmxNotification("V", "Specified node cannot be a child of element", (String) null, (String) null, "org.dom4j.QName", "section = ", "]NJqf", "]NJqf", "Specified node cannot be a child of element", "i#6<}^[q8+)B*_+X3p", (Hashtable) hashtable0);
      jmxNotification0.getDataValue(":<P))sY$T!");
      assertEquals("]NJqf", jmxNotification0.getMbeanClass());
      assertEquals("Specified node cannot be a child of element", jmxNotification0.getSequence());
      assertEquals("org.dom4j.QName", jmxNotification0.getTime());
      assertEquals("Specified node cannot be a child of element", jmxNotification0.getMbeanServerIP());
      assertEquals("]NJqf", jmxNotification0.getMbeanName());
      assertEquals("section = ", jmxNotification0.getControllerName());
      assertEquals("i#6<}^[q8+)B*_+X3p", jmxNotification0.getMbeanServerPort());
  }
}
