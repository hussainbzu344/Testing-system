/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 15:16:42 GMT 2016
 */

package org.objectweb.cjdbc.common.sql;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.io.IOException;
import java.io.InputStream;
import java.sql.SQLException;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.sql.AlterRequest;
import org.objectweb.cjdbc.common.sql.StoredProcedure;
import org.objectweb.cjdbc.common.sql.UpdateRequest;
import org.objectweb.cjdbc.common.sql.schema.DatabaseSchema;
import org.objectweb.cjdbc.common.stream.CJDBCInputStream;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class AlterRequest_ESTest extends AlterRequest_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.AlterRequest.<init>(Ljava/lang/String;ZILjava/lang/String;Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.AlterRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.AlterRequest.returnsResultSet()Z: root-Branch
   * Goal 4. org.objectweb.cjdbc.common.sql.AlterRequest.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I3 Branch 1 IFNE L139 - false
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      AlterRequest alterRequest0 = new AlterRequest("", true, 0, "", (DatabaseSchema) null, 0, true);
      boolean boolean0 = alterRequest0.returnsResultSet();
      assertTrue(alterRequest0.isParsed());
      assertFalse(alterRequest0.isAdd());
      assertFalse(boolean0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.AlterRequest.needsMacroProcessing()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.AlterRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      AlterRequest alterRequest0 = new AlterRequest("Malformed Alter Request. Should start with [ALTER TABLE]", true, 0, (String) null);
      boolean boolean0 = alterRequest0.needsMacroProcessing();
      assertFalse(boolean0);
      assertFalse(alterRequest0.isAdd());
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * Goal 1. org.objectweb.cjdbc.common.sql.AlterRequest.<init>(Lorg/objectweb/cjdbc/common/stream/CJDBCInputStream;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
      CJDBCInputStream cJDBCInputStream0 = new CJDBCInputStream((InputStream) null);
      AlterRequest alterRequest0 = null;
      try {
        alterRequest0 = new AlterRequest(cJDBCInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         assertThrownBy("java.io.BufferedInputStream", e);
      }
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.AlterRequest.getDatabaseTable()Lorg/objectweb/cjdbc/common/sql/schema/DatabaseTable;: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.AlterRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
      AlterRequest alterRequest0 = new AlterRequest("Malformed Alter Request. Should start with [ALTER TABLE]", true, 0, (String) null);
      alterRequest0.getDatabaseTable();
      assertFalse(alterRequest0.isAdd());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.AlterRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.AlterRequest.isAdd()Z: root-Branch
   */

	@Test(timeout=300000)
  public void test4()  throws Throwable  {
      AlterRequest alterRequest0 = new AlterRequest("Malformed Alter Request. Should start with [ALTER TABLE]", true, 0, (String) null);
      boolean boolean0 = alterRequest0.isAdd();
      assertFalse(boolean0);
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.AlterRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.AlterRequest.getColumn()Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;: root-Branch
   */

	@Test(timeout=300000)
  public void test5()  throws Throwable  {
      AlterRequest alterRequest0 = new AlterRequest("q#_~! 4@TF^1]p", false, 0, ".#]JD+42FcJJq3\u0006");
      alterRequest0.getColumn();
      assertFalse(alterRequest0.isAdd());
  }

  //Test case number: 6
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.AlterRequest.<init>(Ljava/lang/String;ZILjava/lang/String;Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.AlterRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.AlterRequest.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I3 Branch 1 IFNE L139 - true
   * Goal 4. org.objectweb.cjdbc.common.sql.AlterRequest.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I32 Branch 2 IF_ICMPNE L150 - false
   */

	@Test(timeout=300000)
  public void test6()  throws Throwable  {
      AlterRequest alterRequest0 = null;
      try {
        alterRequest0 = new AlterRequest("k<c5aZ9N!4(hvz4_", false, 481, "k<c5aZ9N!4(hvz4_", (DatabaseSchema) null, 481, false);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // Malformed Alter Request. Should start with [ALTER TABLE]
         //
         assertThrownBy("org.objectweb.cjdbc.common.sql.AlterRequest", e);
      }
  }

  //Test case number: 7
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.AlterRequest.<init>(Ljava/lang/String;ZILjava/lang/String;Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.AlterRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.AlterRequest.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I3 Branch 1 IFNE L139 - true
   * Goal 4. org.objectweb.cjdbc.common.sql.AlterRequest.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I32 Branch 2 IF_ICMPNE L150 - true
   * Goal 5. org.objectweb.cjdbc.common.sql.AlterRequest.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I65 Branch 3 IF_ICMPEQ L161 - true
   * Goal 6. org.objectweb.cjdbc.common.sql.AlterRequest.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I75 Branch 4 IF_ICMPEQ L163 - true
   * Goal 7. org.objectweb.cjdbc.common.sql.AlterRequest.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I85 Branch 5 IFNE L166 - false
   * Goal 8. org.objectweb.cjdbc.common.sql.AlterRequest.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I88 Branch 6 IFNE L166 - false
   */

	@Test(timeout=300000)
  public void test7()  throws Throwable  {
      AlterRequest alterRequest0 = null;
      try {
        alterRequest0 = new AlterRequest("oFN'orYtiorb utreatD-table", false, 4378, "Jjeapeasasn", (DatabaseSchema) null, 4378, false);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // Malformed Alter Request. No drop or add condition
         //
         assertThrownBy("org.objectweb.cjdbc.common.sql.AlterRequest", e);
      }
  }

  //Test case number: 8
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.AlterRequest.<init>(Ljava/lang/String;ZILjava/lang/String;Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.AlterRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.AlterRequest.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I3 Branch 1 IFNE L139 - false
   * Goal 4. org.objectweb.cjdbc.common.sql.AlterRequest.cloneParsing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I4 Branch 15 IFNE L221 - true
   */

	@Test(timeout=300000)
  public void test8()  throws Throwable  {
      AlterRequest alterRequest0 = new AlterRequest("", true, 0, "", (DatabaseSchema) null, 0, true);
      UpdateRequest updateRequest0 = new UpdateRequest("", false, 0, "<K=tSaD$ QNN#l>xv", (DatabaseSchema) null, 0, true);
      // Undeclared exception!
      try { 
        alterRequest0.cloneParsing(updateRequest0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.objectweb.cjdbc.common.sql.UpdateRequest cannot be cast to org.objectweb.cjdbc.common.sql.AlterRequest
         //
         assertThrownBy("org.objectweb.cjdbc.common.sql.AlterRequest", e);
      }
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.AlterRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.AlterRequest.cloneParsing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I4 Branch 15 IFNE L221 - false
   */

	@Test(timeout=300000)
  public void test9()  throws Throwable  {
      AlterRequest alterRequest0 = new AlterRequest("Jjeapeasasn", false, 4378, "Jjeapeasasn");
      StoredProcedure storedProcedure0 = new StoredProcedure("Jjeapeasasn", false, 4378, "Jjeapeasasn", false);
      alterRequest0.cloneParsing(storedProcedure0);
      assertFalse(alterRequest0.isAdd());
  }
}
