/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 15:53:10 GMT 2016
 */

package org.objectweb.cjdbc.common.shared;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.shared.BackendInfo;
import org.objectweb.cjdbc.controller.backend.DatabaseBackend;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class BackendInfo_ESTest extends BackendInfo_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.shared.BackendInfo.setXml(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.shared.BackendInfo.<init>(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      DatabaseBackend databaseBackend0 = new DatabaseBackend("Invalid null controller list in connect policy constructor", "dkVd<.qq)%'", "No Connection Manager for Virtual Login:", "dkVd<.qq)%'", ":n8-{xdNi>)9Ke^#", true, "4Fs&&");
      BackendInfo backendInfo0 = new BackendInfo(databaseBackend0);
      backendInfo0.setXml("No Connection Manager for Virtual Login:");
      assertNull(backendInfo0.getSchemaName());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.shared.BackendInfo.getDatabaseBackend()Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.shared.BackendInfo.<init>(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      DatabaseBackend databaseBackend0 = new DatabaseBackend("Invalid null controller list in connect policy constructor", "dkVd<.qq)%'", "No Connection Manager for Virtual Login:", "dkVd<.qq)%'", ":n8-{xdNi>)9Ke^#", true, "4Fs&&");
      BackendInfo backendInfo0 = new BackendInfo(databaseBackend0);
      DatabaseBackend databaseBackend1 = backendInfo0.getDatabaseBackend();
      assertTrue(databaseBackend1.isWriteCanBeEnabled());
  }

  //Test case number: 2
  /*
   * 11 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.shared.BackendInfo.getConnectionTestStatement()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.shared.BackendInfo.getSchemaName()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.shared.BackendInfo.getVirtualDatabaseName()Ljava/lang/String;: root-Branch
   * Goal 4. org.objectweb.cjdbc.common.shared.BackendInfo.getXml()Ljava/lang/String;: root-Branch
   * Goal 5. org.objectweb.cjdbc.common.shared.BackendInfo.getDynamicPrecision()I: root-Branch
   * Goal 6. org.objectweb.cjdbc.common.shared.BackendInfo.<init>(Lorg/objectweb/cjdbc/controller/backend/DatabaseBackend;)V: root-Branch
   * Goal 7. org.objectweb.cjdbc.common.shared.BackendInfo.getDriverClassName()Ljava/lang/String;: root-Branch
   * Goal 8. org.objectweb.cjdbc.common.shared.BackendInfo.getName()Ljava/lang/String;: root-Branch
   * Goal 9. org.objectweb.cjdbc.common.shared.BackendInfo.getUrl()Ljava/lang/String;: root-Branch
   * Goal 10. org.objectweb.cjdbc.common.shared.BackendInfo.getDriverPath()Ljava/lang/String;: root-Branch
   * Goal 11. org.objectweb.cjdbc.common.shared.BackendInfo.isGatherSystemTables()Z: root-Branch
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
      DatabaseBackend databaseBackend0 = new DatabaseBackend(")gp[%,ESp4VYQzt~=u", ")gp[%,ESp4VYQzt~=u", ")gp[%,ESp4VYQzt~=u", ")gp[%,ESp4VYQzt~=u", ")gp[%,ESp4VYQzt~=u", true, ")gp[%,ESp4VYQzt~=u");
      BackendInfo backendInfo0 = new BackendInfo(databaseBackend0);
      DatabaseBackend databaseBackend1 = null;
      try {
        databaseBackend1 = new DatabaseBackend(backendInfo0);
        fail("Expecting exception: NoClassDefFoundError");
      
      } catch(NoClassDefFoundError e) {
         //
         // org/dom4j/DocumentFactory
         //
         assertThrownBy("org.dom4j.io.SAXReader", e);
      }
  }
}
