/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 13:55:05 GMT 2016
 */

package org.objectweb.cjdbc.common.sql;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.io.BufferedInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.OutputStream;
import java.io.PrintStream;
import java.io.SequenceInputStream;
import java.sql.SQLException;
import javax.swing.DebugGraphics;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.sql.DeleteRequest;
import org.objectweb.cjdbc.common.sql.UnknownRequest;
import org.objectweb.cjdbc.common.sql.schema.DatabaseSchema;
import org.objectweb.cjdbc.common.stream.CJDBCInputStream;
import org.objectweb.cjdbc.common.stream.CJDBCOutputStream;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class UnknownRequest_ESTest extends UnknownRequest_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.UnknownRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.UnknownRequest.sendToStream(Lorg/objectweb/cjdbc/common/stream/CJDBCOutputStream;Z)V: root-Branch
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      UnknownRequest unknownRequest0 = new UnknownRequest("", false, (-1936), "GuqQHmK'9+Wv`{n,");
      PrintStream printStream0 = DebugGraphics.logStream();
      MockPrintStream mockPrintStream0 = new MockPrintStream((OutputStream) printStream0);
      CJDBCOutputStream cJDBCOutputStream0 = new CJDBCOutputStream((OutputStream) mockPrintStream0);
      unknownRequest0.sendToStream(cJDBCOutputStream0, false);
      assertEquals("", unknownRequest0.getSQL());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.UnknownRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.UnknownRequest.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: root-Branch
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      UnknownRequest unknownRequest0 = new UnknownRequest("O,vw}5NIVx^Dg5(,", true, (-1), "O,vw}5NIVx^Dg5(,");
      try { 
        unknownRequest0.parse((DatabaseSchema) null, (-1), true);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // Unable to parse an unknown request
         //
         assertThrownBy("org.objectweb.cjdbc.common.sql.UnknownRequest", e);
      }
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.UnknownRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.UnknownRequest.cloneParsing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
      UnknownRequest unknownRequest0 = new UnknownRequest("", true, 0, "");
      DeleteRequest deleteRequest0 = new DeleteRequest("", true, 0, "", (DatabaseSchema) null, 0, true);
      // Undeclared exception!
      try { 
        unknownRequest0.cloneParsing(deleteRequest0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to clone the parsing of an unknown request
         //
         assertThrownBy("org.objectweb.cjdbc.common.sql.UnknownRequest", e);
      }
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.UnknownRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.UnknownRequest.returnsResultSet()Z: root-Branch
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
      UnknownRequest unknownRequest0 = new UnknownRequest((String) null, true, 0, (String) null);
      boolean boolean0 = unknownRequest0.returnsResultSet();
      assertTrue(boolean0);
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.UnknownRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.UnknownRequest.needsMacroProcessing()Z: root-Branch
   */

	@Test(timeout=300000)
  public void test4()  throws Throwable  {
      UnknownRequest unknownRequest0 = new UnknownRequest("Unable to parse an unknown request", false, 0, "");
      boolean boolean0 = unknownRequest0.needsMacroProcessing();
      assertFalse(boolean0);
  }

  //Test case number: 5
  /*
   * 1 covered goal:
   * Goal 1. org.objectweb.cjdbc.common.sql.UnknownRequest.<init>(Lorg/objectweb/cjdbc/common/stream/CJDBCInputStream;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test5()  throws Throwable  {
      BufferedInputStream bufferedInputStream0 = new BufferedInputStream((InputStream) null);
      SequenceInputStream sequenceInputStream0 = new SequenceInputStream((InputStream) bufferedInputStream0, (InputStream) bufferedInputStream0);
      CJDBCInputStream cJDBCInputStream0 = new CJDBCInputStream((InputStream) sequenceInputStream0);
      UnknownRequest unknownRequest0 = null;
      try {
        unknownRequest0 = new UnknownRequest(cJDBCInputStream0);
        fail("Expecting exception: IOException");
      
      } catch(IOException e) {
         //
         // Stream closed
         //
         assertThrownBy("java.io.BufferedInputStream", e);
      }
  }
}
