/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 15:04:33 GMT 2016
 */

package org.objectweb.cjdbc.common.sql.schema;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.sql.SQLException;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.sql.schema.DatabaseColumn;
import org.objectweb.cjdbc.common.sql.schema.DatabaseTable;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class DatabaseTable_ESTest extends DatabaseTable_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.remove(Ljava/lang/String;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 4. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumn(Ljava/lang/String;)Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;: I9 Branch 9 IFEQ L220 - true
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("Minute");
      databaseTable0.remove("Minute");
      assertEquals("Minute", databaseTable0.getName());
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.remove(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("", 24);
      DatabaseColumn databaseColumn0 = new DatabaseColumn("", false);
      databaseTable0.remove(databaseColumn0);
      assertFalse(databaseColumn0.isUnique());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - false
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      DatabaseTable databaseTable0 = null;
      try {
        databaseTable0 = new DatabaseTable((String) null);
        fail("Expecting exception: IllegalArgumentException");
      
      } catch(IllegalArgumentException e) {
         //
         // Illegal null database table name in DatabaseTable constructor
         //
         assertThrownBy("org.objectweb.cjdbc.common.sql.schema.DatabaseTable", e);
      }
  }

  //Test case number: 3
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.mergeColumns(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseTable;)V: I3 Branch 2 IFNONNULL L149 - false
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("</DatabaseColumn>", 588);
      databaseTable0.mergeColumns((DatabaseTable) null);
      assertEquals("</DatabaseColumn>", databaseTable0.getName());
  }

  //Test case number: 4
  /*
   * 10 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.addColumn(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumns()Ljava/util/ArrayList;: root-Branch
   * Goal 4. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 5. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.mergeColumns(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseTable;)V: I3 Branch 2 IFNONNULL L149 - true
   * Goal 6. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.mergeColumns(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseTable;)V: I15 Branch 3 IFNONNULL L153 - true
   * Goal 7. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.mergeColumns(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseTable;)V: I31 Branch 4 IF_ICMPGE L158 - true
   * Goal 8. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.mergeColumns(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseTable;)V: I31 Branch 4 IF_ICMPGE L158 - false
   * Goal 9. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.mergeColumns(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseTable;)V: I49 Branch 5 IFNONNULL L162 - false
   * Goal 10. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumn(Ljava/lang/String;)Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;: I9 Branch 9 IFEQ L220 - true
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("<DatabaseTable tableName=\"");
      DatabaseTable databaseTable1 = new DatabaseTable("<DatabaseTable tableName=\"");
      DatabaseColumn databaseColumn0 = new DatabaseColumn("39{~5;q`(xCt6Qx", false);
      databaseTable0.addColumn(databaseColumn0);
      databaseTable1.mergeColumns(databaseTable0);
      assertTrue(databaseTable0.equals((Object)databaseTable1));
  }

  //Test case number: 5
  /*
   * 13 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.addColumn(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumns()Ljava/util/ArrayList;: root-Branch
   * Goal 4. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getName()Ljava/lang/String;: root-Branch
   * Goal 5. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 6. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.mergeColumns(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseTable;)V: I3 Branch 2 IFNONNULL L149 - true
   * Goal 7. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.mergeColumns(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseTable;)V: I15 Branch 3 IFNONNULL L153 - true
   * Goal 8. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.mergeColumns(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseTable;)V: I31 Branch 4 IF_ICMPGE L158 - false
   * Goal 9. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.mergeColumns(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseTable;)V: I49 Branch 5 IFNONNULL L162 - true
   * Goal 10. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.mergeColumns(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseTable;)V: I61 Branch 6 IFNE L166 - true
   * Goal 11. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.mergeColumns(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseTable;)V: I61 Branch 6 IFNE L166 - false
   * Goal 12. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumn(Ljava/lang/String;)Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;: I9 Branch 9 IFEQ L220 - false
   * Goal 13. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumn(Ljava/lang/String;)Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;: I22 Branch 10 IFLE L223 - false
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("Minute");
      DatabaseColumn databaseColumn0 = new DatabaseColumn("Hour", true);
      databaseTable0.addColumn(databaseColumn0);
      DatabaseColumn databaseColumn1 = new DatabaseColumn("Hour", false);
      databaseTable0.addColumn(databaseColumn1);
      try { 
        databaseTable0.mergeColumns(databaseTable0);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // Unable to merge table [Minute]: column 'Hour' definition mismatch
         //
         assertThrownBy("org.objectweb.cjdbc.common.sql.schema.DatabaseTable", e);
      }
  }

  //Test case number: 6
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.addColumn(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 4. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getUniqueColumns()Ljava/util/ArrayList;: I15 Branch 7 IFEQ L201 - true
   * Goal 5. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getUniqueColumns()Ljava/util/ArrayList;: I15 Branch 7 IFEQ L201 - false
   * Goal 6. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getUniqueColumns()Ljava/util/ArrayList;: I26 Branch 8 IFEQ L204 - true
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("");
      DatabaseColumn databaseColumn0 = new DatabaseColumn("", false, 0);
      databaseTable0.addColumn(databaseColumn0);
      ArrayList arrayList0 = databaseTable0.getUniqueColumns();
      assertEquals(0, arrayList0.size());
  }

  //Test case number: 7
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.addColumn(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 4. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getUniqueColumns()Ljava/util/ArrayList;: I15 Branch 7 IFEQ L201 - true
   * Goal 5. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getUniqueColumns()Ljava/util/ArrayList;: I15 Branch 7 IFEQ L201 - false
   * Goal 6. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getUniqueColumns()Ljava/util/ArrayList;: I26 Branch 8 IFEQ L204 - false
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("");
      DatabaseColumn databaseColumn0 = new DatabaseColumn("", true);
      databaseTable0.addColumn(databaseColumn0);
      ArrayList arrayList0 = databaseTable0.getUniqueColumns();
      assertEquals(1, arrayList0.size());
  }

  //Test case number: 8
  /*
   * 7 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.addColumn(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 4. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumn(Ljava/lang/String;)Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;: I9 Branch 9 IFEQ L220 - true
   * Goal 5. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumn(Ljava/lang/String;)Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;: I9 Branch 9 IFEQ L220 - false
   * Goal 6. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumn(Ljava/lang/String;)Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;: I22 Branch 10 IFLE L223 - true
   * Goal 7. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumn(Ljava/lang/String;Z)Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;: I3 Branch 11 IFNE L240 - false
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("Minute");
      DatabaseColumn databaseColumn0 = new DatabaseColumn("Hour", true);
      databaseTable0.addColumn(databaseColumn0);
      DatabaseColumn databaseColumn1 = databaseTable0.getColumn("<DatabaseColumn columnName=\"Hour\" isUnique=\"true\"></DatabaseColumn>", false);
      assertNull(databaseColumn1);
  }

  //Test case number: 9
  /*
   * 7 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.addColumn(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 4. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumn(Ljava/lang/String;Z)Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;: I3 Branch 11 IFNE L240 - true
   * Goal 5. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumn(Ljava/lang/String;Z)Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;: I19 Branch 12 IFEQ L244 - true
   * Goal 6. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumn(Ljava/lang/String;Z)Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;: I19 Branch 12 IFEQ L244 - false
   * Goal 7. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumn(Ljava/lang/String;Z)Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;: I32 Branch 13 IFLE L247 - true
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("Minute");
      DatabaseColumn databaseColumn0 = new DatabaseColumn("Hour", true);
      databaseTable0.addColumn(databaseColumn0);
      DatabaseColumn databaseColumn1 = databaseTable0.getColumn("<DatabaseColumn columnName=\"Hour\" isUnique=\"true\"></DatabaseColumn>", true);
      assertNull(databaseColumn1);
  }

  //Test case number: 10
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.addColumn(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 4. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumn(Ljava/lang/String;Z)Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;: I3 Branch 11 IFNE L240 - true
   * Goal 5. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumn(Ljava/lang/String;Z)Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;: I19 Branch 12 IFEQ L244 - false
   * Goal 6. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumn(Ljava/lang/String;Z)Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;: I32 Branch 13 IFLE L247 - false
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("");
      DatabaseColumn databaseColumn0 = new DatabaseColumn("", true);
      databaseTable0.addColumn(databaseColumn0);
      DatabaseColumn databaseColumn1 = databaseTable0.getColumn("", true);
      assertEquals(0, databaseColumn1.getType());
  }

  //Test case number: 11
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equals(Ljava/lang/Object;)Z: I3 Branch 14 IFNULL L263 - true
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("");
      boolean boolean0 = databaseTable0.equals((Object) null);
      assertFalse(boolean0);
  }

  //Test case number: 12
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumns()Ljava/util/ArrayList;: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getName()Ljava/lang/String;: root-Branch
   * Goal 4. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 5. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equals(Ljava/lang/Object;)Z: I3 Branch 14 IFNULL L263 - false
   * Goal 6. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equals(Ljava/lang/Object;)Z: I6 Branch 15 IFNE L263 - true
   * Goal 7. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equals(Ljava/lang/Object;)Z: I23 Branch 16 IFLE L267 - false
   * Goal 8. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equals(Ljava/lang/Object;)Z: I29 Branch 17 IFEQ L267 - false
   */

	@Test(timeout=300000)
  public void test12()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("Minute");
      boolean boolean0 = databaseTable0.equals(databaseTable0);
      assertTrue(boolean0);
  }

  //Test case number: 13
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equals(Ljava/lang/Object;)Z: I3 Branch 14 IFNULL L263 - false
   * Goal 4. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equals(Ljava/lang/Object;)Z: I6 Branch 15 IFNE L263 - false
   */

	@Test(timeout=300000)
  public void test13()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("Minute");
      DatabaseColumn databaseColumn0 = new DatabaseColumn("Hour", true);
      boolean boolean0 = databaseTable0.equals(databaseColumn0);
      assertFalse(boolean0);
  }

  //Test case number: 14
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getName()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 4. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equals(Ljava/lang/Object;)Z: I3 Branch 14 IFNULL L263 - false
   * Goal 5. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equals(Ljava/lang/Object;)Z: I6 Branch 15 IFNE L263 - true
   * Goal 6. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equals(Ljava/lang/Object;)Z: I23 Branch 16 IFLE L267 - true
   */

	@Test(timeout=300000)
  public void test14()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("<DatabaseTable tableName=\"");
      DatabaseTable databaseTable1 = new DatabaseTable("39{~5;q`(xCt6Qx");
      boolean boolean0 = databaseTable0.equals(databaseTable1);
      assertFalse(boolean0);
  }

  //Test case number: 15
  /*
   * 9 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.addColumn(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumns()Ljava/util/ArrayList;: root-Branch
   * Goal 4. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getName()Ljava/lang/String;: root-Branch
   * Goal 5. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 6. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equals(Ljava/lang/Object;)Z: I3 Branch 14 IFNULL L263 - false
   * Goal 7. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equals(Ljava/lang/Object;)Z: I6 Branch 15 IFNE L263 - true
   * Goal 8. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equals(Ljava/lang/Object;)Z: I23 Branch 16 IFLE L267 - false
   * Goal 9. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equals(Ljava/lang/Object;)Z: I29 Branch 17 IFEQ L267 - true
   */

	@Test(timeout=300000)
  public void test15()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("Minute");
      DatabaseTable databaseTable1 = new DatabaseTable("Minute");
      assertTrue(databaseTable1.equals((Object)databaseTable0));
      
      DatabaseColumn databaseColumn0 = new DatabaseColumn("Hour", true);
      databaseTable0.addColumn(databaseColumn0);
      boolean boolean0 = databaseTable0.equals(databaseTable1);
      assertFalse(databaseTable1.equals((Object)databaseTable0));
      assertFalse(boolean0);
  }

  //Test case number: 16
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equalsIgnoreType(Ljava/lang/Object;)Z: I3 Branch 18 IFNULL L280 - true
   */

	@Test(timeout=300000)
  public void test16()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("Minute");
      boolean boolean0 = databaseTable0.equalsIgnoreType((Object) null);
      assertFalse(boolean0);
  }

  //Test case number: 17
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equalsIgnoreType(Ljava/lang/Object;)Z: I3 Branch 18 IFNULL L280 - false
   * Goal 4. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equalsIgnoreType(Ljava/lang/Object;)Z: I6 Branch 19 IFNE L280 - false
   */

	@Test(timeout=300000)
  public void test17()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("");
      Object object0 = new Object();
      boolean boolean0 = databaseTable0.equalsIgnoreType(object0);
      assertFalse(boolean0);
  }

  //Test case number: 18
  /*
   * 6 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getName()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 4. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equalsIgnoreType(Ljava/lang/Object;)Z: I3 Branch 18 IFNULL L280 - false
   * Goal 5. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equalsIgnoreType(Ljava/lang/Object;)Z: I6 Branch 19 IFNE L280 - true
   * Goal 6. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equalsIgnoreType(Ljava/lang/Object;)Z: I23 Branch 20 IFGT L284 - false
   */

	@Test(timeout=300000)
  public void test18()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("PhY60UX<DgL38bzZ", 104);
      DatabaseTable databaseTable1 = new DatabaseTable("||kaq)w(4olz^Q~/q", 104);
      boolean boolean0 = databaseTable1.equalsIgnoreType(databaseTable0);
      assertFalse(boolean0);
  }

  //Test case number: 19
  /*
   * 12 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.addColumn(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getName()Ljava/lang/String;: root-Branch
   * Goal 4. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 5. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumn(Ljava/lang/String;)Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;: I9 Branch 9 IFEQ L220 - false
   * Goal 6. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumn(Ljava/lang/String;)Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;: I22 Branch 10 IFLE L223 - false
   * Goal 7. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equalsIgnoreType(Ljava/lang/Object;)Z: I3 Branch 18 IFNULL L280 - false
   * Goal 8. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equalsIgnoreType(Ljava/lang/Object;)Z: I6 Branch 19 IFNE L280 - true
   * Goal 9. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equalsIgnoreType(Ljava/lang/Object;)Z: I23 Branch 20 IFGT L284 - true
   * Goal 10. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equalsIgnoreType(Ljava/lang/Object;)Z: I38 Branch 21 IFEQ L289 - true
   * Goal 11. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equalsIgnoreType(Ljava/lang/Object;)Z: I38 Branch 21 IFEQ L289 - false
   * Goal 12. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equalsIgnoreType(Ljava/lang/Object;)Z: I57 Branch 22 IFNE L294 - true
   */

	@Test(timeout=300000)
  public void test19()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("Minute");
      DatabaseColumn databaseColumn0 = new DatabaseColumn("Hour", true);
      databaseTable0.addColumn(databaseColumn0);
      boolean boolean0 = databaseTable0.equalsIgnoreType(databaseTable0);
      assertTrue(boolean0);
  }

  //Test case number: 20
  /*
   * 11 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;I)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.addColumn(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;)V: root-Branch
   * Goal 4. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getName()Ljava/lang/String;: root-Branch
   * Goal 5. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 6. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumn(Ljava/lang/String;)Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;: I9 Branch 9 IFEQ L220 - true
   * Goal 7. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equalsIgnoreType(Ljava/lang/Object;)Z: I3 Branch 18 IFNULL L280 - false
   * Goal 8. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equalsIgnoreType(Ljava/lang/Object;)Z: I6 Branch 19 IFNE L280 - true
   * Goal 9. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equalsIgnoreType(Ljava/lang/Object;)Z: I23 Branch 20 IFGT L284 - true
   * Goal 10. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equalsIgnoreType(Ljava/lang/Object;)Z: I38 Branch 21 IFEQ L289 - false
   * Goal 11. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.equalsIgnoreType(Ljava/lang/Object;)Z: I57 Branch 22 IFNE L294 - false
   */

	@Test(timeout=300000)
  public void test20()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("");
      DatabaseTable databaseTable1 = new DatabaseTable("", 2675);
      DatabaseColumn databaseColumn0 = new DatabaseColumn("X2`2#:>'", false, 0);
      databaseTable0.addColumn(databaseColumn0);
      boolean boolean0 = databaseTable0.equalsIgnoreType(databaseTable1);
      assertFalse(boolean0);
  }

  //Test case number: 21
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getXml()Ljava/lang/String;: I41 Branch 23 IF_ICMPGE L311 - true
   */

	@Test(timeout=300000)
  public void test21()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("");
      String string0 = databaseTable0.getXml();
      assertEquals("<DatabaseTable tableName=\"\" nbOfColumns=\"0\"></DatabaseTable>", string0);
  }

  //Test case number: 22
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.addColumn(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.<init>(Ljava/lang/String;Ljava/util/ArrayList;)V: I7 Branch 1 IFNONNULL L84 - true
   * Goal 4. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getColumn(Ljava/lang/String;)Lorg/objectweb/cjdbc/common/sql/schema/DatabaseColumn;: I9 Branch 9 IFEQ L220 - true
   * Goal 5. org.objectweb.cjdbc.common.sql.schema.DatabaseTable.getXml()Ljava/lang/String;: I41 Branch 23 IF_ICMPGE L311 - false
   */

	@Test(timeout=300000)
  public void test22()  throws Throwable  {
      DatabaseTable databaseTable0 = new DatabaseTable("");
      DatabaseColumn databaseColumn0 = databaseTable0.getColumn("");
      databaseTable0.addColumn(databaseColumn0);
      // Undeclared exception!
      try { 
        databaseTable0.getXml();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.common.sql.schema.DatabaseTable", e);
      }
  }
}
