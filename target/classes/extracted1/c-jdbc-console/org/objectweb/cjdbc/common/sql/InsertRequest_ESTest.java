/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 14:21:33 GMT 2016
 */

package org.objectweb.cjdbc.common.sql;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.awt.Scrollbar;
import java.io.ByteArrayOutputStream;
import java.io.OutputStream;
import java.sql.SQLException;
import java.util.ArrayList;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.sql.CreateRequest;
import org.objectweb.cjdbc.common.sql.DeleteRequest;
import org.objectweb.cjdbc.common.sql.InsertRequest;
import org.objectweb.cjdbc.common.sql.schema.DatabaseSchema;
import org.objectweb.cjdbc.common.stream.CJDBCOutputStream;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class InsertRequest_ESTest extends InsertRequest_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.InsertRequest.<init>(Ljava/lang/String;ZILjava/lang/String;Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZZ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.InsertRequest.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.InsertRequest.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I3 Branch 3 IFNE L146 - false
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      InsertRequest insertRequest0 = new InsertRequest("Unknown column name '", true, 1911, "Unknown column name '", (DatabaseSchema) null, 0, true, true);
      assertTrue(insertRequest0.returnsResultSet());
      assertTrue(insertRequest0.isParsed());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.InsertRequest.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.InsertRequest.needsMacroProcessing()Z: root-Branch
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      InsertRequest insertRequest0 = new InsertRequest("getMaxConnections", true, 0, "getMaxConnections", true);
      boolean boolean0 = insertRequest0.needsMacroProcessing();
      assertTrue(insertRequest0.returnsResultSet());
      assertTrue(boolean0);
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.InsertRequest.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.InsertRequest.returnsResultSet()Z: root-Branch
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      InsertRequest insertRequest0 = new InsertRequest("org.jfree.data.DefaultValueDataset", true, 0, "oT]e:MB{>NcV}tS", true);
      boolean boolean0 = insertRequest0.returnsResultSet();
      assertTrue(boolean0);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.InsertRequest.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.InsertRequest.sendToStream(Lorg/objectweb/cjdbc/common/stream/CJDBCOutputStream;Z)V: I16 Branch 2 IFEQ L132 - true
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      InsertRequest insertRequest0 = new InsertRequest("YzLnOK#aZV*|", false, 2419, "YzLnOK#aZV*|", false);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      CJDBCOutputStream cJDBCOutputStream0 = new CJDBCOutputStream((OutputStream) byteArrayOutputStream0);
      insertRequest0.sendToStream(cJDBCOutputStream0, false);
      assertFalse(insertRequest0.returnsResultSet());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.InsertRequest.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.InsertRequest.sendToStream(Lorg/objectweb/cjdbc/common/stream/CJDBCOutputStream;Z)V: I16 Branch 2 IFEQ L132 - false
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      InsertRequest insertRequest0 = new InsertRequest("Domain", false, (-1151), "Domain", true);
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      CJDBCOutputStream cJDBCOutputStream0 = new CJDBCOutputStream((OutputStream) byteArrayOutputStream0);
      insertRequest0.sendToStream(cJDBCOutputStream0, true);
      assertTrue(insertRequest0.returnsResultSet());
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.InsertRequest.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.InsertRequest.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I3 Branch 3 IFNE L146 - true
   * Goal 3. org.objectweb.cjdbc.common.sql.InsertRequest.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I15 Branch 4 IFNONNULL L153 - false
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      InsertRequest insertRequest0 = new InsertRequest("", true, 2490, "", false);
      try { 
        insertRequest0.parse((DatabaseSchema) null, 2, false);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // Unable to parse request with an undefined database schema
         //
         assertThrownBy("org.objectweb.cjdbc.common.sql.InsertRequest", e);
      }
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.InsertRequest.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.InsertRequest.cloneParsing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I4 Branch 19 IFNE L263 - true
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      InsertRequest insertRequest0 = new InsertRequest("Domain", false, (-1151), "Domain", true);
      CreateRequest createRequest0 = new CreateRequest("Domain", true, (-364), "", (DatabaseSchema) null, 0, true);
      insertRequest0.cloneParsing(createRequest0);
      assertTrue(insertRequest0.isParsed());
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.InsertRequest.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.InsertRequest.cloneParsing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I4 Branch 19 IFNE L263 - false
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      InsertRequest insertRequest0 = new InsertRequest("", true, 2490, "", false);
      DeleteRequest deleteRequest0 = new DeleteRequest("", true, 24, "");
      insertRequest0.cloneParsing(deleteRequest0);
      assertFalse(insertRequest0.isParsed());
      assertFalse(insertRequest0.returnsResultSet());
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.InsertRequest.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.InsertRequest.debug()V: I8 Branch 20 IFNULL L291 - false
   * Goal 3. org.objectweb.cjdbc.common.sql.InsertRequest.debug()V: I32 Branch 21 IFNULL L296 - true
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      InsertRequest insertRequest0 = new InsertRequest("org.jfree.data.DefaultValueDataset", true, 0, "oT]e:MB{>NcV}tS", true);
      insertRequest0.tableName = "oT]e:MB{>NcV}tS";
      insertRequest0.debug();
      assertTrue(insertRequest0.returnsResultSet());
  }

  //Test case number: 9
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.InsertRequest.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.InsertRequest.debug()V: I8 Branch 20 IFNULL L291 - true
   * Goal 3. org.objectweb.cjdbc.common.sql.InsertRequest.debug()V: I32 Branch 21 IFNULL L296 - false
   * Goal 4. org.objectweb.cjdbc.common.sql.InsertRequest.debug()V: I47 Branch 22 IF_ICMPGE L299 - true
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      InsertRequest insertRequest0 = new InsertRequest("", true, 2490, "", false);
      ArrayList<Scrollbar> arrayList0 = new ArrayList<Scrollbar>();
      insertRequest0.columns = arrayList0;
      insertRequest0.debug();
      assertFalse(insertRequest0.returnsResultSet());
  }

  //Test case number: 10
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.InsertRequest.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.InsertRequest.debug()V: I8 Branch 20 IFNULL L291 - true
   * Goal 3. org.objectweb.cjdbc.common.sql.InsertRequest.debug()V: I32 Branch 21 IFNULL L296 - false
   * Goal 4. org.objectweb.cjdbc.common.sql.InsertRequest.debug()V: I47 Branch 22 IF_ICMPGE L299 - false
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      InsertRequest insertRequest0 = new InsertRequest("0", true, 2490, "0", true);
      ArrayList<Scrollbar> arrayList0 = new ArrayList<Scrollbar>();
      insertRequest0.columns = arrayList0;
      arrayList0.add((Scrollbar) null);
      // Undeclared exception!
      try { 
        insertRequest0.debug();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.common.sql.InsertRequest", e);
      }
  }
}
