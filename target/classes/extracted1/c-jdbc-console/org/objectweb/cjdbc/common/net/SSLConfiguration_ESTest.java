/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 13:44:12 GMT 2016
 */

package org.objectweb.cjdbc.common.net;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.io.File;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.net.SSLConfiguration;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class SSLConfiguration_ESTest extends SSLConfiguration_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.net.SSLConfiguration.setTrustStore(Ljava/io/File;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.net.SSLConfiguration.<init>()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.net.SSLConfiguration.getTrustStore()Ljava/io/File;: I4 Branch 2 IFNULL L148 - false
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      SSLConfiguration sSLConfiguration0 = new SSLConfiguration();
      MockFile mockFile0 = new MockFile("@6Gy_y)Y:x");
      sSLConfiguration0.setTrustStore(mockFile0);
      MockFile mockFile1 = (MockFile)sSLConfiguration0.getTrustStore();
      assertNotNull(mockFile1);
      assertFalse(sSLConfiguration0.isClientAuthenticationRequired());
  }

  //Test case number: 1
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.net.SSLConfiguration.setKeyStoreKeyPassword(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.net.SSLConfiguration.<init>()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.net.SSLConfiguration.getKeyStoreKeyPassword()Ljava/lang/String;: I4 Branch 1 IFNULL L106 - false
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      SSLConfiguration sSLConfiguration0 = new SSLConfiguration();
      sSLConfiguration0.setKeyStoreKeyPassword("");
      String string0 = sSLConfiguration0.getKeyStoreKeyPassword();
      assertFalse(sSLConfiguration0.isClientAuthenticationRequired());
      assertNotNull(string0);
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.net.SSLConfiguration.getKeyStore()Ljava/io/File;: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.net.SSLConfiguration.<init>()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.net.SSLConfiguration.getTrustStore()Ljava/io/File;: I4 Branch 2 IFNULL L148 - true
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      SSLConfiguration sSLConfiguration0 = new SSLConfiguration();
      sSLConfiguration0.getTrustStore();
      assertFalse(sSLConfiguration0.isClientAuthenticationRequired());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.net.SSLConfiguration.setKeyStore(Ljava/io/File;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.net.SSLConfiguration.<init>()V: root-Branch
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      SSLConfiguration sSLConfiguration0 = new SSLConfiguration();
      sSLConfiguration0.setKeyStore((File) null);
      assertFalse(sSLConfiguration0.isClientAuthenticationRequired());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.net.SSLConfiguration.isClientAuthenticationRequired()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.net.SSLConfiguration.<init>()V: root-Branch
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      SSLConfiguration sSLConfiguration0 = new SSLConfiguration();
      boolean boolean0 = sSLConfiguration0.isClientAuthenticationRequired();
      assertFalse(boolean0);
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.net.SSLConfiguration.setClientAuthenticationRequired(Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.net.SSLConfiguration.<init>()V: root-Branch
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      SSLConfiguration sSLConfiguration0 = new SSLConfiguration();
      sSLConfiguration0.setClientAuthenticationRequired(false);
      assertFalse(sSLConfiguration0.isClientAuthenticationRequired());
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.net.SSLConfiguration.setTrustStorePassword(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.net.SSLConfiguration.<init>()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.net.SSLConfiguration.getTrustStorePassword()Ljava/lang/String;: I4 Branch 3 IFNULL L171 - false
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      SSLConfiguration sSLConfiguration0 = new SSLConfiguration();
      sSLConfiguration0.setTrustStorePassword("");
      String string0 = sSLConfiguration0.getTrustStorePassword();
      assertNotNull(string0);
      assertFalse(sSLConfiguration0.isClientAuthenticationRequired());
  }

  //Test case number: 7
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.net.SSLConfiguration.getKeyStorePassword()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.net.SSLConfiguration.<init>()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.net.SSLConfiguration.getTrustStorePassword()Ljava/lang/String;: I4 Branch 3 IFNULL L171 - true
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      SSLConfiguration sSLConfiguration0 = new SSLConfiguration();
      sSLConfiguration0.getTrustStorePassword();
      assertFalse(sSLConfiguration0.isClientAuthenticationRequired());
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.net.SSLConfiguration.getDefaultConfig()Lorg/objectweb/cjdbc/common/net/SSLConfiguration;: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.net.SSLConfiguration.<init>()V: root-Branch
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      // Undeclared exception!
      try { 
        SSLConfiguration.getDefaultConfig();
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("java.io.File", e);
      }
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.net.SSLConfiguration.setKeyStorePassword(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.net.SSLConfiguration.<init>()V: root-Branch
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      SSLConfiguration sSLConfiguration0 = new SSLConfiguration();
      sSLConfiguration0.setKeyStorePassword("@6Gy_y)Y:x");
      assertFalse(sSLConfiguration0.isClientAuthenticationRequired());
  }

  //Test case number: 10
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.net.SSLConfiguration.getKeyStorePassword()Ljava/lang/String;: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.net.SSLConfiguration.<init>()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.net.SSLConfiguration.getKeyStoreKeyPassword()Ljava/lang/String;: I4 Branch 1 IFNULL L106 - true
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      SSLConfiguration sSLConfiguration0 = new SSLConfiguration();
      sSLConfiguration0.getKeyStoreKeyPassword();
      assertFalse(sSLConfiguration0.isClientAuthenticationRequired());
  }
}
