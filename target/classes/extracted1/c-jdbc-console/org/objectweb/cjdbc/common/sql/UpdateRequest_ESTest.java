/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 14:26:46 GMT 2016
 */

package org.objectweb.cjdbc.common.sql;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.sql.SQLException;
import java.util.ArrayList;
import java.util.HashMap;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.sql.AlterRequest;
import org.objectweb.cjdbc.common.sql.UpdateRequest;
import org.objectweb.cjdbc.common.sql.schema.DatabaseProcedure;
import org.objectweb.cjdbc.common.sql.schema.DatabaseProcedureParameter;
import org.objectweb.cjdbc.common.sql.schema.DatabaseSchema;
import org.objectweb.cjdbc.common.stream.CJDBCInputStream;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class UpdateRequest_ESTest extends UpdateRequest_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.UpdateRequest.needsMacroProcessing()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.UpdateRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      UpdateRequest updateRequest0 = new UpdateRequest("", false, 2669, "");
      boolean boolean0 = updateRequest0.needsMacroProcessing();
      assertTrue(boolean0);
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.UpdateRequest.returnsResultSet()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.UpdateRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      UpdateRequest updateRequest0 = new UpdateRequest("'", true, (-85), "nullsAreSortedHigh");
      boolean boolean0 = updateRequest0.returnsResultSet();
      assertFalse(boolean0);
  }

  //Test case number: 2
  /*
   * 1 covered goal:
   * Goal 1. org.objectweb.cjdbc.common.sql.UpdateRequest.<init>(Lorg/objectweb/cjdbc/common/stream/CJDBCInputStream;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      UpdateRequest updateRequest0 = null;
      try {
        updateRequest0 = new UpdateRequest((CJDBCInputStream) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.common.sql.AbstractRequest", e);
      }
  }

  //Test case number: 3
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.UpdateRequest.<init>(Ljava/lang/String;ZILjava/lang/String;Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.UpdateRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.UpdateRequest.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I3 Branch 1 IFNE L136 - false
   * Goal 4. org.objectweb.cjdbc.common.sql.UpdateRequest.cloneParsing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I4 Branch 42 IFNE L390 - true
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      UpdateRequest updateRequest0 = new UpdateRequest("", false, (-305), "", (DatabaseSchema) null, 0, false);
      AlterRequest alterRequest0 = new AlterRequest("", false, (-3818), "", (DatabaseSchema) null, 0, true);
      // Undeclared exception!
      try { 
        updateRequest0.cloneParsing(alterRequest0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.objectweb.cjdbc.common.sql.AlterRequest cannot be cast to org.objectweb.cjdbc.common.sql.UpdateRequest
         //
         assertThrownBy("org.objectweb.cjdbc.common.sql.UpdateRequest", e);
      }
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.UpdateRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.UpdateRequest.getUpdatedValues()Ljava/util/HashMap;: root-Branch
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      UpdateRequest updateRequest0 = new UpdateRequest("^]", false, 0, "Xsfo<o8HmoTh)]P6H");
      HashMap hashMap0 = updateRequest0.getUpdatedValues();
      assertNull(hashMap0);
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.UpdateRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.UpdateRequest.isUnique()Z: root-Branch
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      UpdateRequest updateRequest0 = new UpdateRequest("org.objectweb.cjdbc.common.sql.UpdateRequest", true, 380, "R");
      boolean boolean0 = updateRequest0.isUnique();
      assertFalse(boolean0);
  }

  //Test case number: 6
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.UpdateRequest.<init>(Ljava/lang/String;ZILjava/lang/String;Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.UpdateRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.sql.UpdateRequest.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I3 Branch 1 IFNE L136 - true
   * Goal 4. org.objectweb.cjdbc.common.sql.UpdateRequest.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I15 Branch 2 IFNONNULL L143 - false
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      UpdateRequest updateRequest0 = null;
      try {
        updateRequest0 = new UpdateRequest("h*NNK8PF&k1CZD", false, 1259, "", (DatabaseSchema) null, 1259, false);
        fail("Expecting exception: SQLException");
      
      } catch(SQLException e) {
         //
         // Unable to parse request with an undefined database schema
         //
         assertThrownBy("org.objectweb.cjdbc.common.sql.UpdateRequest", e);
      }
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.UpdateRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.UpdateRequest.cloneParsing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: I4 Branch 42 IFNE L390 - false
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      UpdateRequest updateRequest0 = new UpdateRequest("0l/<", false, 4158, "0l/<");
      AlterRequest alterRequest0 = new AlterRequest("0l/<", false, 4158, (String) null);
      updateRequest0.cloneParsing(alterRequest0);
      assertFalse(alterRequest0.returnsResultSet());
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.UpdateRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.UpdateRequest.debug()V: I8 Branch 43 IFNULL L430 - false
   * Goal 3. org.objectweb.cjdbc.common.sql.UpdateRequest.debug()V: I32 Branch 44 IFNULL L435 - true
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      UpdateRequest updateRequest0 = new UpdateRequest("", false, 15, "h*NNK8PF&k1CZD");
      updateRequest0.tableName = "h*NNK8PF&k1CZD";
      updateRequest0.debug();
      assertEquals("h*NNK8PF&k1CZD", updateRequest0.getLineSeparator());
  }

  //Test case number: 9
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.UpdateRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.UpdateRequest.debug()V: I8 Branch 43 IFNULL L430 - true
   * Goal 3. org.objectweb.cjdbc.common.sql.UpdateRequest.debug()V: I32 Branch 44 IFNULL L435 - false
   * Goal 4. org.objectweb.cjdbc.common.sql.UpdateRequest.debug()V: I47 Branch 45 IF_ICMPGE L438 - true
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      UpdateRequest updateRequest0 = new UpdateRequest("?TZOT>h", false, (-3699), "?TZOT>h");
      DatabaseProcedure databaseProcedure0 = new DatabaseProcedure((String) null, "?TZOT>h", (-3699));
      ArrayList arrayList0 = databaseProcedure0.getParameters();
      updateRequest0.columns = arrayList0;
      updateRequest0.debug();
      assertFalse(updateRequest0.isReadOnly());
  }

  //Test case number: 10
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.UpdateRequest.<init>(Ljava/lang/String;ZILjava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.UpdateRequest.debug()V: I8 Branch 43 IFNULL L430 - true
   * Goal 3. org.objectweb.cjdbc.common.sql.UpdateRequest.debug()V: I32 Branch 44 IFNULL L435 - false
   * Goal 4. org.objectweb.cjdbc.common.sql.UpdateRequest.debug()V: I47 Branch 45 IF_ICMPGE L438 - false
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      UpdateRequest updateRequest0 = new UpdateRequest("?TZOT>h", false, (-3699), "?TZOT>h");
      DatabaseProcedure databaseProcedure0 = new DatabaseProcedure((String) null, "?TZOT>h", (-3699));
      DatabaseProcedureParameter databaseProcedureParameter0 = new DatabaseProcedureParameter("?TZOT>h", 111, (-3699));
      databaseProcedure0.addParameter(databaseProcedureParameter0);
      ArrayList arrayList0 = databaseProcedure0.getParameters();
      updateRequest0.columns = arrayList0;
      // Undeclared exception!
      try { 
        updateRequest0.debug();
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // org.objectweb.cjdbc.common.sql.schema.DatabaseProcedureParameter cannot be cast to org.objectweb.cjdbc.common.sql.schema.TableColumn
         //
         assertThrownBy("org.objectweb.cjdbc.common.sql.UpdateRequest", e);
      }
  }
}
