/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 12:27:17 GMT 2016
 */

package org.objectweb.cjdbc.common.log;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;
import java.awt.Choice;
import javax.swing.table.DefaultTableModel;
import org.apache.log4j.Logger;
import org.apache.log4j.spi.RootCategory;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.lang.MockException;
import org.evosuite.runtime.mock.java.lang.MockThrowable;
import org.evosuite.runtime.mock.java.time.chrono.MockHijrahDate;
import org.evosuite.runtime.mock.java.time.chrono.MockMinguoDate;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.log.StaticDisabledLogger;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class StaticDisabledLogger_ESTest extends StaticDisabledLogger_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.log.StaticDisabledLogger.info(Ljava/lang/Object;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.log.StaticDisabledLogger.<init>(Lorg/apache/log4j/Logger;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      Logger logger0 = Logger.getLogger("&0[W;!!r");
      StaticDisabledLogger staticDisabledLogger0 = new StaticDisabledLogger(logger0);
      staticDisabledLogger0.info((Object) "&0[W;!!r");
      assertFalse(staticDisabledLogger0.isInfoEnabled());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.log.StaticDisabledLogger.warn(Ljava/lang/Object;Ljava/lang/Throwable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.log.StaticDisabledLogger.<init>(Lorg/apache/log4j/Logger;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      Logger logger0 = Logger.getLogger("");
      StaticDisabledLogger staticDisabledLogger0 = new StaticDisabledLogger(logger0);
      MockThrowable mockThrowable0 = new MockThrowable();
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      staticDisabledLogger0.warn((Object) mockMinguoDate0, (Throwable) mockThrowable0);
      assertNull(mockThrowable0.getMessage());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.log.StaticDisabledLogger.debug(Ljava/lang/Object;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.log.StaticDisabledLogger.<init>(Lorg/apache/log4j/Logger;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      Class<Choice> class0 = Choice.class;
      Logger logger0 = Logger.getLogger(class0);
      StaticDisabledLogger staticDisabledLogger0 = new StaticDisabledLogger(logger0);
      staticDisabledLogger0.debug((Object) logger0);
      assertFalse(staticDisabledLogger0.isInfoEnabled());
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.log.StaticDisabledLogger.isErrorEnabled()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.log.StaticDisabledLogger.<init>(Lorg/apache/log4j/Logger;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      Class<MockHijrahDate> class0 = MockHijrahDate.class;
      Logger logger0 = Logger.getLogger(class0);
      StaticDisabledLogger staticDisabledLogger0 = new StaticDisabledLogger(logger0);
      boolean boolean0 = staticDisabledLogger0.isErrorEnabled();
      assertFalse(boolean0);
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.log.StaticDisabledLogger.error(Ljava/lang/Object;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.log.StaticDisabledLogger.<init>(Lorg/apache/log4j/Logger;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      Logger logger0 = Logger.getLogger("");
      StaticDisabledLogger staticDisabledLogger0 = new StaticDisabledLogger(logger0);
      staticDisabledLogger0.error((Object) staticDisabledLogger0);
      assertFalse(staticDisabledLogger0.isDebugEnabled());
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.log.StaticDisabledLogger.fatal(Ljava/lang/Object;Ljava/lang/Throwable;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.log.StaticDisabledLogger.<init>(Lorg/apache/log4j/Logger;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      Logger logger0 = Logger.getLogger("");
      StaticDisabledLogger staticDisabledLogger0 = new StaticDisabledLogger(logger0);
      MockThrowable mockThrowable0 = new MockThrowable();
      staticDisabledLogger0.fatal((Object) null, (Throwable) mockThrowable0);
      assertFalse(staticDisabledLogger0.isInfoEnabled());
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.log.StaticDisabledLogger.isFatalEnabled()Z: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.log.StaticDisabledLogger.<init>(Lorg/apache/log4j/Logger;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      RootCategory rootCategory0 = (RootCategory)Logger.getRootLogger();
      StaticDisabledLogger staticDisabledLogger0 = new StaticDisabledLogger((Logger) rootCategory0);
      boolean boolean0 = staticDisabledLogger0.isFatalEnabled();
      assertFalse(boolean0);
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.log.StaticDisabledLogger.<init>(Lorg/apache/log4j/Logger;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.log.StaticDisabledLogger.debug(Ljava/lang/Object;Ljava/lang/Throwable;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      Logger logger0 = Logger.getLogger("3Op");
      StaticDisabledLogger staticDisabledLogger0 = new StaticDisabledLogger(logger0);
      MockException mockException0 = new MockException();
      staticDisabledLogger0.debug((Object) "3Op", (Throwable) mockException0);
      assertFalse(staticDisabledLogger0.isWarnEnabled());
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.log.StaticDisabledLogger.<init>(Lorg/apache/log4j/Logger;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.log.StaticDisabledLogger.warn(Ljava/lang/Object;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      Class<DefaultTableModel> class0 = DefaultTableModel.class;
      Logger logger0 = Logger.getLogger(class0);
      StaticDisabledLogger staticDisabledLogger0 = new StaticDisabledLogger(logger0);
      staticDisabledLogger0.warn((Object) logger0);
      assertTrue(logger0.getAdditivity());
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.log.StaticDisabledLogger.<init>(Lorg/apache/log4j/Logger;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.log.StaticDisabledLogger.isInfoEnabled()Z: root-Branch
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      Class<MockHijrahDate> class0 = MockHijrahDate.class;
      Logger logger0 = Logger.getLogger(class0);
      StaticDisabledLogger staticDisabledLogger0 = new StaticDisabledLogger(logger0);
      boolean boolean0 = staticDisabledLogger0.isInfoEnabled();
      assertFalse(boolean0);
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.log.StaticDisabledLogger.<init>(Lorg/apache/log4j/Logger;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.log.StaticDisabledLogger.fatal(Ljava/lang/Object;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      RootCategory rootCategory0 = (RootCategory)Logger.getRootLogger();
      StaticDisabledLogger staticDisabledLogger0 = new StaticDisabledLogger((Logger) rootCategory0);
      staticDisabledLogger0.fatal((Object) null);
      assertFalse(staticDisabledLogger0.isDebugEnabled());
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.log.StaticDisabledLogger.<init>(Lorg/apache/log4j/Logger;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.log.StaticDisabledLogger.isDebugEnabled()Z: root-Branch
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      Class<MockHijrahDate> class0 = MockHijrahDate.class;
      Logger logger0 = Logger.getLogger(class0);
      StaticDisabledLogger staticDisabledLogger0 = new StaticDisabledLogger(logger0);
      boolean boolean0 = staticDisabledLogger0.isDebugEnabled();
      assertFalse(boolean0);
  }

  //Test case number: 12
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.log.StaticDisabledLogger.<init>(Lorg/apache/log4j/Logger;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.log.StaticDisabledLogger.error(Ljava/lang/Object;Ljava/lang/Throwable;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test12()  throws Throwable  {
      Logger logger0 = Logger.getLogger("&0[W;!!r");
      StaticDisabledLogger staticDisabledLogger0 = new StaticDisabledLogger(logger0);
      MockMinguoDate mockMinguoDate0 = new MockMinguoDate();
      staticDisabledLogger0.error((Object) mockMinguoDate0, (Throwable) null);
      assertFalse(staticDisabledLogger0.isInfoEnabled());
  }

  //Test case number: 13
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.log.StaticDisabledLogger.<init>(Lorg/apache/log4j/Logger;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.log.StaticDisabledLogger.isWarnEnabled()Z: root-Branch
   */

	@Test(timeout=300000)
  public void test13()  throws Throwable  {
      Logger logger0 = Logger.getLogger("");
      StaticDisabledLogger staticDisabledLogger0 = new StaticDisabledLogger(logger0);
      boolean boolean0 = staticDisabledLogger0.isWarnEnabled();
      assertFalse(boolean0);
  }

  //Test case number: 14
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.log.StaticDisabledLogger.<init>(Lorg/apache/log4j/Logger;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.log.StaticDisabledLogger.info(Ljava/lang/Object;Ljava/lang/Throwable;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test14()  throws Throwable  {
      StaticDisabledLogger staticDisabledLogger0 = new StaticDisabledLogger((Logger) null);
      MockThrowable mockThrowable0 = new MockThrowable();
      MockException mockException0 = new MockException((String) null, (Throwable) mockThrowable0);
      staticDisabledLogger0.info((Object) staticDisabledLogger0, (Throwable) mockException0);
      assertFalse(staticDisabledLogger0.isInfoEnabled());
  }
}
