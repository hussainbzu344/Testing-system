/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 14:00:19 GMT 2016
 */

package org.objectweb.cjdbc.common.sql;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.io.OutputStream;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.sql.StoredProcedure;
import org.objectweb.cjdbc.common.stream.CJDBCOutputStream;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class StoredProcedure_ESTest extends StoredProcedure_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.StoredProcedure.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.StoredProcedure.cloneParsing(Lorg/objectweb/cjdbc/common/sql/AbstractRequest;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      StoredProcedure storedProcedure0 = new StoredProcedure("Kyf_h", false, (-476), "Kyf_h", false);
      // Undeclared exception!
      try { 
        storedProcedure0.cloneParsing(storedProcedure0);
        fail("Expecting exception: RuntimeException");
      
      } catch(RuntimeException e) {
         //
         // Unable to clone the parsing of a stored procedure call
         //
         assertThrownBy("org.objectweb.cjdbc.common.sql.StoredProcedure", e);
      }
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.StoredProcedure.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.StoredProcedure.setBlocking(Z)V: root-Branch
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      StoredProcedure storedProcedure0 = new StoredProcedure("8_==?j!;[Aj &@Xg6+", true, 40, "8_==?j!;[Aj &@Xg6+", true);
      storedProcedure0.setBlocking(true);
      assertTrue(storedProcedure0.returnsResultSet());
      assertTrue(storedProcedure0.mightBlock());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.StoredProcedure.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.StoredProcedure.mightBlock()Z: root-Branch
   */

	@Test(timeout=300000)
  public void test2()  throws Throwable  {
      StoredProcedure storedProcedure0 = new StoredProcedure("Value is out of range for min/max", false, 4164, "", false);
      boolean boolean0 = storedProcedure0.mightBlock();
      assertFalse(storedProcedure0.returnsResultSet());
      assertTrue(boolean0);
  }

  //Test case number: 3
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.StoredProcedure.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.StoredProcedure.needsMacroProcessing()Z: root-Branch
   */

	@Test(timeout=300000)
  public void test3()  throws Throwable  {
      StoredProcedure storedProcedure0 = new StoredProcedure("Kyf_h", false, (-476), "Kyf_h", false);
      boolean boolean0 = storedProcedure0.needsMacroProcessing();
      assertTrue(boolean0);
      assertTrue(storedProcedure0.mightBlock());
      assertFalse(storedProcedure0.returnsResultSet());
  }

  //Test case number: 4
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.StoredProcedure.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.StoredProcedure.returnsResultSet()Z: root-Branch
   */

	@Test(timeout=300000)
  public void test4()  throws Throwable  {
      StoredProcedure storedProcedure0 = new StoredProcedure("M5H/{{9?TxM", false, 0, "M5H/{{9?TxM", false);
      boolean boolean0 = storedProcedure0.returnsResultSet();
      assertFalse(boolean0);
      assertTrue(storedProcedure0.mightBlock());
  }

  //Test case number: 5
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.StoredProcedure.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.StoredProcedure.sendToStream(Lorg/objectweb/cjdbc/common/stream/CJDBCOutputStream;Z)V: I16 Branch 2 IFEQ L97 - true
   */

	@Test(timeout=300000)
  public void test5()  throws Throwable  {
      StoredProcedure storedProcedure0 = new StoredProcedure("org.objectweb.cjdbc.common.sql.StoredProcedure", false, 0, "org.objectweb.cjdbc.common.sql.StoredProcedure", false);
      CJDBCOutputStream cJDBCOutputStream0 = new CJDBCOutputStream((OutputStream) null);
      storedProcedure0.sendToStream(cJDBCOutputStream0, false);
      assertTrue(storedProcedure0.mightBlock());
      assertFalse(storedProcedure0.returnsResultSet());
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.StoredProcedure.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.StoredProcedure.sendToStream(Lorg/objectweb/cjdbc/common/stream/CJDBCOutputStream;Z)V: I16 Branch 2 IFEQ L97 - false
   */

	@Test(timeout=300000)
  public void test6()  throws Throwable  {
      StoredProcedure storedProcedure0 = new StoredProcedure("org.objectweb.cjdbc.common.sql.StoredProcedure", false, 0, "org.objectweb.cjdbc.common.sql.StoredProcedure", true);
      CJDBCOutputStream cJDBCOutputStream0 = new CJDBCOutputStream((OutputStream) null);
      storedProcedure0.sendToStream(cJDBCOutputStream0, false);
      assertTrue(storedProcedure0.returnsResultSet());
      assertTrue(storedProcedure0.mightBlock());
  }

  //Test case number: 7
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.StoredProcedure.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.StoredProcedure.getProcedureName()Ljava/lang/String;: I4 Branch 3 IFNONNULL L125 - true
   * Goal 3. org.objectweb.cjdbc.common.sql.StoredProcedure.getProcedureName()Ljava/lang/String;: I4 Branch 3 IFNONNULL L125 - false
   * Goal 4. org.objectweb.cjdbc.common.sql.StoredProcedure.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I13 Branch 4 IF_ICMPGE L167 - true
   * Goal 5. org.objectweb.cjdbc.common.sql.StoredProcedure.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I42 Branch 5 IF_ICMPNE L172 - false
   */

	@Test(timeout=300000)
  public void test7()  throws Throwable  {
      StoredProcedure storedProcedure0 = new StoredProcedure("Value is out of range for min/max", false, 4164, "", false);
      storedProcedure0.getProcedureName();
      String string0 = storedProcedure0.getProcedureName();
      assertFalse(storedProcedure0.returnsResultSet());
      assertTrue(storedProcedure0.mightBlock());
      assertNotNull(string0);
      assertEquals("is out of range for min/max", string0);
  }

  //Test case number: 8
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.StoredProcedure.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.StoredProcedure.getProcedureName()Ljava/lang/String;: I4 Branch 3 IFNONNULL L125 - false
   * Goal 3. org.objectweb.cjdbc.common.sql.StoredProcedure.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I13 Branch 4 IF_ICMPGE L167 - false
   */

	@Test(timeout=300000)
  public void test8()  throws Throwable  {
      StoredProcedure storedProcedure0 = new StoredProcedure("", false, (-232), "", false);
      storedProcedure0.getProcedureName();
      assertFalse(storedProcedure0.returnsResultSet());
      assertTrue(storedProcedure0.mightBlock());
  }

  //Test case number: 9
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.sql.StoredProcedure.<init>(Ljava/lang/String;ZILjava/lang/String;Z)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.sql.StoredProcedure.getProcedureName()Ljava/lang/String;: I4 Branch 3 IFNONNULL L125 - false
   * Goal 3. org.objectweb.cjdbc.common.sql.StoredProcedure.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I13 Branch 4 IF_ICMPGE L167 - true
   * Goal 4. org.objectweb.cjdbc.common.sql.StoredProcedure.parse(Lorg/objectweb/cjdbc/common/sql/schema/DatabaseSchema;IZ)V: I42 Branch 5 IF_ICMPNE L172 - true
   */

	@Test(timeout=300000)
  public void test9()  throws Throwable  {
      StoredProcedure storedProcedure0 = new StoredProcedure("Illegal null database schema in DatabaseSchema(DatabaseSchema) constructor", true, (-783), "Kyf_h", true);
      String string0 = storedProcedure0.getProcedureName();
      assertTrue(storedProcedure0.mightBlock());
      assertEquals("al null database schema in DatabaseSchema", string0);
      assertTrue(storedProcedure0.returnsResultSet());
      assertNotNull(string0);
  }
}
