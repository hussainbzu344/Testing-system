/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 16:08:45 GMT 2016
 */

package org.objectweb.cjdbc.common.stream;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import java.io.ByteArrayOutputStream;
import java.io.File;
import java.io.FilterOutputStream;
import java.io.OutputStream;
import java.io.PipedInputStream;
import java.io.PipedOutputStream;
import java.net.Socket;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.evosuite.runtime.mock.java.io.MockFile;
import org.evosuite.runtime.mock.java.io.MockFileOutputStream;
import org.evosuite.runtime.mock.java.io.MockPrintStream;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.stream.CJDBCOutputStream;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class CJDBCOutputStream_ESTest extends CJDBCOutputStream_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.getSocket()Ljava/net/Socket;: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.<init>(Ljava/io/OutputStream;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      CJDBCOutputStream cJDBCOutputStream0 = new CJDBCOutputStream((OutputStream) byteArrayOutputStream0);
      cJDBCOutputStream0.getSocket();
      assertEquals(1392409281320L, cJDBCOutputStream0.getDateCreated());
  }

  //Test case number: 1
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.flush()V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.<init>(Ljava/io/OutputStream;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      CJDBCOutputStream cJDBCOutputStream0 = new CJDBCOutputStream((OutputStream) pipedOutputStream0);
      cJDBCOutputStream0.flush();
      assertEquals(1392409281320L, cJDBCOutputStream0.getDateCreated());
  }

  //Test case number: 2
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.writeDouble(D)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.<init>(Ljava/io/OutputStream;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Sr;KzO]4R;R/:4zo", "Sr;KzO]4R;R/:4zo");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream((File) mockFile0, true);
      CJDBCOutputStream cJDBCOutputStream0 = new CJDBCOutputStream((OutputStream) mockFileOutputStream0);
      cJDBCOutputStream0.writeDouble(0.0);
      assertEquals(1392409281320L, cJDBCOutputStream0.getDateCreated());
  }

  //Test case number: 3
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.writeInt(I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.<init>(Ljava/io/OutputStream;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.writeUTF(Ljava/lang/String;)V: I4 Branch 1 IF_ACMPNE L125 - true
   * Goal 4. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.writeUTF(Ljava/lang/String;)V: I40 Branch 2 IF_ICMPGT L138 - true
   * Goal 5. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.writeUTF(Ljava/lang/String;)V: I64 Branch 3 IF_ICMPLE L148 - false
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      CJDBCOutputStream cJDBCOutputStream0 = new CJDBCOutputStream((OutputStream) byteArrayOutputStream0);
      cJDBCOutputStream0.writeUTF("InvalidXGCFields");
      assertEquals(1392409281320L, cJDBCOutputStream0.getDateCreated());
  }

  //Test case number: 4
  /*
   * 1 covered goal:
   * Goal 1. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.<init>(Ljava/net/Socket;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      CJDBCOutputStream cJDBCOutputStream0 = null;
      try {
        cJDBCOutputStream0 = new CJDBCOutputStream((Socket) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         assertThrownBy("org.objectweb.cjdbc.common.stream.CJDBCOutputStream", e);
      }
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.write([BII)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.<init>(Ljava/io/OutputStream;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.write([B)V: root-Branch
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      CJDBCOutputStream cJDBCOutputStream0 = new CJDBCOutputStream((OutputStream) byteArrayOutputStream0);
      byte[] byteArray0 = new byte[0];
      cJDBCOutputStream0.write(byteArray0);
      assertEquals(1392409281320L, cJDBCOutputStream0.getDateCreated());
  }

  //Test case number: 6
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.getDateCreated()J: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.<init>(Ljava/io/OutputStream;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      CJDBCOutputStream cJDBCOutputStream0 = new CJDBCOutputStream((OutputStream) byteArrayOutputStream0);
      long long0 = cJDBCOutputStream0.getDateCreated();
      assertEquals(1392409281320L, long0);
  }

  //Test case number: 7
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.writeFloat(F)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.<init>(Ljava/io/OutputStream;)V: root-Branch
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      PipedInputStream pipedInputStream0 = new PipedInputStream(1759);
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream(pipedInputStream0);
      CJDBCOutputStream cJDBCOutputStream0 = new CJDBCOutputStream((OutputStream) pipedOutputStream0);
      cJDBCOutputStream0.writeFloat(1759);
      assertEquals(1392409281320L, cJDBCOutputStream0.getDateCreated());
  }

  //Test case number: 8
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.<init>(Ljava/io/OutputStream;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.close()V: root-Branch
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream();
      CJDBCOutputStream cJDBCOutputStream0 = new CJDBCOutputStream((OutputStream) byteArrayOutputStream0);
      cJDBCOutputStream0.close();
      assertEquals(1392409281320L, cJDBCOutputStream0.getDateCreated());
  }

  //Test case number: 9
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.<init>(Ljava/io/OutputStream;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.writeBoolean(Z)V: root-Branch
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      MockFile mockFile0 = new MockFile("Sr;KzO]4R;R/:4zo", "Sr;KzO]4R;R/:4zo");
      MockFileOutputStream mockFileOutputStream0 = new MockFileOutputStream((File) mockFile0, true);
      CJDBCOutputStream cJDBCOutputStream0 = new CJDBCOutputStream((OutputStream) mockFileOutputStream0);
      cJDBCOutputStream0.writeBoolean(true);
      assertEquals(1392409281320L, cJDBCOutputStream0.getDateCreated());
  }

  //Test case number: 10
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.<init>(Ljava/io/OutputStream;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.writeLong(J)V: root-Branch
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(0);
      CJDBCOutputStream cJDBCOutputStream0 = new CJDBCOutputStream((OutputStream) byteArrayOutputStream0);
      cJDBCOutputStream0.writeLong(562L);
      assertEquals(1392409281320L, cJDBCOutputStream0.getDateCreated());
  }

  //Test case number: 11
  /*
   * 2 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.<init>(Ljava/io/OutputStream;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.writeUTF(Ljava/lang/String;)V: I4 Branch 1 IF_ACMPNE L125 - false
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      ByteArrayOutputStream byteArrayOutputStream0 = new ByteArrayOutputStream(31);
      MockPrintStream mockPrintStream0 = new MockPrintStream((OutputStream) byteArrayOutputStream0);
      CJDBCOutputStream cJDBCOutputStream0 = new CJDBCOutputStream((OutputStream) mockPrintStream0);
      cJDBCOutputStream0.writeUTF((String) null);
      assertEquals(1392409281320L, cJDBCOutputStream0.getDateCreated());
  }

  //Test case number: 12
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.writeInt(I)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.<init>(Ljava/io/OutputStream;)V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.writeUTF(Ljava/lang/String;)V: I4 Branch 1 IF_ACMPNE L125 - true
   * Goal 4. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.writeUTF(Ljava/lang/String;)V: I40 Branch 2 IF_ICMPGT L138 - true
   * Goal 5. org.objectweb.cjdbc.common.stream.CJDBCOutputStream.writeUTF(Ljava/lang/String;)V: I64 Branch 3 IF_ICMPLE L148 - true
   */

	@Test(timeout=300000)
  public void test12()  throws Throwable  {
      PipedOutputStream pipedOutputStream0 = new PipedOutputStream();
      FilterOutputStream filterOutputStream0 = new FilterOutputStream((OutputStream) pipedOutputStream0);
      MockPrintStream mockPrintStream0 = new MockPrintStream((OutputStream) filterOutputStream0, true);
      CJDBCOutputStream cJDBCOutputStream0 = new CJDBCOutputStream((OutputStream) mockPrintStream0);
      cJDBCOutputStream0.writeUTF("");
      assertEquals(1392409281320L, cJDBCOutputStream0.getDateCreated());
  }
}
