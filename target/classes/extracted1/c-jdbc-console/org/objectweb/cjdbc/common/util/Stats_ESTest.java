/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 13:11:19 GMT 2016
 */

package org.objectweb.cjdbc.common.util;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;

import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.util.Stats;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class Stats_ESTest extends Stats_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.util.Stats.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.util.Stats.reset()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.util.Stats.merge(Lorg/objectweb/cjdbc/common/util/Stats;)V: I4 Branch 4 IF_ACMPNE L212 - false
   */

	@Test(timeout=300000)
  public void test00()  throws Throwable  {
      Stats stats0 = new Stats("}'pi?");
      try { 
        stats0.merge(stats0);
        fail("Expecting exception: Exception");
      
      } catch(Exception e) {
         //
         // You cannot merge a stat with itself
         //
         assertThrownBy("org.objectweb.cjdbc.common.util.Stats", e);
      }
  }

  //Test case number: 1
  /*
   * 11 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.util.Stats.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.util.Stats.getMinTime()J: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.util.Stats.getTotalTime()J: root-Branch
   * Goal 4. org.objectweb.cjdbc.common.util.Stats.getCount()I: root-Branch
   * Goal 5. org.objectweb.cjdbc.common.util.Stats.getCacheHit()I: root-Branch
   * Goal 6. org.objectweb.cjdbc.common.util.Stats.reset()V: root-Branch
   * Goal 7. org.objectweb.cjdbc.common.util.Stats.getError()I: root-Branch
   * Goal 8. org.objectweb.cjdbc.common.util.Stats.getMaxTime()J: root-Branch
   * Goal 9. org.objectweb.cjdbc.common.util.Stats.merge(Lorg/objectweb/cjdbc/common/util/Stats;)V: I4 Branch 4 IF_ACMPNE L212 - true
   * Goal 10. org.objectweb.cjdbc.common.util.Stats.merge(Lorg/objectweb/cjdbc/common/util/Stats;)V: I59 Branch 5 IFLE L220 - true
   * Goal 11. org.objectweb.cjdbc.common.util.Stats.merge(Lorg/objectweb/cjdbc/common/util/Stats;)V: I73 Branch 6 IFGE L222 - true
   */

	@Test(timeout=300000)
  public void test01()  throws Throwable  {
      Stats stats0 = new Stats("");
      Stats stats1 = new Stats("InvalidXGCValue-fractional");
      stats0.merge(stats1);
      assertEquals((-9223372036854775808L), stats1.getMaxTime());
      assertEquals(0L, stats1.getTotalTime());
      assertEquals(9223372036854775807L, stats0.getMinTime());
      assertEquals(0, stats0.getError());
      assertEquals(0, stats0.getCount());
      assertEquals(0, stats0.getCacheHit());
  }

  //Test case number: 2
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.util.Stats.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.util.Stats.getName()Ljava/lang/String;: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.util.Stats.reset()V: root-Branch
   */

	@Test(timeout=300000)
  public void test02()  throws Throwable  {
      Stats stats0 = new Stats("");
      stats0.getName();
      assertEquals((-9223372036854775808L), stats0.getMaxTime());
      assertEquals(0, stats0.getError());
      assertEquals(0L, stats0.getTotalTime());
      assertEquals(0, stats0.getCount());
      assertEquals(9223372036854775807L, stats0.getMinTime());
  }

  //Test case number: 3
  /*
   * 7 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.util.Stats.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.util.Stats.displayOnStdout()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.util.Stats.reset()V: root-Branch
   * Goal 4. org.objectweb.cjdbc.common.util.Stats.multipleLineDisplay()Ljava/lang/String;: I32 Branch 7 IFEQ L244 - true
   * Goal 5. org.objectweb.cjdbc.common.util.Stats.multipleLineDisplay()Ljava/lang/String;: I92 Branch 8 IFNE L254 - false
   * Goal 6. org.objectweb.cjdbc.common.util.Stats.multipleLineDisplay()Ljava/lang/String;: I160 Branch 9 IFEQ L262 - true
   * Goal 7. org.objectweb.cjdbc.common.util.Stats.multipleLineDisplay()Ljava/lang/String;: I189 Branch 10 IFEQ L263 - true
   */

	@Test(timeout=300000)
  public void test03()  throws Throwable  {
      Stats stats0 = new Stats("r2GUp!5");
      stats0.displayOnStdout();
      assertEquals((-9223372036854775808L), stats0.getMaxTime());
      assertEquals(9223372036854775807L, stats0.getMinTime());
      assertEquals(0L, stats0.getTotalTime());
      assertEquals(0, stats0.getCount());
      assertEquals(0, stats0.getError());
  }

  //Test case number: 4
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.util.Stats.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.util.Stats.reset()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.util.Stats.incrementCacheHit()V: root-Branch
   */

	@Test(timeout=300000)
  public void test04()  throws Throwable  {
      Stats stats0 = new Stats("");
      stats0.incrementCacheHit();
      assertEquals(1, stats0.getCacheHit());
  }

  //Test case number: 5
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.util.Stats.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.util.Stats.reset()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.util.Stats.incrementError()V: root-Branch
   */

	@Test(timeout=300000)
  public void test05()  throws Throwable  {
      Stats stats0 = new Stats("");
      stats0.incrementError();
      assertEquals(1, stats0.getError());
  }

  //Test case number: 6
  /*
   * 3 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.util.Stats.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.util.Stats.reset()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.util.Stats.updateTime(J)V: I5 Branch 1 IFGE L121 - false
   */

	@Test(timeout=300000)
  public void test06()  throws Throwable  {
      Stats stats0 = new Stats("InvalidXGCRepresentation");
      stats0.updateTime((-2263L));
      assertEquals(0L, stats0.getTotalTime());
      assertEquals(9223372036854775807L, stats0.getMinTime());
      assertEquals(0, stats0.getError());
      assertEquals(0, stats0.getCount());
      assertEquals((-9223372036854775808L), stats0.getMaxTime());
  }

  //Test case number: 7
  /*
   * 7 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.util.Stats.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.util.Stats.reset()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.util.Stats.updateTime(J)V: I5 Branch 1 IFGE L121 - true
   * Goal 4. org.objectweb.cjdbc.common.util.Stats.updateTime(J)V: I37 Branch 2 IFLE L128 - true
   * Goal 5. org.objectweb.cjdbc.common.util.Stats.updateTime(J)V: I37 Branch 2 IFLE L128 - false
   * Goal 6. org.objectweb.cjdbc.common.util.Stats.updateTime(J)V: I49 Branch 3 IFGE L130 - true
   * Goal 7. org.objectweb.cjdbc.common.util.Stats.updateTime(J)V: I49 Branch 3 IFGE L130 - false
   */

	@Test(timeout=300000)
  public void test07()  throws Throwable  {
      Stats stats0 = new Stats(" statistics:\n");
      stats0.updateTime(387L);
      stats0.updateTime(387L);
      assertEquals(387L, stats0.getMaxTime());
  }

  //Test case number: 8
  /*
   * 14 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.util.Stats.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.util.Stats.getMinTime()J: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.util.Stats.getTotalTime()J: root-Branch
   * Goal 4. org.objectweb.cjdbc.common.util.Stats.getCount()I: root-Branch
   * Goal 5. org.objectweb.cjdbc.common.util.Stats.getCacheHit()I: root-Branch
   * Goal 6. org.objectweb.cjdbc.common.util.Stats.reset()V: root-Branch
   * Goal 7. org.objectweb.cjdbc.common.util.Stats.getError()I: root-Branch
   * Goal 8. org.objectweb.cjdbc.common.util.Stats.getMaxTime()J: root-Branch
   * Goal 9. org.objectweb.cjdbc.common.util.Stats.updateTime(J)V: I5 Branch 1 IFGE L121 - true
   * Goal 10. org.objectweb.cjdbc.common.util.Stats.updateTime(J)V: I37 Branch 2 IFLE L128 - false
   * Goal 11. org.objectweb.cjdbc.common.util.Stats.updateTime(J)V: I49 Branch 3 IFGE L130 - false
   * Goal 12. org.objectweb.cjdbc.common.util.Stats.merge(Lorg/objectweb/cjdbc/common/util/Stats;)V: I4 Branch 4 IF_ACMPNE L212 - true
   * Goal 13. org.objectweb.cjdbc.common.util.Stats.merge(Lorg/objectweb/cjdbc/common/util/Stats;)V: I59 Branch 5 IFLE L220 - false
   * Goal 14. org.objectweb.cjdbc.common.util.Stats.merge(Lorg/objectweb/cjdbc/common/util/Stats;)V: I73 Branch 6 IFGE L222 - false
   */

	@Test(timeout=300000)
  public void test08()  throws Throwable  {
      Stats stats0 = new Stats("");
      Stats stats1 = new Stats("");
      stats1.updateTime(0L);
      stats0.merge(stats1);
      assertEquals(0L, stats1.getMaxTime());
      assertEquals(0L, stats1.getMinTime());
      assertEquals(0, stats0.getCacheHit());
  }

  //Test case number: 9
  /*
   * 9 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.util.Stats.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.util.Stats.reset()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.util.Stats.updateTime(J)V: I5 Branch 1 IFGE L121 - true
   * Goal 4. org.objectweb.cjdbc.common.util.Stats.updateTime(J)V: I37 Branch 2 IFLE L128 - false
   * Goal 5. org.objectweb.cjdbc.common.util.Stats.updateTime(J)V: I49 Branch 3 IFGE L130 - false
   * Goal 6. org.objectweb.cjdbc.common.util.Stats.multipleLineDisplay()Ljava/lang/String;: I32 Branch 7 IFEQ L244 - false
   * Goal 7. org.objectweb.cjdbc.common.util.Stats.multipleLineDisplay()Ljava/lang/String;: I92 Branch 8 IFNE L254 - false
   * Goal 8. org.objectweb.cjdbc.common.util.Stats.multipleLineDisplay()Ljava/lang/String;: I160 Branch 9 IFEQ L262 - false
   * Goal 9. org.objectweb.cjdbc.common.util.Stats.multipleLineDisplay()Ljava/lang/String;: I189 Branch 10 IFEQ L263 - false
   */

	@Test(timeout=300000)
  public void test09()  throws Throwable  {
      Stats stats0 = new Stats("");
      stats0.updateTime(2102L);
      stats0.multipleLineDisplay();
      assertEquals(2102L, stats0.getMaxTime());
  }

  //Test case number: 10
  /*
   * 7 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.util.Stats.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.util.Stats.incrementCount()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.util.Stats.reset()V: root-Branch
   * Goal 4. org.objectweb.cjdbc.common.util.Stats.multipleLineDisplay()Ljava/lang/String;: I32 Branch 7 IFEQ L244 - true
   * Goal 5. org.objectweb.cjdbc.common.util.Stats.multipleLineDisplay()Ljava/lang/String;: I92 Branch 8 IFNE L254 - true
   * Goal 6. org.objectweb.cjdbc.common.util.Stats.multipleLineDisplay()Ljava/lang/String;: I160 Branch 9 IFEQ L262 - true
   * Goal 7. org.objectweb.cjdbc.common.util.Stats.multipleLineDisplay()Ljava/lang/String;: I189 Branch 10 IFEQ L263 - true
   */

	@Test(timeout=300000)
  public void test10()  throws Throwable  {
      Stats stats0 = new Stats("  Max time: ");
      stats0.incrementCount();
      stats0.multipleLineDisplay();
      assertEquals(1, stats0.getCount());
  }

  //Test case number: 11
  /*
   * 8 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.util.Stats.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.util.Stats.incrementCount()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.util.Stats.reset()V: root-Branch
   * Goal 4. org.objectweb.cjdbc.common.util.Stats.singleLineDisplay()Ljava/lang/String;: I31 Branch 11 IFNE L277 - true
   * Goal 5. org.objectweb.cjdbc.common.util.Stats.singleLineDisplay()Ljava/lang/String;: I71 Branch 12 IFEQ L281 - true
   * Goal 6. org.objectweb.cjdbc.common.util.Stats.singleLineDisplay()Ljava/lang/String;: I107 Branch 13 IFNE L285 - true
   * Goal 7. org.objectweb.cjdbc.common.util.Stats.singleLineDisplay()Ljava/lang/String;: I169 Branch 14 IFEQ L292 - true
   * Goal 8. org.objectweb.cjdbc.common.util.Stats.singleLineDisplay()Ljava/lang/String;: I196 Branch 15 IFEQ L293 - true
   */

	@Test(timeout=300000)
  public void test11()  throws Throwable  {
      Stats stats0 = new Stats(" statistics:\n");
      stats0.incrementCount();
      stats0.singleLineDisplay();
      assertEquals(1, stats0.getCount());
  }

  //Test case number: 12
  /*
   * 7 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.util.Stats.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.util.Stats.reset()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.util.Stats.singleLineDisplay()Ljava/lang/String;: I31 Branch 11 IFNE L277 - false
   * Goal 4. org.objectweb.cjdbc.common.util.Stats.singleLineDisplay()Ljava/lang/String;: I71 Branch 12 IFEQ L281 - true
   * Goal 5. org.objectweb.cjdbc.common.util.Stats.singleLineDisplay()Ljava/lang/String;: I107 Branch 13 IFNE L285 - false
   * Goal 6. org.objectweb.cjdbc.common.util.Stats.singleLineDisplay()Ljava/lang/String;: I169 Branch 14 IFEQ L292 - true
   * Goal 7. org.objectweb.cjdbc.common.util.Stats.singleLineDisplay()Ljava/lang/String;: I196 Branch 15 IFEQ L293 - true
   */

	@Test(timeout=300000)
  public void test12()  throws Throwable  {
      Stats stats0 = new Stats("");
      String string0 = stats0.singleLineDisplay();
      assertEquals(" 0 0 0 0  0 0 0 0NaN requests/second", string0);
      assertEquals(9223372036854775807L, stats0.getMinTime());
      assertEquals((-9223372036854775808L), stats0.getMaxTime());
  }

  //Test case number: 13
  /*
   * 10 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.util.Stats.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.util.Stats.reset()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.util.Stats.updateTime(J)V: I5 Branch 1 IFGE L121 - true
   * Goal 4. org.objectweb.cjdbc.common.util.Stats.updateTime(J)V: I37 Branch 2 IFLE L128 - false
   * Goal 5. org.objectweb.cjdbc.common.util.Stats.updateTime(J)V: I49 Branch 3 IFGE L130 - false
   * Goal 6. org.objectweb.cjdbc.common.util.Stats.singleLineDisplay()Ljava/lang/String;: I31 Branch 11 IFNE L277 - false
   * Goal 7. org.objectweb.cjdbc.common.util.Stats.singleLineDisplay()Ljava/lang/String;: I71 Branch 12 IFEQ L281 - false
   * Goal 8. org.objectweb.cjdbc.common.util.Stats.singleLineDisplay()Ljava/lang/String;: I107 Branch 13 IFNE L285 - false
   * Goal 9. org.objectweb.cjdbc.common.util.Stats.singleLineDisplay()Ljava/lang/String;: I169 Branch 14 IFEQ L292 - false
   * Goal 10. org.objectweb.cjdbc.common.util.Stats.singleLineDisplay()Ljava/lang/String;: I196 Branch 15 IFEQ L293 - false
   */

	@Test(timeout=300000)
  public void test13()  throws Throwable  {
      Stats stats0 = new Stats("");
      stats0.updateTime(2102L);
      stats0.singleLineDisplay();
      assertEquals(2102L, stats0.getTotalTime());
  }

  //Test case number: 14
  /*
   * 5 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.util.Stats.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.util.Stats.incrementCount()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.util.Stats.reset()V: root-Branch
   * Goal 4. org.objectweb.cjdbc.common.util.Stats.toStringTable()[Ljava/lang/String;: I31 Branch 16 IFNE L306 - true
   * Goal 5. org.objectweb.cjdbc.common.util.Stats.toStringTable()[Ljava/lang/String;: I63 Branch 17 IFNE L306 - true
   */

	@Test(timeout=300000)
  public void test14()  throws Throwable  {
      Stats stats0 = new Stats("GMT");
      stats0.incrementCount();
      stats0.toStringTable();
      assertEquals(1, stats0.getCount());
  }

  //Test case number: 15
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.util.Stats.<init>(Ljava/lang/String;)V: root-Branch
   * Goal 2. org.objectweb.cjdbc.common.util.Stats.reset()V: root-Branch
   * Goal 3. org.objectweb.cjdbc.common.util.Stats.toStringTable()[Ljava/lang/String;: I31 Branch 16 IFNE L306 - false
   * Goal 4. org.objectweb.cjdbc.common.util.Stats.toStringTable()[Ljava/lang/String;: I63 Branch 17 IFNE L306 - false
   */

	@Test(timeout=300000)
  public void test15()  throws Throwable  {
      Stats stats0 = new Stats("  Min time: ");
      stats0.toStringTable();
      assertEquals((-9223372036854775808L), stats0.getMaxTime());
      assertEquals(0, stats0.getCount());
      assertEquals(9223372036854775807L, stats0.getMinTime());
      assertEquals(0L, stats0.getTotalTime());
      assertEquals(0, stats0.getError());
  }
}
