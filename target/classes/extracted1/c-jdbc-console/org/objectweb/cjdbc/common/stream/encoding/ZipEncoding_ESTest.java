/*
 * This file was automatically generated by EvoSuite
 * Mon Jul 18 16:14:09 GMT 2016
 */

package org.objectweb.cjdbc.common.stream.encoding;

import org.junit.Test;
import static xcorpus.AssertionAdapter.*;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.junit.runner.RunWith;
import org.objectweb.cjdbc.common.stream.encoding.ZipEncoding;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true) 
public class ZipEncoding_ESTest extends ZipEncoding_ESTest_scaffolding {

  //Test case number: 0
  /*
   * 1 covered goal:
   * Goal 1. org.objectweb.cjdbc.common.stream.encoding.ZipEncoding.<init>()V: root-Branch
   */

	@Test(timeout=300000)
  public void test0()  throws Throwable  {
      ZipEncoding zipEncoding0 = new ZipEncoding();
  }

  //Test case number: 1
  /*
   * 4 covered goals:
   * Goal 1. org.objectweb.cjdbc.common.stream.encoding.ZipEncoding.encode([B)[B: I41 Branch 1 IF_ICMPLE L61 - true
   * Goal 2. org.objectweb.cjdbc.common.stream.encoding.ZipEncoding.encode([B)[B: I41 Branch 1 IF_ICMPLE L61 - false
   * Goal 3. org.objectweb.cjdbc.common.stream.encoding.ZipEncoding.decode([B)[B: I36 Branch 2 IF_ICMPLE L86 - true
   * Goal 4. org.objectweb.cjdbc.common.stream.encoding.ZipEncoding.decode([B)[B: I36 Branch 2 IF_ICMPLE L86 - false
   */

	@Test(timeout=300000)
  public void test1()  throws Throwable  {
      byte[] byteArray0 = new byte[3];
      byte[] byteArray1 = ZipEncoding.encode(byteArray0);
      byte[] byteArray2 = ZipEncoding.decode(byteArray1);
      assertArrayEquals(new byte[] {(byte)0, (byte)0, (byte)0}, byteArray2);
      assertArrayEquals(new byte[] {(byte)99, (byte)96, (byte)96, (byte)0, (byte)0}, byteArray1);
  }
}
